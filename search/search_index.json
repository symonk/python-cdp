{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p><code>python-cdp</code> is a python library to interact with the chrome devtools protocol (CDP).</p>"},{"location":"getting_started/","title":"Quick Start","text":""},{"location":"getting_started/#getting-started","title":"Getting Started","text":""},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>cdp<ul> <li>accessibility</li> <li>animation</li> <li>audits</li> <li>background_service</li> <li>browser</li> <li>cache_storage</li> <li>cast</li> <li>console</li> <li>css</li> <li>database</li> <li>debugger</li> <li>device_access</li> <li>device_orientation</li> <li>dom</li> <li>dom_debugger</li> <li>dom_snapshot</li> <li>dom_storage</li> <li>emulation</li> <li>event_breakpoints</li> <li>fed_cm</li> <li>fetch</li> <li>headless_experimental</li> <li>heap_profiler</li> <li>indexed_db</li> <li>input</li> <li>inspector</li> <li>io</li> <li>layer_tree</li> <li>log</li> <li>media</li> <li>memory</li> <li>network</li> <li>overlay</li> <li>page</li> <li>performance</li> <li>performance_timeline</li> <li>preload</li> <li>profiler</li> <li>runtime</li> <li>schema</li> <li>security</li> <li>service_worker</li> <li>storage</li> <li>system_info</li> <li>target</li> <li>tethering</li> <li>tracing</li> <li>utils</li> <li>web_audio</li> <li>web_authn</li> </ul> </li> <li>client<ul> <li>client</li> </ul> </li> </ul>"},{"location":"reference/cdp/","title":"Index","text":""},{"location":"reference/cdp/#cdp.accessibility","title":"<code>accessibility</code>","text":""},{"location":"reference/cdp/#cdp.accessibility.AXNode","title":"<code>AXNode</code>  <code>dataclass</code>","text":"<p>A node in the accessibility tree.</p>"},{"location":"reference/cdp/#cdp.accessibility.AXNodeId","title":"<code>AXNodeId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique accessibility node identifier.</p>"},{"location":"reference/cdp/#cdp.accessibility.AXProperty","title":"<code>AXProperty</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.accessibility.AXPropertyName","title":"<code>AXPropertyName</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Values of AXProperty name:</p> <ul> <li>from 'busy' to 'roledescription': states which apply to every AX node</li> <li>from 'live' to 'root': attributes which apply to nodes in live regions</li> <li>from 'autocomplete' to 'valuetext': attributes which apply to widgets</li> <li>from 'checked' to 'selected': states which apply to widgets</li> <li>from 'activedescendant' to 'owns' - relationships between elements other than parent/child/sibling.</li> </ul>"},{"location":"reference/cdp/#cdp.accessibility.AXRelatedNode","title":"<code>AXRelatedNode</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.accessibility.AXValue","title":"<code>AXValue</code>  <code>dataclass</code>","text":"<p>A single computed AX property.</p>"},{"location":"reference/cdp/#cdp.accessibility.AXValueNativeSourceType","title":"<code>AXValueNativeSourceType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible native property sources (as a subtype of a particular AXValueSourceType).</p>"},{"location":"reference/cdp/#cdp.accessibility.AXValueSource","title":"<code>AXValueSource</code>  <code>dataclass</code>","text":"<p>A single source for a computed AX property.</p>"},{"location":"reference/cdp/#cdp.accessibility.AXValueSourceType","title":"<code>AXValueSourceType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible property sources.</p>"},{"location":"reference/cdp/#cdp.accessibility.AXValueType","title":"<code>AXValueType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible property types.</p>"},{"location":"reference/cdp/#cdp.accessibility.LoadComplete","title":"<code>LoadComplete</code>  <code>dataclass</code>","text":"<p>The loadComplete event mirrors the load complete event sent by the browser to assistive technology when the web page has finished loading.</p>"},{"location":"reference/cdp/#cdp.accessibility.NodesUpdated","title":"<code>NodesUpdated</code>  <code>dataclass</code>","text":"<p>The nodesUpdated event is sent every time a previously requested node has changed the in tree.</p>"},{"location":"reference/cdp/#cdp.accessibility.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables the accessibility domain.</p>"},{"location":"reference/cdp/#cdp.accessibility.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.accessibility.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables the accessibility domain which causes <code>AXNodeId</code>s to remain consistent between method calls.</p> <p>This turns on accessibility for the page, which can impact performance until accessibility is disabled. # noqa</p>"},{"location":"reference/cdp/#cdp.accessibility.get_ax_node_and_ancestors","title":"<code>get_ax_node_and_ancestors()</code>  <code>async</code>","text":"<p>Fetches a node and all ancestors up to and including the root.</p> <p>Requires <code>enable()</code> to have been called previously. # noqa</p>"},{"location":"reference/cdp/#cdp.accessibility.get_child_ax_nodes","title":"<code>get_child_ax_nodes()</code>  <code>async</code>","text":"<p>Fetches a particular accessibility node by AXNodeId.</p> <p>Requires <code>enable()</code> to have been called previously. # noqa</p>"},{"location":"reference/cdp/#cdp.accessibility.get_full_ax_tree","title":"<code>get_full_ax_tree()</code>  <code>async</code>","text":"<p>Fetches the entire accessibility tree for the root Document # noqa.</p>"},{"location":"reference/cdp/#cdp.accessibility.get_partial_ax_tree","title":"<code>get_partial_ax_tree()</code>  <code>async</code>","text":"<p>Fetches the accessibility node and partial accessibility tree for this DOM node, if it exists.</p>"},{"location":"reference/cdp/#cdp.accessibility.get_partial_ax_tree--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.accessibility.get_root_ax_node","title":"<code>get_root_ax_node()</code>  <code>async</code>","text":"<p>Fetches the root node.</p> <p>Requires <code>enable()</code> to have been called previously. # noqa</p>"},{"location":"reference/cdp/#cdp.accessibility.query_ax_tree","title":"<code>query_ax_tree()</code>  <code>async</code>","text":"<p>Query a DOM node's accessibility subtree for accessible name and role.</p> <p>This command computes the name and role for all nodes in the subtree, including those that are ignored for accessibility, and returns those that mactch the specified name and role. If no DOM node is specified, or the DOM node does not exist, the command returns an error. If neither <code>accessibleName</code> or <code>role</code> is specified, it returns all the accessibility nodes in the subtree. # noqa</p>"},{"location":"reference/cdp/#cdp.animation","title":"<code>animation</code>","text":""},{"location":"reference/cdp/#cdp.animation.Animation","title":"<code>Animation</code>  <code>dataclass</code>","text":"<p>Animation instance.</p>"},{"location":"reference/cdp/#cdp.animation.AnimationCanceled","title":"<code>AnimationCanceled</code>  <code>dataclass</code>","text":"<p>Event for when an animation has been cancelled.</p>"},{"location":"reference/cdp/#cdp.animation.AnimationCreated","title":"<code>AnimationCreated</code>  <code>dataclass</code>","text":"<p>Event for each animation that has been created.</p>"},{"location":"reference/cdp/#cdp.animation.AnimationEffect","title":"<code>AnimationEffect</code>  <code>dataclass</code>","text":"<p>AnimationEffect instance.</p>"},{"location":"reference/cdp/#cdp.animation.AnimationStarted","title":"<code>AnimationStarted</code>  <code>dataclass</code>","text":"<p>Event for animation that has been started.</p>"},{"location":"reference/cdp/#cdp.animation.KeyframeStyle","title":"<code>KeyframeStyle</code>  <code>dataclass</code>","text":"<p>Keyframe Style.</p>"},{"location":"reference/cdp/#cdp.animation.KeyframesRule","title":"<code>KeyframesRule</code>  <code>dataclass</code>","text":"<p>Keyframes Rule.</p>"},{"location":"reference/cdp/#cdp.animation.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables animation domain notifications.</p>"},{"location":"reference/cdp/#cdp.animation.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.animation.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables animation domain notifications.</p>"},{"location":"reference/cdp/#cdp.animation.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.animation.get_current_time","title":"<code>get_current_time()</code>  <code>async</code>","text":"<p>Returns the current time of the an animation.</p>"},{"location":"reference/cdp/#cdp.animation.get_current_time--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.animation.get_playback_rate","title":"<code>get_playback_rate()</code>  <code>async</code>","text":"<p>Gets the playback rate of the document timeline.</p>"},{"location":"reference/cdp/#cdp.animation.get_playback_rate--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.animation.release_animations","title":"<code>release_animations()</code>  <code>async</code>","text":"<p>Releases a set of animations to no longer be manipulated.</p>"},{"location":"reference/cdp/#cdp.animation.release_animations--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.animation.resolve_animation","title":"<code>resolve_animation()</code>  <code>async</code>","text":"<p>Gets the remote object of the Animation.</p>"},{"location":"reference/cdp/#cdp.animation.resolve_animation--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.animation.seek_animations","title":"<code>seek_animations()</code>  <code>async</code>","text":"<p>Seek a set of animations to a particular time within each animation.</p>"},{"location":"reference/cdp/#cdp.animation.seek_animations--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.animation.set_paused","title":"<code>set_paused()</code>  <code>async</code>","text":"<p>Sets the paused state of a set of animations.</p>"},{"location":"reference/cdp/#cdp.animation.set_paused--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.animation.set_playback_rate","title":"<code>set_playback_rate()</code>  <code>async</code>","text":"<p>Sets the playback rate of the document timeline.</p>"},{"location":"reference/cdp/#cdp.animation.set_playback_rate--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.animation.set_timing","title":"<code>set_timing()</code>  <code>async</code>","text":"<p>Sets the timing of an animation node.</p>"},{"location":"reference/cdp/#cdp.animation.set_timing--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.audits","title":"<code>audits</code>","text":""},{"location":"reference/cdp/#cdp.audits.AffectedCookie","title":"<code>AffectedCookie</code>  <code>dataclass</code>","text":"<p>Information about a cookie that is affected by an inspector issue.</p>"},{"location":"reference/cdp/#cdp.audits.AffectedFrame","title":"<code>AffectedFrame</code>  <code>dataclass</code>","text":"<p>Information about the frame affected by an inspector issue.</p>"},{"location":"reference/cdp/#cdp.audits.AffectedRequest","title":"<code>AffectedRequest</code>  <code>dataclass</code>","text":"<p>Information about a request that is affected by an inspector issue.</p>"},{"location":"reference/cdp/#cdp.audits.AttributionReportingIssueDetails","title":"<code>AttributionReportingIssueDetails</code>  <code>dataclass</code>","text":"<p>Details for issues around \"Attribution Reporting API\" usage.</p> <p>Explainer: https://github.com/WICG/attribution-reporting-api</p>"},{"location":"reference/cdp/#cdp.audits.AttributionReportingIssueType","title":"<code>AttributionReportingIssueType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.BlockedByResponseIssueDetails","title":"<code>BlockedByResponseIssueDetails</code>  <code>dataclass</code>","text":"<p>Details for a request that has been blocked with the BLOCKED_BY_RESPONSE code.</p> <p>Currently only used for COEP/COOP, but may be extended to include some CSP errors in the future.</p>"},{"location":"reference/cdp/#cdp.audits.BlockedByResponseReason","title":"<code>BlockedByResponseReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum indicating the reason a response has been blocked.</p> <p>These reasons are refinements of the net error BLOCKED_BY_RESPONSE.</p>"},{"location":"reference/cdp/#cdp.audits.ClientHintIssueDetails","title":"<code>ClientHintIssueDetails</code>  <code>dataclass</code>","text":"<p>This issue tracks client hints related issues.</p> <p>It's used to deprecate old features, encourage the use of new ones, and provide general guidance.</p>"},{"location":"reference/cdp/#cdp.audits.ClientHintIssueReason","title":"<code>ClientHintIssueReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.ContentSecurityPolicyIssueDetails","title":"<code>ContentSecurityPolicyIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.ContentSecurityPolicyViolationType","title":"<code>ContentSecurityPolicyViolationType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.CookieExclusionReason","title":"<code>CookieExclusionReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.CookieIssueDetails","title":"<code>CookieIssueDetails</code>  <code>dataclass</code>","text":"<p>This information is currently necessary, as the front-end has a difficult time finding a specific cookie.</p> <p>With this, we can convey specific error information without the cookie.</p>"},{"location":"reference/cdp/#cdp.audits.CookieOperation","title":"<code>CookieOperation</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.CookieWarningReason","title":"<code>CookieWarningReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.CorsIssueDetails","title":"<code>CorsIssueDetails</code>  <code>dataclass</code>","text":"<p>Details for a CORS related issue, e.g. a warning or error related to CORS RFC1918 enforcement.</p>"},{"location":"reference/cdp/#cdp.audits.DeprecationIssueDetails","title":"<code>DeprecationIssueDetails</code>  <code>dataclass</code>","text":"<p>This issue tracks information needed to print a deprecation message.</p> <p>https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/third_party/blink/renderer/core/frame/deprecation/README.md</p>"},{"location":"reference/cdp/#cdp.audits.FederatedAuthRequestIssueDetails","title":"<code>FederatedAuthRequestIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.FederatedAuthRequestIssueReason","title":"<code>FederatedAuthRequestIssueReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Represents the failure reason when a federated authentication reason fails.</p> <p>Should be updated alongside RequestIdTokenStatus in third_party/blink/public/mojom/devtools/inspector_issue.mojom to include all cases except for success.</p>"},{"location":"reference/cdp/#cdp.audits.GenericIssueDetails","title":"<code>GenericIssueDetails</code>  <code>dataclass</code>","text":"<p>Depending on the concrete errorType, different properties are set.</p>"},{"location":"reference/cdp/#cdp.audits.GenericIssueErrorType","title":"<code>GenericIssueErrorType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.HeavyAdIssueDetails","title":"<code>HeavyAdIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.HeavyAdReason","title":"<code>HeavyAdReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.HeavyAdResolutionStatus","title":"<code>HeavyAdResolutionStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.InspectorIssue","title":"<code>InspectorIssue</code>  <code>dataclass</code>","text":"<p>An inspector issue reported from the back-end.</p>"},{"location":"reference/cdp/#cdp.audits.InspectorIssueCode","title":"<code>InspectorIssueCode</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>A unique identifier for the type of issue.</p> <p>Each type may use one of the optional fields in InspectorIssueDetails to convey more specific information about the kind of issue.</p>"},{"location":"reference/cdp/#cdp.audits.InspectorIssueDetails","title":"<code>InspectorIssueDetails</code>  <code>dataclass</code>","text":"<p>This struct holds a list of optional fields with additional information specific to the kind of issue.</p> <p>When adding a new issue code, please also add a new optional field to this type.</p>"},{"location":"reference/cdp/#cdp.audits.IssueAdded","title":"<code>IssueAdded</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.IssueId","title":"<code>IssueId</code>","text":"<p>         Bases: <code>str</code></p> <p>A unique id for a DevTools inspector issue.</p> <p>Allows other entities (e.g. exceptions, CDP message, console messages, etc.) to reference an issue.</p>"},{"location":"reference/cdp/#cdp.audits.LowTextContrastIssueDetails","title":"<code>LowTextContrastIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.MixedContentIssueDetails","title":"<code>MixedContentIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.MixedContentResolutionStatus","title":"<code>MixedContentResolutionStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.MixedContentResourceType","title":"<code>MixedContentResourceType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.NavigatorUserAgentIssueDetails","title":"<code>NavigatorUserAgentIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.QuirksModeIssueDetails","title":"<code>QuirksModeIssueDetails</code>  <code>dataclass</code>","text":"<p>Details for issues about documents in Quirks Mode or Limited Quirks Mode that affects page layouting.</p>"},{"location":"reference/cdp/#cdp.audits.SharedArrayBufferIssueDetails","title":"<code>SharedArrayBufferIssueDetails</code>  <code>dataclass</code>","text":"<p>Details for a issue arising from an SAB being instantiated in, or transferred to a context that is not cross- origin isolated.</p>"},{"location":"reference/cdp/#cdp.audits.SharedArrayBufferIssueType","title":"<code>SharedArrayBufferIssueType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.SourceCodeLocation","title":"<code>SourceCodeLocation</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.TrustedWebActivityIssueDetails","title":"<code>TrustedWebActivityIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.TwaQualityEnforcementViolationType","title":"<code>TwaQualityEnforcementViolationType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.audits.check_contrast","title":"<code>check_contrast()</code>  <code>async</code>","text":"<p>Runs the contrast check for the target page.</p> <p>Found issues are reported using Audits.issueAdded event. # noqa</p>"},{"location":"reference/cdp/#cdp.audits.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables issues domain, prevents further issues from being reported to the client.</p>"},{"location":"reference/cdp/#cdp.audits.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.audits.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables issues domain, sends the issues collected so far to the client by means of the <code>issueAdded</code> event.</p>"},{"location":"reference/cdp/#cdp.audits.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.audits.get_encoded_response","title":"<code>get_encoded_response()</code>  <code>async</code>","text":"<p>Returns the response body and size if it were re-encoded with the specified settings.</p> <p>Only applies to images. # noqa</p>"},{"location":"reference/cdp/#cdp.background_service","title":"<code>background_service</code>","text":""},{"location":"reference/cdp/#cdp.background_service.BackgroundServiceEvent","title":"<code>BackgroundServiceEvent</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.background_service.BackgroundServiceEventReceived","title":"<code>BackgroundServiceEventReceived</code>  <code>dataclass</code>","text":"<p>Called with all existing backgroundServiceEvents when enabled, and all new events afterwards if enabled and recording.</p>"},{"location":"reference/cdp/#cdp.background_service.EventMetadata","title":"<code>EventMetadata</code>  <code>dataclass</code>","text":"<p>A key-value pair for additional event information to pass along.</p>"},{"location":"reference/cdp/#cdp.background_service.RecordingStateChanged","title":"<code>RecordingStateChanged</code>  <code>dataclass</code>","text":"<p>Called when the recording state for the service has been updated.</p>"},{"location":"reference/cdp/#cdp.background_service.ServiceName","title":"<code>ServiceName</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The Background Service that will be associated with the commands/events.</p> <p>Every Background Service operates independently, but they share the same API.</p>"},{"location":"reference/cdp/#cdp.background_service.clear_events","title":"<code>clear_events()</code>  <code>async</code>","text":"<p>Clears all stored data for the service.</p>"},{"location":"reference/cdp/#cdp.background_service.clear_events--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.background_service.set_recording","title":"<code>set_recording()</code>  <code>async</code>","text":"<p>Set the recording state for the service.</p>"},{"location":"reference/cdp/#cdp.background_service.set_recording--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.background_service.start_observing","title":"<code>start_observing()</code>  <code>async</code>","text":"<p>Enables event updates for the service.</p>"},{"location":"reference/cdp/#cdp.background_service.start_observing--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.background_service.stop_observing","title":"<code>stop_observing()</code>  <code>async</code>","text":"<p>Disables event updates for the service.</p>"},{"location":"reference/cdp/#cdp.background_service.stop_observing--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser","title":"<code>browser</code>","text":""},{"location":"reference/cdp/#cdp.browser.Bounds","title":"<code>Bounds</code>  <code>dataclass</code>","text":"<p>Browser window bounds information.</p>"},{"location":"reference/cdp/#cdp.browser.BrowserCommandId","title":"<code>BrowserCommandId</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Browser command ids used by executeBrowserCommand.</p>"},{"location":"reference/cdp/#cdp.browser.BrowserContextID","title":"<code>BrowserContextID</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.browser.Bucket","title":"<code>Bucket</code>  <code>dataclass</code>","text":"<p>Chrome histogram bucket.</p>"},{"location":"reference/cdp/#cdp.browser.DownloadProgress","title":"<code>DownloadProgress</code>  <code>dataclass</code>","text":"<p>Fired when download makes progress.</p> <p>Last call has |done| == true.</p>"},{"location":"reference/cdp/#cdp.browser.DownloadWillBegin","title":"<code>DownloadWillBegin</code>  <code>dataclass</code>","text":"<p>Fired when page is about to start a download.</p>"},{"location":"reference/cdp/#cdp.browser.Histogram","title":"<code>Histogram</code>  <code>dataclass</code>","text":"<p>Chrome histogram.</p>"},{"location":"reference/cdp/#cdp.browser.PermissionDescriptor","title":"<code>PermissionDescriptor</code>  <code>dataclass</code>","text":"<p>Definition of PermissionDescriptor defined in the Permissions API:</p> <p>https://w3c.github.io/permissions/#dictdef-permissiondescriptor.</p>"},{"location":"reference/cdp/#cdp.browser.PermissionSetting","title":"<code>PermissionSetting</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.browser.PermissionType","title":"<code>PermissionType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.browser.WindowID","title":"<code>WindowID</code>","text":"<p>         Bases: <code>int</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.browser.WindowState","title":"<code>WindowState</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The state of the browser window.</p>"},{"location":"reference/cdp/#cdp.browser.cancel_download","title":"<code>cancel_download()</code>  <code>async</code>","text":"<p>Cancel a download if in progress # noqa.</p>"},{"location":"reference/cdp/#cdp.browser.close","title":"<code>close()</code>  <code>async</code>","text":"<p>Close browser gracefully.</p>"},{"location":"reference/cdp/#cdp.browser.close--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.crash","title":"<code>crash()</code>  <code>async</code>","text":"<p>Crashes browser on the main thread.</p>"},{"location":"reference/cdp/#cdp.browser.crash--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.crash_gpu_process","title":"<code>crash_gpu_process()</code>  <code>async</code>","text":"<p>Crashes GPU process.</p>"},{"location":"reference/cdp/#cdp.browser.crash_gpu_process--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.execute_browser_command","title":"<code>execute_browser_command()</code>  <code>async</code>","text":"<p>Invoke custom browser commands used by telemetry.</p>"},{"location":"reference/cdp/#cdp.browser.execute_browser_command--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.get_browser_command_line","title":"<code>get_browser_command_line()</code>  <code>async</code>","text":"<p>Returns the command line switches for the browser process if, and only if.</p> <p>--enable-automation is on the commandline. # noqa</p>"},{"location":"reference/cdp/#cdp.browser.get_histogram","title":"<code>get_histogram()</code>  <code>async</code>","text":"<p>Get a Chrome histogram by name.</p>"},{"location":"reference/cdp/#cdp.browser.get_histogram--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.get_histograms","title":"<code>get_histograms()</code>  <code>async</code>","text":"<p>Get Chrome histograms.</p>"},{"location":"reference/cdp/#cdp.browser.get_histograms--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.get_version","title":"<code>get_version()</code>  <code>async</code>","text":"<p>Returns version information.</p>"},{"location":"reference/cdp/#cdp.browser.get_version--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.get_window_bounds","title":"<code>get_window_bounds()</code>  <code>async</code>","text":"<p>Get position and size of the browser window.</p>"},{"location":"reference/cdp/#cdp.browser.get_window_bounds--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.get_window_for_target","title":"<code>get_window_for_target()</code>  <code>async</code>","text":"<p>Get the browser window that contains the devtools target.</p>"},{"location":"reference/cdp/#cdp.browser.get_window_for_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.grant_permissions","title":"<code>grant_permissions()</code>  <code>async</code>","text":"<p>Grant specific permissions to the given origin and reject all others.</p>"},{"location":"reference/cdp/#cdp.browser.grant_permissions--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.reset_permissions","title":"<code>reset_permissions()</code>  <code>async</code>","text":"<p>Reset all permission management for all origins.</p>"},{"location":"reference/cdp/#cdp.browser.reset_permissions--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.set_dock_tile","title":"<code>set_dock_tile()</code>  <code>async</code>","text":"<p>Set dock tile details, platform-specific.</p>"},{"location":"reference/cdp/#cdp.browser.set_dock_tile--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.set_download_behavior","title":"<code>set_download_behavior()</code>  <code>async</code>","text":"<p>Set the behavior when downloading a file.</p>"},{"location":"reference/cdp/#cdp.browser.set_download_behavior--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.set_permission","title":"<code>set_permission()</code>  <code>async</code>","text":"<p>Set permission settings for given origin.</p>"},{"location":"reference/cdp/#cdp.browser.set_permission--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.browser.set_window_bounds","title":"<code>set_window_bounds()</code>  <code>async</code>","text":"<p>Set position and/or size of the browser window.</p>"},{"location":"reference/cdp/#cdp.browser.set_window_bounds--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.cache_storage","title":"<code>cache_storage</code>","text":""},{"location":"reference/cdp/#cdp.cache_storage.Cache","title":"<code>Cache</code>  <code>dataclass</code>","text":"<p>Cache identifier.</p>"},{"location":"reference/cdp/#cdp.cache_storage.CacheId","title":"<code>CacheId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique identifier of the Cache object.</p>"},{"location":"reference/cdp/#cdp.cache_storage.CachedResponse","title":"<code>CachedResponse</code>  <code>dataclass</code>","text":"<p>Cached response.</p>"},{"location":"reference/cdp/#cdp.cache_storage.CachedResponseType","title":"<code>CachedResponseType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Type of HTTP response cached.</p>"},{"location":"reference/cdp/#cdp.cache_storage.DataEntry","title":"<code>DataEntry</code>  <code>dataclass</code>","text":"<p>Data entry.</p>"},{"location":"reference/cdp/#cdp.cache_storage.Header","title":"<code>Header</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.cache_storage.delete_cache","title":"<code>delete_cache()</code>  <code>async</code>","text":"<p>Deletes a cache.</p>"},{"location":"reference/cdp/#cdp.cache_storage.delete_cache--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.cache_storage.delete_entry","title":"<code>delete_entry()</code>  <code>async</code>","text":"<p>Deletes a cache entry.</p>"},{"location":"reference/cdp/#cdp.cache_storage.delete_entry--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.cache_storage.request_cache_names","title":"<code>request_cache_names()</code>  <code>async</code>","text":"<p>Requests cache names.</p>"},{"location":"reference/cdp/#cdp.cache_storage.request_cache_names--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.cache_storage.request_cached_response","title":"<code>request_cached_response()</code>  <code>async</code>","text":"<p>Fetches cache entry.</p>"},{"location":"reference/cdp/#cdp.cache_storage.request_cached_response--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.cache_storage.request_entries","title":"<code>request_entries()</code>  <code>async</code>","text":"<p>Requests data from cache.</p>"},{"location":"reference/cdp/#cdp.cache_storage.request_entries--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.cast","title":"<code>cast</code>","text":""},{"location":"reference/cdp/#cdp.cast.IssueUpdated","title":"<code>IssueUpdated</code>  <code>dataclass</code>","text":"<p>This is fired whenever the outstanding issue/error message changes.</p> <p>|issueMessage| is empty if there is no issue.</p>"},{"location":"reference/cdp/#cdp.cast.Sink","title":"<code>Sink</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.cast.SinksUpdated","title":"<code>SinksUpdated</code>  <code>dataclass</code>","text":"<p>This is fired whenever the list of available sinks changes.</p> <p>A sink is a device or a software surface that you can cast to.</p>"},{"location":"reference/cdp/#cdp.cast.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Stops observing for sinks and issues.</p>"},{"location":"reference/cdp/#cdp.cast.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.cast.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Starts observing for sinks that can be used for tab mirroring, and if set, sinks compatible with.</p> <p>|presentationUrl| as well. When sinks are found, a.</p> <p>|sinksUpdated| event is fired. Also starts observing for issue messages. When an issue is added or removed, an |issueUpdated| event is fired. # noqa</p>"},{"location":"reference/cdp/#cdp.cast.set_sink_to_use","title":"<code>set_sink_to_use()</code>  <code>async</code>","text":"<p>Sets a sink to be used when the web page requests the browser to choose a sink via Presentation API, Remote Playback API, or Cast SDK.</p>"},{"location":"reference/cdp/#cdp.cast.set_sink_to_use--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.cast.start_desktop_mirroring","title":"<code>start_desktop_mirroring()</code>  <code>async</code>","text":"<p>Starts mirroring the desktop to the sink.</p>"},{"location":"reference/cdp/#cdp.cast.start_desktop_mirroring--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.cast.start_tab_mirroring","title":"<code>start_tab_mirroring()</code>  <code>async</code>","text":"<p>Starts mirroring the tab to the sink.</p>"},{"location":"reference/cdp/#cdp.cast.start_tab_mirroring--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.cast.stop_casting","title":"<code>stop_casting()</code>  <code>async</code>","text":"<p>Stops the active Cast session on the sink.</p>"},{"location":"reference/cdp/#cdp.cast.stop_casting--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.console","title":"<code>console</code>","text":""},{"location":"reference/cdp/#cdp.console.ConsoleMessage","title":"<code>ConsoleMessage</code>  <code>dataclass</code>","text":"<p>Console message.</p>"},{"location":"reference/cdp/#cdp.console.MessageAdded","title":"<code>MessageAdded</code>  <code>dataclass</code>","text":"<p>Issued when new console message is added.</p>"},{"location":"reference/cdp/#cdp.console.clear_messages","title":"<code>clear_messages()</code>  <code>async</code>","text":"<p>Does nothing.</p>"},{"location":"reference/cdp/#cdp.console.clear_messages--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.console.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables console domain, prevents further console messages from being reported to the client.</p>"},{"location":"reference/cdp/#cdp.console.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.console.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables console domain, sends the messages collected so far to the client by means of the <code>messageAdded</code> notification.</p>"},{"location":"reference/cdp/#cdp.console.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css","title":"<code>css</code>","text":""},{"location":"reference/cdp/#cdp.css.CSSComputedStyleProperty","title":"<code>CSSComputedStyleProperty</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.css.CSSContainerQuery","title":"<code>CSSContainerQuery</code>  <code>dataclass</code>","text":"<p>CSS container query rule descriptor.</p>"},{"location":"reference/cdp/#cdp.css.CSSKeyframeRule","title":"<code>CSSKeyframeRule</code>  <code>dataclass</code>","text":"<p>CSS keyframe rule representation.</p>"},{"location":"reference/cdp/#cdp.css.CSSKeyframesRule","title":"<code>CSSKeyframesRule</code>  <code>dataclass</code>","text":"<p>CSS keyframes rule representation.</p>"},{"location":"reference/cdp/#cdp.css.CSSLayer","title":"<code>CSSLayer</code>  <code>dataclass</code>","text":"<p>CSS Layer at-rule descriptor.</p>"},{"location":"reference/cdp/#cdp.css.CSSLayerData","title":"<code>CSSLayerData</code>  <code>dataclass</code>","text":"<p>CSS Layer data.</p>"},{"location":"reference/cdp/#cdp.css.CSSMedia","title":"<code>CSSMedia</code>  <code>dataclass</code>","text":"<p>CSS media rule descriptor.</p>"},{"location":"reference/cdp/#cdp.css.CSSPositionFallbackRule","title":"<code>CSSPositionFallbackRule</code>  <code>dataclass</code>","text":"<p>CSS position-fallback rule representation.</p>"},{"location":"reference/cdp/#cdp.css.CSSProperty","title":"<code>CSSProperty</code>  <code>dataclass</code>","text":"<p>CSS property declaration data.</p>"},{"location":"reference/cdp/#cdp.css.CSSRule","title":"<code>CSSRule</code>  <code>dataclass</code>","text":"<p>CSS rule representation.</p>"},{"location":"reference/cdp/#cdp.css.CSSScope","title":"<code>CSSScope</code>  <code>dataclass</code>","text":"<p>CSS Scope at-rule descriptor.</p>"},{"location":"reference/cdp/#cdp.css.CSSStyle","title":"<code>CSSStyle</code>  <code>dataclass</code>","text":"<p>CSS style representation.</p>"},{"location":"reference/cdp/#cdp.css.CSSStyleSheetHeader","title":"<code>CSSStyleSheetHeader</code>  <code>dataclass</code>","text":"<p>CSS stylesheet metainformation.</p>"},{"location":"reference/cdp/#cdp.css.CSSSupports","title":"<code>CSSSupports</code>  <code>dataclass</code>","text":"<p>CSS Supports at-rule descriptor.</p>"},{"location":"reference/cdp/#cdp.css.CSSTryRule","title":"<code>CSSTryRule</code>  <code>dataclass</code>","text":"<p>CSS try rule representation.</p>"},{"location":"reference/cdp/#cdp.css.FontFace","title":"<code>FontFace</code>  <code>dataclass</code>","text":"<p>Properties of a web font: https://www.w3.org/TR/2008/REC-CSS2-20080411/fonts.html#font-descriptions and additional information such as platformFontFamily and fontVariationAxes.</p>"},{"location":"reference/cdp/#cdp.css.FontVariationAxis","title":"<code>FontVariationAxis</code>  <code>dataclass</code>","text":"<p>Information about font variation axes for variable fonts.</p>"},{"location":"reference/cdp/#cdp.css.FontsUpdated","title":"<code>FontsUpdated</code>  <code>dataclass</code>","text":"<p>Fires whenever a web font is updated.</p> <p>A non-empty font parameter indicates a successfully loaded web font.</p>"},{"location":"reference/cdp/#cdp.css.InheritedPseudoElementMatches","title":"<code>InheritedPseudoElementMatches</code>  <code>dataclass</code>","text":"<p>Inherited pseudo element matches from pseudos of an ancestor node.</p>"},{"location":"reference/cdp/#cdp.css.InheritedStyleEntry","title":"<code>InheritedStyleEntry</code>  <code>dataclass</code>","text":"<p>Inherited CSS rule collection from ancestor node.</p>"},{"location":"reference/cdp/#cdp.css.MediaQuery","title":"<code>MediaQuery</code>  <code>dataclass</code>","text":"<p>Media query descriptor.</p>"},{"location":"reference/cdp/#cdp.css.MediaQueryExpression","title":"<code>MediaQueryExpression</code>  <code>dataclass</code>","text":"<p>Media query expression descriptor.</p>"},{"location":"reference/cdp/#cdp.css.MediaQueryResultChanged","title":"<code>MediaQueryResultChanged</code>  <code>dataclass</code>","text":"<p>Fires whenever a MediaQuery result changes (for example, after a browser window has been resized.) The current implementation considers only viewport-dependent media features.</p>"},{"location":"reference/cdp/#cdp.css.PlatformFontUsage","title":"<code>PlatformFontUsage</code>  <code>dataclass</code>","text":"<p>Information about amount of glyphs that were rendered with given font.</p>"},{"location":"reference/cdp/#cdp.css.PseudoElementMatches","title":"<code>PseudoElementMatches</code>  <code>dataclass</code>","text":"<p>CSS rule collection for a single pseudo style.</p>"},{"location":"reference/cdp/#cdp.css.RuleMatch","title":"<code>RuleMatch</code>  <code>dataclass</code>","text":"<p>Match data for a CSS rule.</p>"},{"location":"reference/cdp/#cdp.css.RuleUsage","title":"<code>RuleUsage</code>  <code>dataclass</code>","text":"<p>CSS coverage information.</p>"},{"location":"reference/cdp/#cdp.css.SelectorList","title":"<code>SelectorList</code>  <code>dataclass</code>","text":"<p>Selector list data.</p>"},{"location":"reference/cdp/#cdp.css.ShorthandEntry","title":"<code>ShorthandEntry</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.css.SourceRange","title":"<code>SourceRange</code>  <code>dataclass</code>","text":"<p>Text range within a resource.</p> <p>All numbers are zero-based.</p>"},{"location":"reference/cdp/#cdp.css.StyleDeclarationEdit","title":"<code>StyleDeclarationEdit</code>  <code>dataclass</code>","text":"<p>A descriptor of operation to mutate style declaration text.</p>"},{"location":"reference/cdp/#cdp.css.StyleSheetAdded","title":"<code>StyleSheetAdded</code>  <code>dataclass</code>","text":"<p>Fired whenever an active document stylesheet is added.</p>"},{"location":"reference/cdp/#cdp.css.StyleSheetChanged","title":"<code>StyleSheetChanged</code>  <code>dataclass</code>","text":"<p>Fired whenever a stylesheet is changed as a result of the client operation.</p>"},{"location":"reference/cdp/#cdp.css.StyleSheetId","title":"<code>StyleSheetId</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.css.StyleSheetOrigin","title":"<code>StyleSheetOrigin</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Stylesheet type: \"injected\" for stylesheets injected via extension, \"user-agent\" for user-agent stylesheets, \"inspector\" for stylesheets created by the inspector (i.e. those holding the \"via inspector\" rules), \"regular\" for regular stylesheets.</p>"},{"location":"reference/cdp/#cdp.css.StyleSheetRemoved","title":"<code>StyleSheetRemoved</code>  <code>dataclass</code>","text":"<p>Fired whenever an active document stylesheet is removed.</p>"},{"location":"reference/cdp/#cdp.css.Value","title":"<code>Value</code>  <code>dataclass</code>","text":"<p>Data for a simple selector (these are delimited by commas in a selector list).</p>"},{"location":"reference/cdp/#cdp.css.add_rule","title":"<code>add_rule()</code>  <code>async</code>","text":"<p>Inserts a new rule with the given <code>ruleText</code> in a stylesheet with given <code>styleSheetId</code>, at the position specified by <code>location</code>.</p>"},{"location":"reference/cdp/#cdp.css.add_rule--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.collect_class_names","title":"<code>collect_class_names()</code>  <code>async</code>","text":"<p>Returns all class names from specified stylesheet.</p>"},{"location":"reference/cdp/#cdp.css.collect_class_names--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.create_style_sheet","title":"<code>create_style_sheet()</code>  <code>async</code>","text":"<p>Creates a new special \"via-inspector\" stylesheet in the frame with given <code>frameId</code>.</p>"},{"location":"reference/cdp/#cdp.css.create_style_sheet--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables the CSS agent for the given page.</p>"},{"location":"reference/cdp/#cdp.css.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables the CSS agent for the given page.</p> <p>Clients should not assume that the CSS agent has been enabled until the result of this command is received. # noqa</p>"},{"location":"reference/cdp/#cdp.css.force_pseudo_state","title":"<code>force_pseudo_state()</code>  <code>async</code>","text":"<p>Ensures that the given node will have specified pseudo-classes whenever its style is computed by the browser.</p>"},{"location":"reference/cdp/#cdp.css.force_pseudo_state--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.get_background_colors","title":"<code>get_background_colors()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.css.get_background_colors--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.get_computed_style_for_node","title":"<code>get_computed_style_for_node()</code>  <code>async</code>","text":"<p>Returns the computed style for a DOM node identified by <code>nodeId</code>.</p>"},{"location":"reference/cdp/#cdp.css.get_computed_style_for_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.get_inline_styles_for_node","title":"<code>get_inline_styles_for_node()</code>  <code>async</code>","text":"<p>Returns the styles defined inline (explicitly in the \"style\" attribute and implicitly, using DOM attributes) for a DOM node identified by <code>nodeId</code>.</p>"},{"location":"reference/cdp/#cdp.css.get_inline_styles_for_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.get_layers_for_node","title":"<code>get_layers_for_node()</code>  <code>async</code>","text":"<p>Returns all layers parsed by the rendering engine for the tree scope of a node.</p> <p>Given a DOM element identified by nodeId, getLayersForNode returns the root layer for the nearest ancestor document or shadow root. The layer root contains the full layer tree for the tree scope and their ordering. # noqa</p>"},{"location":"reference/cdp/#cdp.css.get_matched_styles_for_node","title":"<code>get_matched_styles_for_node()</code>  <code>async</code>","text":"<p>Returns requested styles for a DOM node identified by <code>nodeId</code>.</p>"},{"location":"reference/cdp/#cdp.css.get_matched_styles_for_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.get_media_queries","title":"<code>get_media_queries()</code>  <code>async</code>","text":"<p>Returns all media queries parsed by the rendering engine.</p>"},{"location":"reference/cdp/#cdp.css.get_media_queries--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.get_platform_fonts_for_node","title":"<code>get_platform_fonts_for_node()</code>  <code>async</code>","text":"<p>Requests information about platform fonts which we used to render child TextNodes in the given node.</p>"},{"location":"reference/cdp/#cdp.css.get_platform_fonts_for_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.get_style_sheet_text","title":"<code>get_style_sheet_text()</code>  <code>async</code>","text":"<p>Returns the current textual content for a stylesheet.</p>"},{"location":"reference/cdp/#cdp.css.get_style_sheet_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.set_container_query_text","title":"<code>set_container_query_text()</code>  <code>async</code>","text":"<p>Modifies the expression of a container query.</p>"},{"location":"reference/cdp/#cdp.css.set_container_query_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.set_effective_property_value_for_node","title":"<code>set_effective_property_value_for_node()</code>  <code>async</code>","text":"<p>Find a rule with the given active property for the given node and set the new value for this property # noqa.</p>"},{"location":"reference/cdp/#cdp.css.set_keyframe_key","title":"<code>set_keyframe_key()</code>  <code>async</code>","text":"<p>Modifies the keyframe rule key text.</p>"},{"location":"reference/cdp/#cdp.css.set_keyframe_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.set_local_fonts_enabled","title":"<code>set_local_fonts_enabled()</code>  <code>async</code>","text":"<p>Enables/disables rendering of local CSS fonts (enabled by default).</p>"},{"location":"reference/cdp/#cdp.css.set_local_fonts_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.set_media_text","title":"<code>set_media_text()</code>  <code>async</code>","text":"<p>Modifies the rule selector.</p>"},{"location":"reference/cdp/#cdp.css.set_media_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.set_rule_selector","title":"<code>set_rule_selector()</code>  <code>async</code>","text":"<p>Modifies the rule selector.</p>"},{"location":"reference/cdp/#cdp.css.set_rule_selector--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.set_scope_text","title":"<code>set_scope_text()</code>  <code>async</code>","text":"<p>Modifies the expression of a scope at-rule.</p>"},{"location":"reference/cdp/#cdp.css.set_scope_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.set_style_sheet_text","title":"<code>set_style_sheet_text()</code>  <code>async</code>","text":"<p>Sets the new stylesheet text.</p>"},{"location":"reference/cdp/#cdp.css.set_style_sheet_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.set_style_texts","title":"<code>set_style_texts()</code>  <code>async</code>","text":"<p>Applies specified style edits one after another in the given order.</p>"},{"location":"reference/cdp/#cdp.css.set_style_texts--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.set_supports_text","title":"<code>set_supports_text()</code>  <code>async</code>","text":"<p>Modifies the expression of a supports at-rule.</p>"},{"location":"reference/cdp/#cdp.css.set_supports_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.start_rule_usage_tracking","title":"<code>start_rule_usage_tracking()</code>  <code>async</code>","text":"<p>Enables the selector recording.</p>"},{"location":"reference/cdp/#cdp.css.start_rule_usage_tracking--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.stop_rule_usage_tracking","title":"<code>stop_rule_usage_tracking()</code>  <code>async</code>","text":"<p>Stop tracking rule usage and return the list of rules that were used since last call to <code>takeCoverageDelta</code> (or since start of coverage instrumentation).</p>"},{"location":"reference/cdp/#cdp.css.stop_rule_usage_tracking--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.take_computed_style_updates","title":"<code>take_computed_style_updates()</code>  <code>async</code>","text":"<p>Polls the next batch of computed style updates.</p>"},{"location":"reference/cdp/#cdp.css.take_computed_style_updates--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.take_coverage_delta","title":"<code>take_coverage_delta()</code>  <code>async</code>","text":"<p>Obtain list of rules that became used since last call to this method (or since start of coverage instrumentation).</p>"},{"location":"reference/cdp/#cdp.css.take_coverage_delta--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.css.track_computed_style_updates","title":"<code>track_computed_style_updates()</code>  <code>async</code>","text":"<p>Starts tracking the given computed styles for updates.</p> <p>The specified array of properties replaces the one previously specified. Pass empty array to disable tracking. Use takeComputedStyleUpdates to retrieve the list of nodes that had properties modified. The changes to computed style properties are only tracked for nodes pushed to the front-end by the DOM agent. If no changes to the tracked properties occur after the node has been pushed to the front-end, no updates will be issued for the node. # noqa</p>"},{"location":"reference/cdp/#cdp.database","title":"<code>database</code>","text":""},{"location":"reference/cdp/#cdp.database.AddDatabase","title":"<code>AddDatabase</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.database.Database","title":"<code>Database</code>  <code>dataclass</code>","text":"<p>Database object.</p>"},{"location":"reference/cdp/#cdp.database.DatabaseId","title":"<code>DatabaseId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique identifier of Database object.</p>"},{"location":"reference/cdp/#cdp.database.Error","title":"<code>Error</code>  <code>dataclass</code>","text":"<p>Database error.</p>"},{"location":"reference/cdp/#cdp.database.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables database tracking, prevents database events from being sent to the client.</p>"},{"location":"reference/cdp/#cdp.database.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.database.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables database tracking, database events will now be delivered to the client.</p>"},{"location":"reference/cdp/#cdp.database.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.database.execute_sql","title":"<code>execute_sql()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.database.execute_sql--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.database.get_database_table_names","title":"<code>get_database_table_names()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.database.get_database_table_names--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger","title":"<code>debugger</code>","text":""},{"location":"reference/cdp/#cdp.debugger.BreakLocation","title":"<code>BreakLocation</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.debugger.BreakpointId","title":"<code>BreakpointId</code>","text":"<p>         Bases: <code>str</code></p> <p>Breakpoint identifier.</p>"},{"location":"reference/cdp/#cdp.debugger.BreakpointResolved","title":"<code>BreakpointResolved</code>  <code>dataclass</code>","text":"<p>Fired when breakpoint is resolved to an actual script and location.</p>"},{"location":"reference/cdp/#cdp.debugger.CallFrame","title":"<code>CallFrame</code>  <code>dataclass</code>","text":"<p>JavaScript call frame.</p> <p>Array of call frames form the call stack.</p>"},{"location":"reference/cdp/#cdp.debugger.CallFrameId","title":"<code>CallFrameId</code>","text":"<p>         Bases: <code>str</code></p> <p>Call frame identifier.</p>"},{"location":"reference/cdp/#cdp.debugger.DebugSymbols","title":"<code>DebugSymbols</code>  <code>dataclass</code>","text":"<p>Debug symbols available for a wasm script.</p>"},{"location":"reference/cdp/#cdp.debugger.Location","title":"<code>Location</code>  <code>dataclass</code>","text":"<p>Location in the source code.</p>"},{"location":"reference/cdp/#cdp.debugger.LocationRange","title":"<code>LocationRange</code>  <code>dataclass</code>","text":"<p>Location range within one script.</p>"},{"location":"reference/cdp/#cdp.debugger.Paused","title":"<code>Paused</code>  <code>dataclass</code>","text":"<p>Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.</p>"},{"location":"reference/cdp/#cdp.debugger.Resumed","title":"<code>Resumed</code>  <code>dataclass</code>","text":"<p>Fired when the virtual machine resumed execution.</p>"},{"location":"reference/cdp/#cdp.debugger.Scope","title":"<code>Scope</code>  <code>dataclass</code>","text":"<p>Scope description.</p>"},{"location":"reference/cdp/#cdp.debugger.ScriptFailedToParse","title":"<code>ScriptFailedToParse</code>  <code>dataclass</code>","text":"<p>Fired when virtual machine fails to parse the script.</p>"},{"location":"reference/cdp/#cdp.debugger.ScriptLanguage","title":"<code>ScriptLanguage</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible script languages.</p>"},{"location":"reference/cdp/#cdp.debugger.ScriptParsed","title":"<code>ScriptParsed</code>  <code>dataclass</code>","text":"<p>Fired when virtual machine parses script.</p> <p>This event is also fired for all known and uncollected scripts upon enabling debugger.</p>"},{"location":"reference/cdp/#cdp.debugger.ScriptPosition","title":"<code>ScriptPosition</code>  <code>dataclass</code>","text":"<p>Location in the source code.</p>"},{"location":"reference/cdp/#cdp.debugger.SearchMatch","title":"<code>SearchMatch</code>  <code>dataclass</code>","text":"<p>Search match for resource.</p>"},{"location":"reference/cdp/#cdp.debugger.WasmDisassemblyChunk","title":"<code>WasmDisassemblyChunk</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.debugger.continue_to_location","title":"<code>continue_to_location()</code>  <code>async</code>","text":"<p>Continues execution until specific location is reached.</p>"},{"location":"reference/cdp/#cdp.debugger.continue_to_location--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables debugger for given page.</p>"},{"location":"reference/cdp/#cdp.debugger.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.disassemble_wasm_module","title":"<code>disassemble_wasm_module()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.debugger.disassemble_wasm_module--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables debugger for the given page.</p> <p>Clients should not assume that the debugging has been enabled until the result for this command is received. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.evaluate_on_call_frame","title":"<code>evaluate_on_call_frame()</code>  <code>async</code>","text":"<p>Evaluates expression on a given call frame.</p>"},{"location":"reference/cdp/#cdp.debugger.evaluate_on_call_frame--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.get_possible_breakpoints","title":"<code>get_possible_breakpoints()</code>  <code>async</code>","text":"<p>Returns possible locations for breakpoint.</p> <p>scriptId in start and end range locations should be the same. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.get_script_source","title":"<code>get_script_source()</code>  <code>async</code>","text":"<p>Returns source for the script with given id.</p>"},{"location":"reference/cdp/#cdp.debugger.get_script_source--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.get_stack_trace","title":"<code>get_stack_trace()</code>  <code>async</code>","text":"<p>Returns stack trace with given <code>stackTraceId</code>.</p>"},{"location":"reference/cdp/#cdp.debugger.get_stack_trace--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.get_wasm_bytecode","title":"<code>get_wasm_bytecode()</code>  <code>async</code>","text":"<p>This command is deprecated.</p> <p>Use getScriptSource instead. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.next_wasm_disassembly_chunk","title":"<code>next_wasm_disassembly_chunk()</code>  <code>async</code>","text":"<p>Disassemble the next chunk of lines for the module corresponding to the stream.</p> <p>If disassembly is complete, this API will invalidate the streamId and return an empty chunk. Any subsequent calls for the now invalid stream will return errors. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.pause","title":"<code>pause()</code>  <code>async</code>","text":"<p>Stops on the next JavaScript statement.</p>"},{"location":"reference/cdp/#cdp.debugger.pause--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.pause_on_async_call","title":"<code>pause_on_async_call()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.debugger.pause_on_async_call--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.remove_breakpoint","title":"<code>remove_breakpoint()</code>  <code>async</code>","text":"<p>Removes JavaScript breakpoint.</p>"},{"location":"reference/cdp/#cdp.debugger.remove_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.restart_frame","title":"<code>restart_frame()</code>  <code>async</code>","text":"<p>Restarts particular call frame from the beginning. The old, deprecated behavior of <code>restartFrame</code> is to stay paused and allow further CDP commands after a restart was scheduled. This can cause problems with restarting, so we now continue execution immediatly after it has been scheduled until we reach the beginning of the restarted frame.</p> <p>To stay back-wards compatible, <code>restartFrame</code> now expects a <code>mode</code> parameter to be present. If the <code>mode</code> parameter is missing, <code>restartFrame</code> errors out.</p> <p>The various return values are deprecated and <code>callFrames</code> is always empty. Use the call frames from the <code>Debugger#paused</code> events instead, that fires once V8 pauses at the beginning of the restarted function. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.resume","title":"<code>resume()</code>  <code>async</code>","text":"<p>Resumes JavaScript execution.</p>"},{"location":"reference/cdp/#cdp.debugger.resume--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.search_in_content","title":"<code>search_in_content()</code>  <code>async</code>","text":"<p>Searches for given string in script content.</p>"},{"location":"reference/cdp/#cdp.debugger.search_in_content--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.set_async_call_stack_depth","title":"<code>set_async_call_stack_depth()</code>  <code>async</code>","text":"<p>Enables or disables async call stacks tracking.</p>"},{"location":"reference/cdp/#cdp.debugger.set_async_call_stack_depth--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.set_blackbox_patterns","title":"<code>set_blackbox_patterns()</code>  <code>async</code>","text":"<p>Replace previous blackbox patterns with passed ones.</p> <p>Forces backend to skip stepping/pausing in scripts with url matching one of the patterns. VM will try to leave blackboxed script by performing 'step in' several times, finally resorting to 'step out' if unsuccessful. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.set_blackboxed_ranges","title":"<code>set_blackboxed_ranges()</code>  <code>async</code>","text":"<p>Makes backend skip steps in the script in blackboxed ranges.</p> <p>VM will try leave blacklisted scripts by performing 'step in' several times, finally resorting to 'step out' if unsuccessful. Positions array contains positions where blackbox state is changed. First interval isn't blackboxed. Array should be sorted. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.set_breakpoint","title":"<code>set_breakpoint()</code>  <code>async</code>","text":"<p>Sets JavaScript breakpoint at a given location.</p>"},{"location":"reference/cdp/#cdp.debugger.set_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.set_breakpoint_by_url","title":"<code>set_breakpoint_by_url()</code>  <code>async</code>","text":"<p>Sets JavaScript breakpoint at given location specified either by URL or URL regex.</p> <p>Once this command is issued, all existing parsed scripts will have breakpoints resolved and returned in <code>locations</code> property. Further matching script parsing will result in subsequent <code>breakpointResolved</code> events issued. This logical breakpoint will survive page reloads. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.set_breakpoint_on_function_call","title":"<code>set_breakpoint_on_function_call()</code>  <code>async</code>","text":"<p>Sets JavaScript breakpoint before each call to the given function.</p> <p>If another function was created from the same source as a given one, calling it will also trigger the breakpoint. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.set_breakpoints_active","title":"<code>set_breakpoints_active()</code>  <code>async</code>","text":"<p>Activates / deactivates all breakpoints on the page.</p>"},{"location":"reference/cdp/#cdp.debugger.set_breakpoints_active--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.set_instrumentation_breakpoint","title":"<code>set_instrumentation_breakpoint()</code>  <code>async</code>","text":"<p>Sets instrumentation breakpoint.</p>"},{"location":"reference/cdp/#cdp.debugger.set_instrumentation_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.set_pause_on_exceptions","title":"<code>set_pause_on_exceptions()</code>  <code>async</code>","text":"<p>Defines pause on exceptions state.</p> <p>Can be set to stop on all exceptions, uncaught exceptions, or caught exceptions, no exceptions. Initial pause on exceptions state is <code>none</code>. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.set_return_value","title":"<code>set_return_value()</code>  <code>async</code>","text":"<p>Changes return value in top frame.</p> <p>Available only at return break position. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.set_script_source","title":"<code>set_script_source()</code>  <code>async</code>","text":"<p>Edits JavaScript source live.</p> <p>In general, functions that are currently on the stack can not be edited with a single exception: If the edited function is the top-most stack frame and that is the only activation of that function on the stack. In this case the live edit will be successful and a <code>Debugger.restartFrame</code> for the top-most function is automatically triggered. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.set_skip_all_pauses","title":"<code>set_skip_all_pauses()</code>  <code>async</code>","text":"<p>Makes page not interrupt on any pauses (breakpoint, exception, dom exception etc).</p>"},{"location":"reference/cdp/#cdp.debugger.set_skip_all_pauses--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.set_variable_value","title":"<code>set_variable_value()</code>  <code>async</code>","text":"<p>Changes value of variable in a callframe.</p> <p>Object-based scopes are not supported and must be mutated manually. # noqa</p>"},{"location":"reference/cdp/#cdp.debugger.step_into","title":"<code>step_into()</code>  <code>async</code>","text":"<p>Steps into the function call.</p>"},{"location":"reference/cdp/#cdp.debugger.step_into--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.step_out","title":"<code>step_out()</code>  <code>async</code>","text":"<p>Steps out of the function call.</p>"},{"location":"reference/cdp/#cdp.debugger.step_out--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.debugger.step_over","title":"<code>step_over()</code>  <code>async</code>","text":"<p>Steps over the statement.</p>"},{"location":"reference/cdp/#cdp.debugger.step_over--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.device_access","title":"<code>device_access</code>","text":""},{"location":"reference/cdp/#cdp.device_access.DeviceId","title":"<code>DeviceId</code>","text":"<p>         Bases: <code>str</code></p> <p>A device id.</p>"},{"location":"reference/cdp/#cdp.device_access.DeviceRequestPrompted","title":"<code>DeviceRequestPrompted</code>  <code>dataclass</code>","text":"<p>A device request opened a user prompt to select a device.</p> <p>Respond with the selectPrompt or cancelPrompt command.</p>"},{"location":"reference/cdp/#cdp.device_access.PromptDevice","title":"<code>PromptDevice</code>  <code>dataclass</code>","text":"<p>Device information displayed in a user prompt to select a device.</p>"},{"location":"reference/cdp/#cdp.device_access.RequestId","title":"<code>RequestId</code>","text":"<p>         Bases: <code>str</code></p> <p>Device request id.</p>"},{"location":"reference/cdp/#cdp.device_access.cancel_prompt","title":"<code>cancel_prompt()</code>  <code>async</code>","text":"<p>Cancel a prompt in response to a DeviceAccess.deviceRequestPrompted event.</p>"},{"location":"reference/cdp/#cdp.device_access.cancel_prompt--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.device_access.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disable events in this domain.</p>"},{"location":"reference/cdp/#cdp.device_access.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.device_access.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enable events in this domain.</p>"},{"location":"reference/cdp/#cdp.device_access.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.device_access.select_prompt","title":"<code>select_prompt()</code>  <code>async</code>","text":"<p>Select a device in response to a DeviceAccess.deviceRequestPrompted event.</p>"},{"location":"reference/cdp/#cdp.device_access.select_prompt--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.device_orientation","title":"<code>device_orientation</code>","text":""},{"location":"reference/cdp/#cdp.device_orientation.clear_device_orientation_override","title":"<code>clear_device_orientation_override()</code>  <code>async</code>","text":"<p>Clears the overridden Device Orientation.</p>"},{"location":"reference/cdp/#cdp.device_orientation.clear_device_orientation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.device_orientation.set_device_orientation_override","title":"<code>set_device_orientation_override()</code>  <code>async</code>","text":"<p>Overrides the Device Orientation.</p>"},{"location":"reference/cdp/#cdp.device_orientation.set_device_orientation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom","title":"<code>dom</code>","text":""},{"location":"reference/cdp/#cdp.dom.AttributeModified","title":"<code>AttributeModified</code>  <code>dataclass</code>","text":"<p>Fired when <code>Element</code>'s attribute is modified.</p>"},{"location":"reference/cdp/#cdp.dom.AttributeRemoved","title":"<code>AttributeRemoved</code>  <code>dataclass</code>","text":"<p>Fired when <code>Element</code>'s attribute is removed.</p>"},{"location":"reference/cdp/#cdp.dom.BackendNode","title":"<code>BackendNode</code>  <code>dataclass</code>","text":"<p>Backend node with a friendly name.</p>"},{"location":"reference/cdp/#cdp.dom.BackendNodeId","title":"<code>BackendNodeId</code>","text":"<p>         Bases: <code>int</code></p> <p>Unique DOM node identifier used to reference a node that may not have been pushed to the front-end.</p>"},{"location":"reference/cdp/#cdp.dom.BoxModel","title":"<code>BoxModel</code>  <code>dataclass</code>","text":"<p>Box model.</p>"},{"location":"reference/cdp/#cdp.dom.CSSComputedStyleProperty","title":"<code>CSSComputedStyleProperty</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom.CharacterDataModified","title":"<code>CharacterDataModified</code>  <code>dataclass</code>","text":"<p>Mirrors <code>DOMCharacterDataModified</code> event.</p>"},{"location":"reference/cdp/#cdp.dom.ChildNodeCountUpdated","title":"<code>ChildNodeCountUpdated</code>  <code>dataclass</code>","text":"<p>Fired when <code>Container</code>'s child node count has changed.</p>"},{"location":"reference/cdp/#cdp.dom.ChildNodeInserted","title":"<code>ChildNodeInserted</code>  <code>dataclass</code>","text":"<p>Mirrors <code>DOMNodeInserted</code> event.</p>"},{"location":"reference/cdp/#cdp.dom.ChildNodeRemoved","title":"<code>ChildNodeRemoved</code>  <code>dataclass</code>","text":"<p>Mirrors <code>DOMNodeRemoved</code> event.</p>"},{"location":"reference/cdp/#cdp.dom.CompatibilityMode","title":"<code>CompatibilityMode</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Document compatibility mode.</p>"},{"location":"reference/cdp/#cdp.dom.DistributedNodesUpdated","title":"<code>DistributedNodesUpdated</code>  <code>dataclass</code>","text":"<p>Called when distribution is changed.</p>"},{"location":"reference/cdp/#cdp.dom.DocumentUpdated","title":"<code>DocumentUpdated</code>  <code>dataclass</code>","text":"<p>Fired when <code>Document</code> has been totally updated.</p> <p>Node ids are no longer valid.</p>"},{"location":"reference/cdp/#cdp.dom.InlineStyleInvalidated","title":"<code>InlineStyleInvalidated</code>  <code>dataclass</code>","text":"<p>Fired when <code>Element</code>'s inline style is modified via a CSS property modification.</p>"},{"location":"reference/cdp/#cdp.dom.LogicalAxes","title":"<code>LogicalAxes</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>ContainerSelector logical axes.</p>"},{"location":"reference/cdp/#cdp.dom.Node","title":"<code>Node</code>  <code>dataclass</code>","text":"<p>DOM interaction is implemented in terms of mirror objects that represent the actual DOM nodes.</p> <p>DOMNode is a base node mirror type.</p>"},{"location":"reference/cdp/#cdp.dom.NodeId","title":"<code>NodeId</code>","text":"<p>         Bases: <code>int</code></p> <p>Unique DOM node identifier.</p>"},{"location":"reference/cdp/#cdp.dom.PhysicalAxes","title":"<code>PhysicalAxes</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>ContainerSelector physical axes.</p>"},{"location":"reference/cdp/#cdp.dom.PseudoElementAdded","title":"<code>PseudoElementAdded</code>  <code>dataclass</code>","text":"<p>Called when a pseudo element is added to an element.</p>"},{"location":"reference/cdp/#cdp.dom.PseudoElementRemoved","title":"<code>PseudoElementRemoved</code>  <code>dataclass</code>","text":"<p>Called when a pseudo element is removed from an element.</p>"},{"location":"reference/cdp/#cdp.dom.PseudoType","title":"<code>PseudoType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Pseudo element type.</p>"},{"location":"reference/cdp/#cdp.dom.Quad","title":"<code>Quad</code>  <code>dataclass</code>","text":"<p>An array of quad vertices, x immediately followed by y for each point, points clock-wise.</p>"},{"location":"reference/cdp/#cdp.dom.RGBA","title":"<code>RGBA</code>  <code>dataclass</code>","text":"<p>A structure holding an RGBA color.</p>"},{"location":"reference/cdp/#cdp.dom.Rect","title":"<code>Rect</code>  <code>dataclass</code>","text":"<p>Rectangle.</p>"},{"location":"reference/cdp/#cdp.dom.SetChildNodes","title":"<code>SetChildNodes</code>  <code>dataclass</code>","text":"<p>Fired when backend wants to provide client with the missing DOM structure.</p> <p>This happens upon most of the calls requesting node ids.</p>"},{"location":"reference/cdp/#cdp.dom.ShadowRootPopped","title":"<code>ShadowRootPopped</code>  <code>dataclass</code>","text":"<p>Called when shadow root is popped from the element.</p>"},{"location":"reference/cdp/#cdp.dom.ShadowRootPushed","title":"<code>ShadowRootPushed</code>  <code>dataclass</code>","text":"<p>Called when shadow root is pushed into the element.</p>"},{"location":"reference/cdp/#cdp.dom.ShadowRootType","title":"<code>ShadowRootType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Shadow root type.</p>"},{"location":"reference/cdp/#cdp.dom.ShapeOutsideInfo","title":"<code>ShapeOutsideInfo</code>  <code>dataclass</code>","text":"<p>CSS Shape Outside details.</p>"},{"location":"reference/cdp/#cdp.dom.TopLayerElementsUpdated","title":"<code>TopLayerElementsUpdated</code>  <code>dataclass</code>","text":"<p>Called when top layer elements are changed.</p>"},{"location":"reference/cdp/#cdp.dom.collect_class_names_from_subtree","title":"<code>collect_class_names_from_subtree()</code>  <code>async</code>","text":"<p>Collects class names for the node with given id and all of it's child nodes.</p>"},{"location":"reference/cdp/#cdp.dom.collect_class_names_from_subtree--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.copy_to","title":"<code>copy_to()</code>  <code>async</code>","text":"<p>Creates a deep copy of the specified node and places it into the target container before the given anchor.</p>"},{"location":"reference/cdp/#cdp.dom.copy_to--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.describe_node","title":"<code>describe_node()</code>  <code>async</code>","text":"<p>Describes node given its id, does not require domain to be enabled.</p> <p>Does not start tracking any objects, can be used for automation. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables DOM agent for the given page.</p>"},{"location":"reference/cdp/#cdp.dom.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.discard_search_results","title":"<code>discard_search_results()</code>  <code>async</code>","text":"<p>Discards search results from the session with the given id.</p> <p><code>getSearchResults</code> should no longer be called for that search. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables DOM agent for the given page.</p>"},{"location":"reference/cdp/#cdp.dom.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.focus","title":"<code>focus()</code>  <code>async</code>","text":"<p>Focuses the given element.</p>"},{"location":"reference/cdp/#cdp.dom.focus--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.get_attributes","title":"<code>get_attributes()</code>  <code>async</code>","text":"<p>Returns attributes for the specified node.</p>"},{"location":"reference/cdp/#cdp.dom.get_attributes--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.get_box_model","title":"<code>get_box_model()</code>  <code>async</code>","text":"<p>Returns boxes for the given node.</p>"},{"location":"reference/cdp/#cdp.dom.get_box_model--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.get_container_for_node","title":"<code>get_container_for_node()</code>  <code>async</code>","text":"<p>Returns the query container of the given node based on container query conditions: containerName, physical, and logical axes. If no axes are provided, the style container is returned, which is the direct parent or the closest element with a matching container-name. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.get_content_quads","title":"<code>get_content_quads()</code>  <code>async</code>","text":"<p>Returns quads that describe node position on the page.</p> <p>This method might return multiple quads for inline nodes. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.get_document","title":"<code>get_document()</code>  <code>async</code>","text":"<p>Returns the root DOM node (and optionally the subtree) to the caller.</p> <p>Implicitly enables the DOM domain events for the current target. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.get_file_info","title":"<code>get_file_info()</code>  <code>async</code>","text":"<p>Returns file information for the given File wrapper.</p>"},{"location":"reference/cdp/#cdp.dom.get_file_info--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.get_flattened_document","title":"<code>get_flattened_document()</code>  <code>async</code>","text":"<p>Returns the root DOM node (and optionally the subtree) to the caller.</p> <p>Deprecated, as it is not designed to work well with the rest of the DOM agent. Use DOMSnapshot.captureSnapshot instead. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.get_frame_owner","title":"<code>get_frame_owner()</code>  <code>async</code>","text":"<p>Returns iframe node that owns iframe with the given domain.</p>"},{"location":"reference/cdp/#cdp.dom.get_frame_owner--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.get_node_for_location","title":"<code>get_node_for_location()</code>  <code>async</code>","text":"<p>Returns node id at given location.</p> <p>Depending on whether DOM domain is enabled, nodeId is either returned or not. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.get_node_stack_traces","title":"<code>get_node_stack_traces()</code>  <code>async</code>","text":"<p>Gets stack traces associated with a Node.</p> <p>As of now, only provides stack trace for Node creation. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.get_nodes_for_subtree_by_style","title":"<code>get_nodes_for_subtree_by_style()</code>  <code>async</code>","text":"<p>Finds nodes with a given computed style in a subtree.</p>"},{"location":"reference/cdp/#cdp.dom.get_nodes_for_subtree_by_style--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.get_outer_html","title":"<code>get_outer_html()</code>  <code>async</code>","text":"<p>Returns node's HTML markup.</p>"},{"location":"reference/cdp/#cdp.dom.get_outer_html--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.get_querying_descendants_for_container","title":"<code>get_querying_descendants_for_container()</code>  <code>async</code>","text":"<p>Returns the descendants of a container query container that have container queries against this container.</p>"},{"location":"reference/cdp/#cdp.dom.get_querying_descendants_for_container--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.get_relayout_boundary","title":"<code>get_relayout_boundary()</code>  <code>async</code>","text":"<p>Returns the id of the nearest ancestor that is a relayout boundary.</p>"},{"location":"reference/cdp/#cdp.dom.get_relayout_boundary--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.get_search_results","title":"<code>get_search_results()</code>  <code>async</code>","text":"<p>Returns search results from given <code>fromIndex</code> to given <code>toIndex</code> from the search with the given identifier.</p>"},{"location":"reference/cdp/#cdp.dom.get_search_results--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.get_top_layer_elements","title":"<code>get_top_layer_elements()</code>  <code>async</code>","text":"<p>Returns NodeIds of current top layer elements.</p> <p>Top layer is rendered closest to the user within a viewport, therefore its elements always appear on top of all other content. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.hide_highlight","title":"<code>hide_highlight()</code>  <code>async</code>","text":"<p>Hides any highlight.</p>"},{"location":"reference/cdp/#cdp.dom.hide_highlight--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.highlight_node","title":"<code>highlight_node()</code>  <code>async</code>","text":"<p>Highlights DOM node.</p>"},{"location":"reference/cdp/#cdp.dom.highlight_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.highlight_rect","title":"<code>highlight_rect()</code>  <code>async</code>","text":"<p>Highlights given rectangle.</p>"},{"location":"reference/cdp/#cdp.dom.highlight_rect--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.mark_undoable_state","title":"<code>mark_undoable_state()</code>  <code>async</code>","text":"<p>Marks last undoable state.</p>"},{"location":"reference/cdp/#cdp.dom.mark_undoable_state--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.move_to","title":"<code>move_to()</code>  <code>async</code>","text":"<p>Moves node into the new container, places it before the given anchor.</p>"},{"location":"reference/cdp/#cdp.dom.move_to--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.perform_search","title":"<code>perform_search()</code>  <code>async</code>","text":"<p>Searches for a given string in the DOM tree.</p> <p>Use <code>getSearchResults</code> to access search results or <code>cancelSearch</code> to end this search session. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.push_node_by_path_to_frontend","title":"<code>push_node_by_path_to_frontend()</code>  <code>async</code>","text":"<p>Requests that the node is sent to the caller given its path.</p> <p>// FIXME, use XPath # noqa</p>"},{"location":"reference/cdp/#cdp.dom.push_nodes_by_backend_ids_to_frontend","title":"<code>push_nodes_by_backend_ids_to_frontend()</code>  <code>async</code>","text":"<p>Requests that a batch of nodes is sent to the caller given their backend node ids.</p>"},{"location":"reference/cdp/#cdp.dom.push_nodes_by_backend_ids_to_frontend--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.query_selector","title":"<code>query_selector()</code>  <code>async</code>","text":"<p>Executes <code>querySelector</code> on a given node.</p>"},{"location":"reference/cdp/#cdp.dom.query_selector--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.query_selector_all","title":"<code>query_selector_all()</code>  <code>async</code>","text":"<p>Executes <code>querySelectorAll</code> on a given node.</p>"},{"location":"reference/cdp/#cdp.dom.query_selector_all--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.redo","title":"<code>redo()</code>  <code>async</code>","text":"<p>Re-does the last undone action.</p>"},{"location":"reference/cdp/#cdp.dom.redo--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.remove_attribute","title":"<code>remove_attribute()</code>  <code>async</code>","text":"<p>Removes attribute with given name from an element with given id.</p>"},{"location":"reference/cdp/#cdp.dom.remove_attribute--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.remove_node","title":"<code>remove_node()</code>  <code>async</code>","text":"<p>Removes node with given id.</p>"},{"location":"reference/cdp/#cdp.dom.remove_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.request_child_nodes","title":"<code>request_child_nodes()</code>  <code>async</code>","text":"<p>Requests that children of the node with given id are returned to the caller in form of <code>setChildNodes</code> events where not only immediate children are retrieved, but all children down to the specified depth.</p>"},{"location":"reference/cdp/#cdp.dom.request_child_nodes--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.request_node","title":"<code>request_node()</code>  <code>async</code>","text":"<p>Requests that the node is sent to the caller given the JavaScript node object reference.</p> <p>All nodes that form the path from the node to the root are also sent to the client as a series of <code>setChildNodes</code> notifications. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.resolve_node","title":"<code>resolve_node()</code>  <code>async</code>","text":"<p>Resolves the JavaScript node object for a given NodeId or BackendNodeId.</p>"},{"location":"reference/cdp/#cdp.dom.resolve_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.scroll_into_view_if_needed","title":"<code>scroll_into_view_if_needed()</code>  <code>async</code>","text":"<p>Scrolls the specified rect of the given node into view if not already visible.</p> <p>Note: exactly one between nodeId, backendNodeId and objectId should be passed to identify the node. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.set_attribute_value","title":"<code>set_attribute_value()</code>  <code>async</code>","text":"<p>Sets attribute for an element with given id.</p>"},{"location":"reference/cdp/#cdp.dom.set_attribute_value--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.set_attributes_as_text","title":"<code>set_attributes_as_text()</code>  <code>async</code>","text":"<p>Sets attributes on element with given id.</p> <p>This method is useful when user edits some existing attribute value and types in several attribute name/value pairs.</p>"},{"location":"reference/cdp/#cdp.dom.set_attributes_as_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.set_file_input_files","title":"<code>set_file_input_files()</code>  <code>async</code>","text":"<p>Sets files for the given file input element.</p>"},{"location":"reference/cdp/#cdp.dom.set_file_input_files--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.set_inspected_node","title":"<code>set_inspected_node()</code>  <code>async</code>","text":"<p>Enables console to refer to the node with given id via $x (see Command Line API for more details.</p> <p>$x functions). # noqa</p>"},{"location":"reference/cdp/#cdp.dom.set_node_name","title":"<code>set_node_name()</code>  <code>async</code>","text":"<p>Sets node name for a node with given id.</p>"},{"location":"reference/cdp/#cdp.dom.set_node_name--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.set_node_stack_traces_enabled","title":"<code>set_node_stack_traces_enabled()</code>  <code>async</code>","text":"<p>Sets if stack traces should be captured for Nodes.</p> <p>See <code>Node.getNodeStackTraces</code>. Default is disabled. # noqa</p>"},{"location":"reference/cdp/#cdp.dom.set_node_value","title":"<code>set_node_value()</code>  <code>async</code>","text":"<p>Sets node value for a node with given id.</p>"},{"location":"reference/cdp/#cdp.dom.set_node_value--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.set_outer_html","title":"<code>set_outer_html()</code>  <code>async</code>","text":"<p>Sets node HTML markup, returns new node id.</p>"},{"location":"reference/cdp/#cdp.dom.set_outer_html--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom.undo","title":"<code>undo()</code>  <code>async</code>","text":"<p>Undoes the last performed action.</p>"},{"location":"reference/cdp/#cdp.dom.undo--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_debugger","title":"<code>dom_debugger</code>","text":""},{"location":"reference/cdp/#cdp.dom_debugger.CSPViolationType","title":"<code>CSPViolationType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>CSP Violation type.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.DOMBreakpointType","title":"<code>DOMBreakpointType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>DOM breakpoint type.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.EventListener","title":"<code>EventListener</code>  <code>dataclass</code>","text":"<p>Object event listener.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.get_event_listeners","title":"<code>get_event_listeners()</code>  <code>async</code>","text":"<p>Returns event listeners of the given object.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.get_event_listeners--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_debugger.remove_dom_breakpoint","title":"<code>remove_dom_breakpoint()</code>  <code>async</code>","text":"<p>Removes DOM breakpoint that was set using <code>setDOMBreakpoint</code>.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.remove_dom_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_debugger.remove_event_listener_breakpoint","title":"<code>remove_event_listener_breakpoint()</code>  <code>async</code>","text":"<p>Removes breakpoint on particular DOM event.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.remove_event_listener_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_debugger.remove_instrumentation_breakpoint","title":"<code>remove_instrumentation_breakpoint()</code>  <code>async</code>","text":"<p>Removes breakpoint on particular native event.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.remove_instrumentation_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_debugger.remove_xhr_breakpoint","title":"<code>remove_xhr_breakpoint()</code>  <code>async</code>","text":"<p>Removes breakpoint from XMLHttpRequest.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.remove_xhr_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_debugger.set_break_on_csp_violation","title":"<code>set_break_on_csp_violation()</code>  <code>async</code>","text":"<p>Sets breakpoint on particular CSP violations.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.set_break_on_csp_violation--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_debugger.set_dom_breakpoint","title":"<code>set_dom_breakpoint()</code>  <code>async</code>","text":"<p>Sets breakpoint on particular operation with DOM.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.set_dom_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_debugger.set_event_listener_breakpoint","title":"<code>set_event_listener_breakpoint()</code>  <code>async</code>","text":"<p>Sets breakpoint on particular DOM event.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.set_event_listener_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_debugger.set_instrumentation_breakpoint","title":"<code>set_instrumentation_breakpoint()</code>  <code>async</code>","text":"<p>Sets breakpoint on particular native event.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.set_instrumentation_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_debugger.set_xhr_breakpoint","title":"<code>set_xhr_breakpoint()</code>  <code>async</code>","text":"<p>Sets breakpoint on XMLHttpRequest.</p>"},{"location":"reference/cdp/#cdp.dom_debugger.set_xhr_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_snapshot","title":"<code>dom_snapshot</code>","text":""},{"location":"reference/cdp/#cdp.dom_snapshot.ArrayOfStrings","title":"<code>ArrayOfStrings</code>  <code>dataclass</code>","text":"<p>Index of the string in the strings table.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.ComputedStyle","title":"<code>ComputedStyle</code>  <code>dataclass</code>","text":"<p>A subset of the full ComputedStyle as defined by the request whitelist.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.DOMNode","title":"<code>DOMNode</code>  <code>dataclass</code>","text":"<p>A Node in the DOM tree.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.DocumentSnapshot","title":"<code>DocumentSnapshot</code>  <code>dataclass</code>","text":"<p>Document snapshot.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.InlineTextBox","title":"<code>InlineTextBox</code>  <code>dataclass</code>","text":"<p>Details of post layout rendered text positions.</p> <p>The exact layout should not be regarded as stable and may change between versions.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.LayoutTreeNode","title":"<code>LayoutTreeNode</code>  <code>dataclass</code>","text":"<p>Details of an element in the DOM tree with a LayoutObject.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.LayoutTreeSnapshot","title":"<code>LayoutTreeSnapshot</code>  <code>dataclass</code>","text":"<p>Table of details of an element in the DOM tree with a LayoutObject.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.NameValue","title":"<code>NameValue</code>  <code>dataclass</code>","text":"<p>A name/value pair.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.NodeTreeSnapshot","title":"<code>NodeTreeSnapshot</code>  <code>dataclass</code>","text":"<p>Table containing nodes.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.RareBooleanData","title":"<code>RareBooleanData</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.RareIntegerData","title":"<code>RareIntegerData</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.RareStringData","title":"<code>RareStringData</code>  <code>dataclass</code>","text":"<p>Data that is only present on rare nodes.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.Rectangle","title":"<code>Rectangle</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.StringIndex","title":"<code>StringIndex</code>","text":"<p>         Bases: <code>int</code></p> <p>Index of the string in the strings table.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.TextBoxSnapshot","title":"<code>TextBoxSnapshot</code>  <code>dataclass</code>","text":"<p>Table of details of the post layout rendered text positions.</p> <p>The exact layout should not be regarded as stable and may change between versions.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.capture_snapshot","title":"<code>capture_snapshot()</code>  <code>async</code>","text":"<p>Returns a document snapshot, including the full DOM tree of the root node (including iframes, template contents, and imported documents) in a flattened array, as well as layout and white-listed computed style information for the nodes.</p> <p>Shadow DOM in the returned DOM tree is flattened. # noqa</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables DOM snapshot agent for the given page.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_snapshot.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables DOM snapshot agent for the given page.</p>"},{"location":"reference/cdp/#cdp.dom_snapshot.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_snapshot.get_snapshot","title":"<code>get_snapshot()</code>  <code>async</code>","text":"<p>Returns a document snapshot, including the full DOM tree of the root node (including iframes, template contents, and imported documents) in a flattened array, as well as layout and white-listed computed style information for the nodes.</p> <p>Shadow DOM in the returned DOM tree is flattened. # noqa</p>"},{"location":"reference/cdp/#cdp.dom_storage","title":"<code>dom_storage</code>","text":""},{"location":"reference/cdp/#cdp.dom_storage.DomStorageItemAdded","title":"<code>DomStorageItemAdded</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_storage.DomStorageItemRemoved","title":"<code>DomStorageItemRemoved</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_storage.DomStorageItemUpdated","title":"<code>DomStorageItemUpdated</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_storage.DomStorageItemsCleared","title":"<code>DomStorageItemsCleared</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_storage.Item","title":"<code>Item</code>  <code>dataclass</code>","text":"<p>DOM Storage item.</p>"},{"location":"reference/cdp/#cdp.dom_storage.SerializedStorageKey","title":"<code>SerializedStorageKey</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_storage.StorageId","title":"<code>StorageId</code>  <code>dataclass</code>","text":"<p>DOM Storage identifier.</p>"},{"location":"reference/cdp/#cdp.dom_storage.clear","title":"<code>clear()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_storage.clear--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_storage.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables storage tracking, prevents storage events from being sent to the client.</p>"},{"location":"reference/cdp/#cdp.dom_storage.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_storage.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables storage tracking, storage events will now be delivered to the client.</p>"},{"location":"reference/cdp/#cdp.dom_storage.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_storage.get_dom_storage_items","title":"<code>get_dom_storage_items()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_storage.get_dom_storage_items--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_storage.remove_dom_storage_item","title":"<code>remove_dom_storage_item()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_storage.remove_dom_storage_item--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.dom_storage.set_dom_storage_item","title":"<code>set_dom_storage_item()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.dom_storage.set_dom_storage_item--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation","title":"<code>emulation</code>","text":""},{"location":"reference/cdp/#cdp.emulation.DisabledImageType","title":"<code>DisabledImageType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of image types that can be disabled.</p>"},{"location":"reference/cdp/#cdp.emulation.DisplayFeature","title":"<code>DisplayFeature</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.emulation.MediaFeature","title":"<code>MediaFeature</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.emulation.ScreenOrientation","title":"<code>ScreenOrientation</code>  <code>dataclass</code>","text":"<p>Screen orientation.</p>"},{"location":"reference/cdp/#cdp.emulation.UserAgentBrandVersion","title":"<code>UserAgentBrandVersion</code>  <code>dataclass</code>","text":"<p>Used to specify User Agent Cient Hints to emulate.</p> <p>See https://wicg.github.io/ua-client-hints</p>"},{"location":"reference/cdp/#cdp.emulation.UserAgentMetadata","title":"<code>UserAgentMetadata</code>  <code>dataclass</code>","text":"<p>Used to specify User Agent Cient Hints to emulate.</p> <p>See https://wicg.github.io/ua-client-hints Missing optional values will be filled in by the target with what it would normally use.</p>"},{"location":"reference/cdp/#cdp.emulation.VirtualTimeBudgetExpired","title":"<code>VirtualTimeBudgetExpired</code>  <code>dataclass</code>","text":"<p>Notification sent after the virtual time budget for the current VirtualTimePolicy has run out.</p>"},{"location":"reference/cdp/#cdp.emulation.VirtualTimePolicy","title":"<code>VirtualTimePolicy</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>advance: If the scheduler runs out of immediate work, the virtual time base may fast forward to allow the next delayed task (if any) to run; pause: The virtual time base may not advance; pauseIfNetworkFetchesPending: The virtual time base may not advance if there are any pending resource fetches.</p>"},{"location":"reference/cdp/#cdp.emulation.can_emulate","title":"<code>can_emulate()</code>  <code>async</code>","text":"<p>Tells whether emulation is supported.</p>"},{"location":"reference/cdp/#cdp.emulation.can_emulate--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.clear_device_metrics_override","title":"<code>clear_device_metrics_override()</code>  <code>async</code>","text":"<p>Clears the overridden device metrics.</p>"},{"location":"reference/cdp/#cdp.emulation.clear_device_metrics_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.clear_geolocation_override","title":"<code>clear_geolocation_override()</code>  <code>async</code>","text":"<p>Clears the overridden Geolocation Position and Error.</p>"},{"location":"reference/cdp/#cdp.emulation.clear_geolocation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.clear_idle_override","title":"<code>clear_idle_override()</code>  <code>async</code>","text":"<p>Clears Idle state overrides.</p>"},{"location":"reference/cdp/#cdp.emulation.clear_idle_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.reset_page_scale_factor","title":"<code>reset_page_scale_factor()</code>  <code>async</code>","text":"<p>Requests that page scale factor is reset to initial values.</p>"},{"location":"reference/cdp/#cdp.emulation.reset_page_scale_factor--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_auto_dark_mode_override","title":"<code>set_auto_dark_mode_override()</code>  <code>async</code>","text":"<p>Automatically render all web contents using a dark theme.</p>"},{"location":"reference/cdp/#cdp.emulation.set_auto_dark_mode_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_automation_override","title":"<code>set_automation_override()</code>  <code>async</code>","text":"<p>Allows overriding the automation flag.</p>"},{"location":"reference/cdp/#cdp.emulation.set_automation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_cpu_throttling_rate","title":"<code>set_cpu_throttling_rate()</code>  <code>async</code>","text":"<p>Enables CPU throttling to emulate slow CPUs.</p>"},{"location":"reference/cdp/#cdp.emulation.set_cpu_throttling_rate--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_default_background_color_override","title":"<code>set_default_background_color_override()</code>  <code>async</code>","text":"<p>Sets or clears an override of the default background color of the frame.</p> <p>This override is used if the content does not specify one. # noqa</p>"},{"location":"reference/cdp/#cdp.emulation.set_device_metrics_override","title":"<code>set_device_metrics_override()</code>  <code>async</code>","text":"<p>Overrides the values of device screen dimensions (window.screen.width, window.screen.height, window.innerWidth, window.innerHeight, and \"device-width\"/\"device-height\"-related CSS media query results).</p>"},{"location":"reference/cdp/#cdp.emulation.set_device_metrics_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_disabled_image_types","title":"<code>set_disabled_image_types()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.emulation.set_disabled_image_types--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_document_cookie_disabled","title":"<code>set_document_cookie_disabled()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.emulation.set_document_cookie_disabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_emit_touch_events_for_mouse","title":"<code>set_emit_touch_events_for_mouse()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.emulation.set_emit_touch_events_for_mouse--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_emulated_media","title":"<code>set_emulated_media()</code>  <code>async</code>","text":"<p>Emulates the given media type or media feature for CSS media queries.</p>"},{"location":"reference/cdp/#cdp.emulation.set_emulated_media--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_emulated_vision_deficiency","title":"<code>set_emulated_vision_deficiency()</code>  <code>async</code>","text":"<p>Emulates the given vision deficiency.</p>"},{"location":"reference/cdp/#cdp.emulation.set_emulated_vision_deficiency--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_focus_emulation_enabled","title":"<code>set_focus_emulation_enabled()</code>  <code>async</code>","text":"<p>Enables or disables simulating a focused and active page.</p>"},{"location":"reference/cdp/#cdp.emulation.set_focus_emulation_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_geolocation_override","title":"<code>set_geolocation_override()</code>  <code>async</code>","text":"<p>Overrides the Geolocation Position or Error.</p> <p>Omitting any of the parameters emulates position unavailable. # noqa</p>"},{"location":"reference/cdp/#cdp.emulation.set_hardware_concurrency_override","title":"<code>set_hardware_concurrency_override()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.emulation.set_hardware_concurrency_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_idle_override","title":"<code>set_idle_override()</code>  <code>async</code>","text":"<p>Overrides the Idle state.</p>"},{"location":"reference/cdp/#cdp.emulation.set_idle_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_locale_override","title":"<code>set_locale_override()</code>  <code>async</code>","text":"<p>Overrides default host system locale with the specified one.</p>"},{"location":"reference/cdp/#cdp.emulation.set_locale_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_navigator_overrides","title":"<code>set_navigator_overrides()</code>  <code>async</code>","text":"<p>Overrides value returned by the javascript navigator object.</p>"},{"location":"reference/cdp/#cdp.emulation.set_navigator_overrides--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_page_scale_factor","title":"<code>set_page_scale_factor()</code>  <code>async</code>","text":"<p>Sets a specified page scale factor.</p>"},{"location":"reference/cdp/#cdp.emulation.set_page_scale_factor--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_script_execution_disabled","title":"<code>set_script_execution_disabled()</code>  <code>async</code>","text":"<p>Switches script execution in the page.</p>"},{"location":"reference/cdp/#cdp.emulation.set_script_execution_disabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_scrollbars_hidden","title":"<code>set_scrollbars_hidden()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.emulation.set_scrollbars_hidden--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_timezone_override","title":"<code>set_timezone_override()</code>  <code>async</code>","text":"<p>Overrides default host system timezone with the specified one.</p>"},{"location":"reference/cdp/#cdp.emulation.set_timezone_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_touch_emulation_enabled","title":"<code>set_touch_emulation_enabled()</code>  <code>async</code>","text":"<p>Enables touch on platforms which do not support them.</p>"},{"location":"reference/cdp/#cdp.emulation.set_touch_emulation_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_user_agent_override","title":"<code>set_user_agent_override()</code>  <code>async</code>","text":"<p>Allows overriding user agent with the given string.</p>"},{"location":"reference/cdp/#cdp.emulation.set_user_agent_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.emulation.set_virtual_time_policy","title":"<code>set_virtual_time_policy()</code>  <code>async</code>","text":"<p>Turns on virtual time for all frames (replacing real-time with a synthetic time source) and sets the current virtual time policy.</p> <p>Note this supersedes any previous time budget. # noqa</p>"},{"location":"reference/cdp/#cdp.emulation.set_visible_size","title":"<code>set_visible_size()</code>  <code>async</code>","text":"<p>Resizes the frame/viewport of the page.</p> <p>Note that this does not affect the frame's container (e.g. browser window). Can be used to produce screenshots of the specified size. Not supported on Android. # noqa</p>"},{"location":"reference/cdp/#cdp.event_breakpoints","title":"<code>event_breakpoints</code>","text":""},{"location":"reference/cdp/#cdp.event_breakpoints.remove_instrumentation_breakpoint","title":"<code>remove_instrumentation_breakpoint()</code>  <code>async</code>","text":"<p>Removes breakpoint on particular native event.</p>"},{"location":"reference/cdp/#cdp.event_breakpoints.remove_instrumentation_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.event_breakpoints.set_instrumentation_breakpoint","title":"<code>set_instrumentation_breakpoint()</code>  <code>async</code>","text":"<p>Sets breakpoint on particular native event.</p>"},{"location":"reference/cdp/#cdp.event_breakpoints.set_instrumentation_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fed_cm","title":"<code>fed_cm</code>","text":""},{"location":"reference/cdp/#cdp.fed_cm.Account","title":"<code>Account</code>  <code>dataclass</code>","text":"<p>Corresponds to IdentityRequestAccount.</p>"},{"location":"reference/cdp/#cdp.fed_cm.DialogShown","title":"<code>DialogShown</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.fed_cm.LoginState","title":"<code>LoginState</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Whether this is a sign-up or sign-in action for this account, i.e. whether this account has ever been used to sign in to this RP before.</p>"},{"location":"reference/cdp/#cdp.fed_cm.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.fed_cm.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fed_cm.dismiss_dialog","title":"<code>dismiss_dialog()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.fed_cm.dismiss_dialog--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fed_cm.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.fed_cm.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fed_cm.reset_cooldown","title":"<code>reset_cooldown()</code>  <code>async</code>","text":"<p>Resets the cooldown time, if any, to allow the next FedCM call to show a dialog even if one was recently dismissed by the user.</p>"},{"location":"reference/cdp/#cdp.fed_cm.reset_cooldown--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fed_cm.select_account","title":"<code>select_account()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.fed_cm.select_account--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fetch","title":"<code>fetch</code>","text":""},{"location":"reference/cdp/#cdp.fetch.AuthChallenge","title":"<code>AuthChallenge</code>  <code>dataclass</code>","text":"<p>Authorization challenge for HTTP status code 401 or 407.</p>"},{"location":"reference/cdp/#cdp.fetch.AuthChallengeResponse","title":"<code>AuthChallengeResponse</code>  <code>dataclass</code>","text":"<p>Response to an AuthChallenge.</p>"},{"location":"reference/cdp/#cdp.fetch.AuthRequired","title":"<code>AuthRequired</code>  <code>dataclass</code>","text":"<p>Issued when the domain is enabled with handleAuthRequests set to true.</p> <p>The request is paused until client responds with continueWithAuth.</p>"},{"location":"reference/cdp/#cdp.fetch.HeaderEntry","title":"<code>HeaderEntry</code>  <code>dataclass</code>","text":"<p>Response HTTP header entry.</p>"},{"location":"reference/cdp/#cdp.fetch.RequestId","title":"<code>RequestId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique request identifier.</p>"},{"location":"reference/cdp/#cdp.fetch.RequestPattern","title":"<code>RequestPattern</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.fetch.RequestPaused","title":"<code>RequestPaused</code>  <code>dataclass</code>","text":"<p>Issued when the domain is enabled and the request URL matches the specified filter.</p> <p>The request is paused until the client responds with one of continueRequest, failRequest or fulfillRequest. The stage of the request can be determined by presence of responseErrorReason and responseStatusCode -- the request is at the response stage if either of these fields is present and in the request stage otherwise.</p>"},{"location":"reference/cdp/#cdp.fetch.RequestStage","title":"<code>RequestStage</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Stages of the request to handle.</p> <p>Request will intercept before the request is sent. Response will intercept after the response is received (but before response body is received).</p>"},{"location":"reference/cdp/#cdp.fetch.continue_request","title":"<code>continue_request()</code>  <code>async</code>","text":"<p>Continues the request, optionally modifying some of its parameters.</p>"},{"location":"reference/cdp/#cdp.fetch.continue_request--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fetch.continue_response","title":"<code>continue_response()</code>  <code>async</code>","text":"<p>Continues loading of the paused response, optionally modifying the response headers.</p> <p>If either responseCode or headers are modified, all of them must be present. # noqa</p>"},{"location":"reference/cdp/#cdp.fetch.continue_with_auth","title":"<code>continue_with_auth()</code>  <code>async</code>","text":"<p>Continues a request supplying authChallengeResponse following authRequired event.</p>"},{"location":"reference/cdp/#cdp.fetch.continue_with_auth--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fetch.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables the fetch domain.</p>"},{"location":"reference/cdp/#cdp.fetch.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fetch.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables issuing of requestPaused events.</p> <p>A request will be paused until client calls one of failRequest, fulfillRequest or continueRequest/continueWithAuth.</p>"},{"location":"reference/cdp/#cdp.fetch.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fetch.fail_request","title":"<code>fail_request()</code>  <code>async</code>","text":"<p>Causes the request to fail with specified reason.</p>"},{"location":"reference/cdp/#cdp.fetch.fail_request--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fetch.fulfill_request","title":"<code>fulfill_request()</code>  <code>async</code>","text":"<p>Provides response to the request.</p>"},{"location":"reference/cdp/#cdp.fetch.fulfill_request--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.fetch.get_response_body","title":"<code>get_response_body()</code>  <code>async</code>","text":"<p>Causes the body of the response to be received from the server and returned as a single string.</p> <p>May only be issued for a request that is paused in the Response stage and is mutually exclusive with takeResponseBodyForInterceptionAsStream. Calling other methods that affect the request or disabling fetch domain before body is received results in an undefined behavior. # noqa</p>"},{"location":"reference/cdp/#cdp.fetch.take_response_body_as_stream","title":"<code>take_response_body_as_stream()</code>  <code>async</code>","text":"<p>Returns a handle to the stream representing the response body.</p> <p>The request must be paused in the HeadersReceived stage. Note that after this command the request can't be continued as is -- client either needs to cancel it or to provide the response body. The stream only supports sequential read, IO.read will fail if the position is specified. This method is mutually exclusive with getResponseBody. Calling other methods that affect the request or disabling fetch domain before body is received results in an undefined behavior. # noqa</p>"},{"location":"reference/cdp/#cdp.headless_experimental","title":"<code>headless_experimental</code>","text":""},{"location":"reference/cdp/#cdp.headless_experimental.ScreenshotParams","title":"<code>ScreenshotParams</code>  <code>dataclass</code>","text":"<p>Encoding options for a screenshot.</p>"},{"location":"reference/cdp/#cdp.headless_experimental.begin_frame","title":"<code>begin_frame()</code>  <code>async</code>","text":"<p>Sends a BeginFrame to the target and returns when the frame was completed.</p> <p>Optionally captures a screenshot from the resulting frame. Requires that the target was created with enabled BeginFrameControl. Designed for use with --run-all-compositor-stages-before-draw, see also https://goo.gle/chrome-headless-rendering for more background. # noqa</p>"},{"location":"reference/cdp/#cdp.headless_experimental.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables headless events for the target.</p>"},{"location":"reference/cdp/#cdp.headless_experimental.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.headless_experimental.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables headless events for the target.</p>"},{"location":"reference/cdp/#cdp.headless_experimental.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.heap_profiler","title":"<code>heap_profiler</code>","text":""},{"location":"reference/cdp/#cdp.heap_profiler.AddHeapSnapshotChunk","title":"<code>AddHeapSnapshotChunk</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.HeapSnapshotObjectId","title":"<code>HeapSnapshotObjectId</code>","text":"<p>         Bases: <code>str</code></p> <p>Heap snapshot object id.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.HeapStatsUpdate","title":"<code>HeapStatsUpdate</code>  <code>dataclass</code>","text":"<p>If heap objects tracking has been started then backend may send update for one or more fragments.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.LastSeenObjectId","title":"<code>LastSeenObjectId</code>  <code>dataclass</code>","text":"<p>If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp.</p> <p>If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.ReportHeapSnapshotProgress","title":"<code>ReportHeapSnapshotProgress</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.ResetProfiles","title":"<code>ResetProfiles</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.SamplingHeapProfile","title":"<code>SamplingHeapProfile</code>  <code>dataclass</code>","text":"<p>Sampling profile.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.SamplingHeapProfileNode","title":"<code>SamplingHeapProfileNode</code>  <code>dataclass</code>","text":"<p>Sampling Heap Profile node.</p> <p>Holds callsite information, allocation statistics and child nodes.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.SamplingHeapProfileSample","title":"<code>SamplingHeapProfileSample</code>  <code>dataclass</code>","text":"<p>A single sample from a sampling profile.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.add_inspected_heap_object","title":"<code>add_inspected_heap_object()</code>  <code>async</code>","text":"<p>Enables console to refer to the node with given id via $x (see Command Line API for more details.</p> <p>$x functions). # noqa</p>"},{"location":"reference/cdp/#cdp.heap_profiler.collect_garbage","title":"<code>collect_garbage()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.collect_garbage--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.heap_profiler.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.heap_profiler.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.heap_profiler.get_heap_object_id","title":"<code>get_heap_object_id()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.get_heap_object_id--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.heap_profiler.get_object_by_heap_object_id","title":"<code>get_object_by_heap_object_id()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.get_object_by_heap_object_id--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.heap_profiler.get_sampling_profile","title":"<code>get_sampling_profile()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.get_sampling_profile--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.heap_profiler.start_sampling","title":"<code>start_sampling()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.start_sampling--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.heap_profiler.start_tracking_heap_objects","title":"<code>start_tracking_heap_objects()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.start_tracking_heap_objects--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.heap_profiler.stop_sampling","title":"<code>stop_sampling()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.stop_sampling--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.heap_profiler.stop_tracking_heap_objects","title":"<code>stop_tracking_heap_objects()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.stop_tracking_heap_objects--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.heap_profiler.take_heap_snapshot","title":"<code>take_heap_snapshot()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.heap_profiler.take_heap_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.indexed_db","title":"<code>indexed_db</code>","text":""},{"location":"reference/cdp/#cdp.indexed_db.DataEntry","title":"<code>DataEntry</code>  <code>dataclass</code>","text":"<p>Data entry.</p>"},{"location":"reference/cdp/#cdp.indexed_db.DatabaseWithObjectStores","title":"<code>DatabaseWithObjectStores</code>  <code>dataclass</code>","text":"<p>Database with an array of object stores.</p>"},{"location":"reference/cdp/#cdp.indexed_db.Key","title":"<code>Key</code>  <code>dataclass</code>","text":"<p>Key.</p>"},{"location":"reference/cdp/#cdp.indexed_db.KeyPath","title":"<code>KeyPath</code>  <code>dataclass</code>","text":"<p>Key path.</p>"},{"location":"reference/cdp/#cdp.indexed_db.KeyRange","title":"<code>KeyRange</code>  <code>dataclass</code>","text":"<p>Key range.</p>"},{"location":"reference/cdp/#cdp.indexed_db.ObjectStore","title":"<code>ObjectStore</code>  <code>dataclass</code>","text":"<p>Object store.</p>"},{"location":"reference/cdp/#cdp.indexed_db.ObjectStoreIndex","title":"<code>ObjectStoreIndex</code>  <code>dataclass</code>","text":"<p>Object store index.</p>"},{"location":"reference/cdp/#cdp.indexed_db.clear_object_store","title":"<code>clear_object_store()</code>  <code>async</code>","text":"<p>Clears all entries from an object store.</p>"},{"location":"reference/cdp/#cdp.indexed_db.clear_object_store--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.indexed_db.delete_database","title":"<code>delete_database()</code>  <code>async</code>","text":"<p>Deletes a database.</p>"},{"location":"reference/cdp/#cdp.indexed_db.delete_database--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.indexed_db.delete_object_store_entries","title":"<code>delete_object_store_entries()</code>  <code>async</code>","text":"<p>Delete a range of entries from an object store # noqa.</p>"},{"location":"reference/cdp/#cdp.indexed_db.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables events from backend.</p>"},{"location":"reference/cdp/#cdp.indexed_db.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.indexed_db.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables events from backend.</p>"},{"location":"reference/cdp/#cdp.indexed_db.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.indexed_db.get_metadata","title":"<code>get_metadata()</code>  <code>async</code>","text":"<p>Gets metadata of an object store.</p>"},{"location":"reference/cdp/#cdp.indexed_db.get_metadata--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.indexed_db.request_data","title":"<code>request_data()</code>  <code>async</code>","text":"<p>Requests data from object store or index.</p>"},{"location":"reference/cdp/#cdp.indexed_db.request_data--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.indexed_db.request_database","title":"<code>request_database()</code>  <code>async</code>","text":"<p>Requests database with given name in given frame.</p>"},{"location":"reference/cdp/#cdp.indexed_db.request_database--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.indexed_db.request_database_names","title":"<code>request_database_names()</code>  <code>async</code>","text":"<p>Requests database names for given security origin.</p>"},{"location":"reference/cdp/#cdp.indexed_db.request_database_names--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.input","title":"<code>input</code>","text":""},{"location":"reference/cdp/#cdp.input.DragData","title":"<code>DragData</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.input.DragDataItem","title":"<code>DragDataItem</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.input.DragIntercepted","title":"<code>DragIntercepted</code>  <code>dataclass</code>","text":"<p>Emitted only when <code>Input.setInterceptDrags</code> is enabled.</p> <p>Use this data with <code>Input.dispatchDragEvent</code> to restore normal drag and drop behavior.</p>"},{"location":"reference/cdp/#cdp.input.GestureSourceType","title":"<code>GestureSourceType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.input.MouseButton","title":"<code>MouseButton</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.input.TimeSinceEpoch","title":"<code>TimeSinceEpoch</code>","text":"<p>         Bases: <code>float</code></p> <p>UTC time in seconds, counted from January 1, 1970.</p>"},{"location":"reference/cdp/#cdp.input.TouchPoint","title":"<code>TouchPoint</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.input.dispatch_drag_event","title":"<code>dispatch_drag_event()</code>  <code>async</code>","text":"<p>Dispatches a drag event into the page.</p>"},{"location":"reference/cdp/#cdp.input.dispatch_drag_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.input.dispatch_key_event","title":"<code>dispatch_key_event()</code>  <code>async</code>","text":"<p>Dispatches a key event to the page.</p>"},{"location":"reference/cdp/#cdp.input.dispatch_key_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.input.dispatch_mouse_event","title":"<code>dispatch_mouse_event()</code>  <code>async</code>","text":"<p>Dispatches a mouse event to the page.</p>"},{"location":"reference/cdp/#cdp.input.dispatch_mouse_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.input.dispatch_touch_event","title":"<code>dispatch_touch_event()</code>  <code>async</code>","text":"<p>Dispatches a touch event to the page.</p>"},{"location":"reference/cdp/#cdp.input.dispatch_touch_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.input.emulate_touch_from_mouse_event","title":"<code>emulate_touch_from_mouse_event()</code>  <code>async</code>","text":"<p>Emulates touch event from the mouse event parameters.</p>"},{"location":"reference/cdp/#cdp.input.emulate_touch_from_mouse_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.input.ime_set_composition","title":"<code>ime_set_composition()</code>  <code>async</code>","text":"<p>This method sets the current candidate text for ime.</p> <p>Use imeCommitComposition to commit the final text. Use imeSetComposition with empty string as text to cancel composition. # noqa</p>"},{"location":"reference/cdp/#cdp.input.insert_text","title":"<code>insert_text()</code>  <code>async</code>","text":"<p>This method emulates inserting text that doesn't come from a key press, for example an emoji keyboard or an IME.</p>"},{"location":"reference/cdp/#cdp.input.insert_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.input.set_ignore_input_events","title":"<code>set_ignore_input_events()</code>  <code>async</code>","text":"<p>Ignores input events (useful while auditing page).</p>"},{"location":"reference/cdp/#cdp.input.set_ignore_input_events--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.input.set_intercept_drags","title":"<code>set_intercept_drags()</code>  <code>async</code>","text":"<p>Prevents default drag and drop behavior and instead emits <code>Input.dragIntercepted</code> events.</p> <p>Drag and drop behavior can be directly controlled via <code>Input.dispatchDragEvent</code>. # noqa</p>"},{"location":"reference/cdp/#cdp.input.synthesize_pinch_gesture","title":"<code>synthesize_pinch_gesture()</code>  <code>async</code>","text":"<p>Synthesizes a pinch gesture over a time period by issuing appropriate touch events.</p>"},{"location":"reference/cdp/#cdp.input.synthesize_pinch_gesture--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.input.synthesize_scroll_gesture","title":"<code>synthesize_scroll_gesture()</code>  <code>async</code>","text":"<p>Synthesizes a scroll gesture over a time period by issuing appropriate touch events.</p>"},{"location":"reference/cdp/#cdp.input.synthesize_scroll_gesture--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.input.synthesize_tap_gesture","title":"<code>synthesize_tap_gesture()</code>  <code>async</code>","text":"<p>Synthesizes a tap gesture over a time period by issuing appropriate touch events.</p>"},{"location":"reference/cdp/#cdp.input.synthesize_tap_gesture--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.inspector","title":"<code>inspector</code>","text":""},{"location":"reference/cdp/#cdp.inspector.Detached","title":"<code>Detached</code>  <code>dataclass</code>","text":"<p>Fired when remote debugging connection is about to be terminated.</p> <p>Contains detach reason.</p>"},{"location":"reference/cdp/#cdp.inspector.TargetCrashed","title":"<code>TargetCrashed</code>  <code>dataclass</code>","text":"<p>Fired when debugging target has crashed.</p>"},{"location":"reference/cdp/#cdp.inspector.TargetReloadedAfterCrash","title":"<code>TargetReloadedAfterCrash</code>  <code>dataclass</code>","text":"<p>Fired when debugging target has reloaded after crash.</p>"},{"location":"reference/cdp/#cdp.inspector.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables inspector domain notifications.</p>"},{"location":"reference/cdp/#cdp.inspector.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.inspector.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables inspector domain notifications.</p>"},{"location":"reference/cdp/#cdp.inspector.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.io","title":"<code>io</code>","text":""},{"location":"reference/cdp/#cdp.io.StreamHandle","title":"<code>StreamHandle</code>","text":"<p>         Bases: <code>str</code></p> <p>This is either obtained from another method or specified as <code>blob:&amp;lt;uuid&amp;gt;</code> where <code>&amp;lt;uuid&amp;gt</code> is an UUID of a Blob.</p>"},{"location":"reference/cdp/#cdp.io.close","title":"<code>close()</code>  <code>async</code>","text":"<p>Close the stream, discard any temporary backing storage.</p>"},{"location":"reference/cdp/#cdp.io.close--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.io.read","title":"<code>read()</code>  <code>async</code>","text":"<p>Read a chunk of the stream # noqa.</p>"},{"location":"reference/cdp/#cdp.io.resolve_blob","title":"<code>resolve_blob()</code>  <code>async</code>","text":"<p>Return UUID of Blob object specified by a remote object id.</p>"},{"location":"reference/cdp/#cdp.io.resolve_blob--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.layer_tree","title":"<code>layer_tree</code>","text":""},{"location":"reference/cdp/#cdp.layer_tree.Layer","title":"<code>Layer</code>  <code>dataclass</code>","text":"<p>Information about a compositing layer.</p>"},{"location":"reference/cdp/#cdp.layer_tree.LayerId","title":"<code>LayerId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique Layer identifier.</p>"},{"location":"reference/cdp/#cdp.layer_tree.LayerPainted","title":"<code>LayerPainted</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.layer_tree.LayerTreeDidChange","title":"<code>LayerTreeDidChange</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.layer_tree.PaintProfile","title":"<code>PaintProfile</code>  <code>dataclass</code>","text":"<p>Array of timings, one per paint step.</p>"},{"location":"reference/cdp/#cdp.layer_tree.PictureTile","title":"<code>PictureTile</code>  <code>dataclass</code>","text":"<p>Serialized fragment of layer picture along with its offset within the layer.</p>"},{"location":"reference/cdp/#cdp.layer_tree.ScrollRect","title":"<code>ScrollRect</code>  <code>dataclass</code>","text":"<p>Rectangle where scrolling happens on the main thread.</p>"},{"location":"reference/cdp/#cdp.layer_tree.SnapshotId","title":"<code>SnapshotId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique snapshot identifier.</p>"},{"location":"reference/cdp/#cdp.layer_tree.StickyPositionConstraint","title":"<code>StickyPositionConstraint</code>  <code>dataclass</code>","text":"<p>Sticky position constraints.</p>"},{"location":"reference/cdp/#cdp.layer_tree.compositing_reasons","title":"<code>compositing_reasons()</code>  <code>async</code>","text":"<p>Provides the reasons why the given layer was composited.</p>"},{"location":"reference/cdp/#cdp.layer_tree.compositing_reasons--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.layer_tree.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables compositing tree inspection.</p>"},{"location":"reference/cdp/#cdp.layer_tree.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.layer_tree.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables compositing tree inspection.</p>"},{"location":"reference/cdp/#cdp.layer_tree.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.layer_tree.load_snapshot","title":"<code>load_snapshot()</code>  <code>async</code>","text":"<p>Returns the snapshot identifier.</p>"},{"location":"reference/cdp/#cdp.layer_tree.load_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.layer_tree.make_snapshot","title":"<code>make_snapshot()</code>  <code>async</code>","text":"<p>Returns the layer snapshot identifier.</p>"},{"location":"reference/cdp/#cdp.layer_tree.make_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.layer_tree.profile_snapshot","title":"<code>profile_snapshot()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.layer_tree.profile_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.layer_tree.release_snapshot","title":"<code>release_snapshot()</code>  <code>async</code>","text":"<p>Releases layer snapshot captured by the back-end.</p>"},{"location":"reference/cdp/#cdp.layer_tree.release_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.layer_tree.replay_snapshot","title":"<code>replay_snapshot()</code>  <code>async</code>","text":"<p>Replays the layer snapshot and returns the resulting bitmap.</p>"},{"location":"reference/cdp/#cdp.layer_tree.replay_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.layer_tree.snapshot_command_log","title":"<code>snapshot_command_log()</code>  <code>async</code>","text":"<p>Replays the layer snapshot and returns canvas log.</p>"},{"location":"reference/cdp/#cdp.layer_tree.snapshot_command_log--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.log","title":"<code>log</code>","text":""},{"location":"reference/cdp/#cdp.log.EntryAdded","title":"<code>EntryAdded</code>  <code>dataclass</code>","text":"<p>Issued when new message was logged.</p>"},{"location":"reference/cdp/#cdp.log.LogEntry","title":"<code>LogEntry</code>  <code>dataclass</code>","text":"<p>Log entry.</p>"},{"location":"reference/cdp/#cdp.log.ViolationSetting","title":"<code>ViolationSetting</code>  <code>dataclass</code>","text":"<p>Violation configuration setting.</p>"},{"location":"reference/cdp/#cdp.log.clear","title":"<code>clear()</code>  <code>async</code>","text":"<p>Clears the log.</p>"},{"location":"reference/cdp/#cdp.log.clear--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.log.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables log domain, prevents further log entries from being reported to the client.</p>"},{"location":"reference/cdp/#cdp.log.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.log.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables log domain, sends the entries collected so far to the client by means of the <code>entryAdded</code> notification.</p>"},{"location":"reference/cdp/#cdp.log.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.log.start_violations_report","title":"<code>start_violations_report()</code>  <code>async</code>","text":"<p>start violation reporting.</p>"},{"location":"reference/cdp/#cdp.log.start_violations_report--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.log.stop_violations_report","title":"<code>stop_violations_report()</code>  <code>async</code>","text":"<p>Stop violation reporting.</p>"},{"location":"reference/cdp/#cdp.log.stop_violations_report--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.media","title":"<code>media</code>","text":""},{"location":"reference/cdp/#cdp.media.PlayerError","title":"<code>PlayerError</code>  <code>dataclass</code>","text":"<p>Corresponds to kMediaError.</p>"},{"location":"reference/cdp/#cdp.media.PlayerErrorSourceLocation","title":"<code>PlayerErrorSourceLocation</code>  <code>dataclass</code>","text":"<p>Represents logged source line numbers reported in an error.</p> <p>NOTE: file and line are from chromium c++ implementation code, not js.</p>"},{"location":"reference/cdp/#cdp.media.PlayerErrorsRaised","title":"<code>PlayerErrorsRaised</code>  <code>dataclass</code>","text":"<p>Send a list of any errors that need to be delivered.</p>"},{"location":"reference/cdp/#cdp.media.PlayerEvent","title":"<code>PlayerEvent</code>  <code>dataclass</code>","text":"<p>Corresponds to kMediaEventTriggered.</p>"},{"location":"reference/cdp/#cdp.media.PlayerEventsAdded","title":"<code>PlayerEventsAdded</code>  <code>dataclass</code>","text":"<p>Send events as a list, allowing them to be batched on the browser for less congestion.</p> <p>If batched, events must ALWAYS be in chronological order.</p>"},{"location":"reference/cdp/#cdp.media.PlayerId","title":"<code>PlayerId</code>","text":"<p>         Bases: <code>str</code></p> <p>Players will get an ID that is unique within the agent context.</p>"},{"location":"reference/cdp/#cdp.media.PlayerMessage","title":"<code>PlayerMessage</code>  <code>dataclass</code>","text":"<p>Have one type per entry in MediaLogRecord::Type Corresponds to kMessage.</p>"},{"location":"reference/cdp/#cdp.media.PlayerMessagesLogged","title":"<code>PlayerMessagesLogged</code>  <code>dataclass</code>","text":"<p>Send a list of any messages that need to be delivered.</p>"},{"location":"reference/cdp/#cdp.media.PlayerPropertiesChanged","title":"<code>PlayerPropertiesChanged</code>  <code>dataclass</code>","text":"<p>This can be called multiple times, and can be used to set / override / remove player properties.</p> <p>A null propValue indicates removal.</p>"},{"location":"reference/cdp/#cdp.media.PlayerProperty","title":"<code>PlayerProperty</code>  <code>dataclass</code>","text":"<p>Corresponds to kMediaPropertyChange.</p>"},{"location":"reference/cdp/#cdp.media.PlayersCreated","title":"<code>PlayersCreated</code>  <code>dataclass</code>","text":"<p>Called whenever a player is created, or when a new agent joins and receives a list of active players.</p> <p>If an agent is restored, it will receive the full list of player ids and all events again.</p>"},{"location":"reference/cdp/#cdp.media.Timestamp","title":"<code>Timestamp</code>","text":"<p>         Bases: <code>float</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.media.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables the Media domain.</p>"},{"location":"reference/cdp/#cdp.media.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.media.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables the Media domain # noqa.</p>"},{"location":"reference/cdp/#cdp.memory","title":"<code>memory</code>","text":""},{"location":"reference/cdp/#cdp.memory.Module","title":"<code>Module</code>  <code>dataclass</code>","text":"<p>Executable module information.</p>"},{"location":"reference/cdp/#cdp.memory.PressureLevel","title":"<code>PressureLevel</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Memory pressure level.</p>"},{"location":"reference/cdp/#cdp.memory.SamplingProfile","title":"<code>SamplingProfile</code>  <code>dataclass</code>","text":"<p>Array of heap profile samples.</p>"},{"location":"reference/cdp/#cdp.memory.SamplingProfileNode","title":"<code>SamplingProfileNode</code>  <code>dataclass</code>","text":"<p>Heap profile sample.</p>"},{"location":"reference/cdp/#cdp.memory.forcibly_purge_java_script_memory","title":"<code>forcibly_purge_java_script_memory()</code>  <code>async</code>","text":"<p>Simulate OomIntervention by purging V8 memory.</p>"},{"location":"reference/cdp/#cdp.memory.forcibly_purge_java_script_memory--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.memory.get_all_time_sampling_profile","title":"<code>get_all_time_sampling_profile()</code>  <code>async</code>","text":"<p>Retrieve native memory allocations profile collected since renderer process startup.</p>"},{"location":"reference/cdp/#cdp.memory.get_all_time_sampling_profile--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.memory.get_browser_sampling_profile","title":"<code>get_browser_sampling_profile()</code>  <code>async</code>","text":"<p>Retrieve native memory allocations profile collected since browser process startup.</p>"},{"location":"reference/cdp/#cdp.memory.get_browser_sampling_profile--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.memory.get_dom_counters","title":"<code>get_dom_counters()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.memory.get_dom_counters--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.memory.get_sampling_profile","title":"<code>get_sampling_profile()</code>  <code>async</code>","text":"<p>Retrieve native memory allocations profile collected since last <code>startSampling</code> call.</p>"},{"location":"reference/cdp/#cdp.memory.get_sampling_profile--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.memory.prepare_for_leak_detection","title":"<code>prepare_for_leak_detection()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.memory.prepare_for_leak_detection--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.memory.set_pressure_notifications_suppressed","title":"<code>set_pressure_notifications_suppressed()</code>  <code>async</code>","text":"<p>Enable/disable suppressing memory pressure notifications in all processes.</p>"},{"location":"reference/cdp/#cdp.memory.set_pressure_notifications_suppressed--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.memory.simulate_pressure_notification","title":"<code>simulate_pressure_notification()</code>  <code>async</code>","text":"<p>Simulate a memory pressure notification in all processes.</p>"},{"location":"reference/cdp/#cdp.memory.simulate_pressure_notification--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.memory.start_sampling","title":"<code>start_sampling()</code>  <code>async</code>","text":"<p>Start collecting native memory profile.</p>"},{"location":"reference/cdp/#cdp.memory.start_sampling--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.memory.stop_sampling","title":"<code>stop_sampling()</code>  <code>async</code>","text":"<p>Stop collecting native memory profile.</p>"},{"location":"reference/cdp/#cdp.memory.stop_sampling--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network","title":"<code>network</code>","text":""},{"location":"reference/cdp/#cdp.network.AlternateProtocolUsage","title":"<code>AlternateProtocolUsage</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The reason why Chrome uses a specific transport protocol for HTTP semantics.</p>"},{"location":"reference/cdp/#cdp.network.AuthChallenge","title":"<code>AuthChallenge</code>  <code>dataclass</code>","text":"<p>Authorization challenge for HTTP status code 401 or 407.</p>"},{"location":"reference/cdp/#cdp.network.AuthChallengeResponse","title":"<code>AuthChallengeResponse</code>  <code>dataclass</code>","text":"<p>Response to an AuthChallenge.</p>"},{"location":"reference/cdp/#cdp.network.BlockedCookieWithReason","title":"<code>BlockedCookieWithReason</code>  <code>dataclass</code>","text":"<p>A cookie with was not sent with a request with the corresponding reason.</p>"},{"location":"reference/cdp/#cdp.network.BlockedReason","title":"<code>BlockedReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The reason why request was blocked.</p>"},{"location":"reference/cdp/#cdp.network.BlockedSetCookieWithReason","title":"<code>BlockedSetCookieWithReason</code>  <code>dataclass</code>","text":"<p>A cookie which was not stored from a response with the corresponding reason.</p>"},{"location":"reference/cdp/#cdp.network.CachedResource","title":"<code>CachedResource</code>  <code>dataclass</code>","text":"<p>Information about the cached resource.</p>"},{"location":"reference/cdp/#cdp.network.CertificateTransparencyCompliance","title":"<code>CertificateTransparencyCompliance</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Whether the request complied with Certificate Transparency policy.</p>"},{"location":"reference/cdp/#cdp.network.ClientSecurityState","title":"<code>ClientSecurityState</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.ConnectTiming","title":"<code>ConnectTiming</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.ConnectionType","title":"<code>ConnectionType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The underlying connection technology that the browser is supposedly using.</p>"},{"location":"reference/cdp/#cdp.network.ContentEncoding","title":"<code>ContentEncoding</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>List of content encodings supported by the backend.</p>"},{"location":"reference/cdp/#cdp.network.Cookie","title":"<code>Cookie</code>  <code>dataclass</code>","text":"<p>Cookie object.</p>"},{"location":"reference/cdp/#cdp.network.CookieBlockedReason","title":"<code>CookieBlockedReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Types of reasons why a cookie may not be sent with a request.</p>"},{"location":"reference/cdp/#cdp.network.CookieParam","title":"<code>CookieParam</code>  <code>dataclass</code>","text":"<p>Cookie parameter object.</p>"},{"location":"reference/cdp/#cdp.network.CookiePriority","title":"<code>CookiePriority</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Represents the cookie's 'Priority' status:</p> <p>https://tools.ietf.org/html/draft-west-cookie-priority-00</p>"},{"location":"reference/cdp/#cdp.network.CookieSameSite","title":"<code>CookieSameSite</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Represents the cookie's 'SameSite' status:</p> <p>https://tools.ietf.org/html/draft-west-first-party-cookies</p>"},{"location":"reference/cdp/#cdp.network.CookieSourceScheme","title":"<code>CookieSourceScheme</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Represents the source scheme of the origin that originally set the cookie.</p> <p>A value of \"Unset\" allows protocol clients to emulate legacy cookie scope for the scheme. This is a temporary ability and it will be removed in the future.</p>"},{"location":"reference/cdp/#cdp.network.CorsError","title":"<code>CorsError</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The reason why request was blocked.</p>"},{"location":"reference/cdp/#cdp.network.CorsErrorStatus","title":"<code>CorsErrorStatus</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.CrossOriginEmbedderPolicyStatus","title":"<code>CrossOriginEmbedderPolicyStatus</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.CrossOriginEmbedderPolicyValue","title":"<code>CrossOriginEmbedderPolicyValue</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.CrossOriginOpenerPolicyStatus","title":"<code>CrossOriginOpenerPolicyStatus</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.CrossOriginOpenerPolicyValue","title":"<code>CrossOriginOpenerPolicyValue</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.DataReceived","title":"<code>DataReceived</code>  <code>dataclass</code>","text":"<p>Fired when data chunk was received over the network.</p>"},{"location":"reference/cdp/#cdp.network.ErrorReason","title":"<code>ErrorReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Network level fetch failure reason.</p>"},{"location":"reference/cdp/#cdp.network.EventSourceMessageReceived","title":"<code>EventSourceMessageReceived</code>  <code>dataclass</code>","text":"<p>Fired when EventSource message is received.</p>"},{"location":"reference/cdp/#cdp.network.Headers","title":"<code>Headers</code>  <code>dataclass</code>","text":"<p>Request / response headers as keys / values of JSON object.</p>"},{"location":"reference/cdp/#cdp.network.IPAddressSpace","title":"<code>IPAddressSpace</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.Initiator","title":"<code>Initiator</code>  <code>dataclass</code>","text":"<p>Information about the request initiator.</p>"},{"location":"reference/cdp/#cdp.network.InterceptionId","title":"<code>InterceptionId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique intercepted request identifier.</p>"},{"location":"reference/cdp/#cdp.network.InterceptionStage","title":"<code>InterceptionStage</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Stages of the interception to begin intercepting.</p> <p>Request will intercept before the request is sent. Response will intercept after the response is received.</p>"},{"location":"reference/cdp/#cdp.network.LoadNetworkResourceOptions","title":"<code>LoadNetworkResourceOptions</code>  <code>dataclass</code>","text":"<p>An options object that may be extended later to better support CORS, CORB and streaming.</p>"},{"location":"reference/cdp/#cdp.network.LoadNetworkResourcePageResult","title":"<code>LoadNetworkResourcePageResult</code>  <code>dataclass</code>","text":"<p>An object providing the result of a network resource load.</p>"},{"location":"reference/cdp/#cdp.network.LoaderId","title":"<code>LoaderId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique loader identifier.</p>"},{"location":"reference/cdp/#cdp.network.LoadingFailed","title":"<code>LoadingFailed</code>  <code>dataclass</code>","text":"<p>Fired when HTTP request has failed to load.</p>"},{"location":"reference/cdp/#cdp.network.LoadingFinished","title":"<code>LoadingFinished</code>  <code>dataclass</code>","text":"<p>Fired when HTTP request has finished loading.</p>"},{"location":"reference/cdp/#cdp.network.MonotonicTime","title":"<code>MonotonicTime</code>","text":"<p>         Bases: <code>float</code></p> <p>Monotonically increasing time in seconds since an arbitrary point in the past.</p>"},{"location":"reference/cdp/#cdp.network.PostDataEntry","title":"<code>PostDataEntry</code>  <code>dataclass</code>","text":"<p>Post data entry for HTTP request.</p>"},{"location":"reference/cdp/#cdp.network.PrivateNetworkRequestPolicy","title":"<code>PrivateNetworkRequestPolicy</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.ReportId","title":"<code>ReportId</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.ReportStatus","title":"<code>ReportStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The status of a Reporting API report.</p>"},{"location":"reference/cdp/#cdp.network.ReportingApiEndpoint","title":"<code>ReportingApiEndpoint</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.ReportingApiEndpointsChangedForOrigin","title":"<code>ReportingApiEndpointsChangedForOrigin</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.ReportingApiReport","title":"<code>ReportingApiReport</code>  <code>dataclass</code>","text":"<p>An object representing a report generated by the Reporting API.</p>"},{"location":"reference/cdp/#cdp.network.ReportingApiReportAdded","title":"<code>ReportingApiReportAdded</code>  <code>dataclass</code>","text":"<p>Is sent whenever a new report is added.</p> <p>And after 'enableReportingApi' for all existing reports.</p>"},{"location":"reference/cdp/#cdp.network.ReportingApiReportUpdated","title":"<code>ReportingApiReportUpdated</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.Request","title":"<code>Request</code>  <code>dataclass</code>","text":"<p>HTTP request data.</p>"},{"location":"reference/cdp/#cdp.network.RequestId","title":"<code>RequestId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique request identifier.</p>"},{"location":"reference/cdp/#cdp.network.RequestIntercepted","title":"<code>RequestIntercepted</code>  <code>dataclass</code>","text":"<p>Details of an intercepted HTTP request, which must be either allowed, blocked, modified or mocked.</p> <p>Deprecated, use Fetch.requestPaused instead.</p>"},{"location":"reference/cdp/#cdp.network.RequestPattern","title":"<code>RequestPattern</code>  <code>dataclass</code>","text":"<p>Request pattern for interception.</p>"},{"location":"reference/cdp/#cdp.network.RequestServedFromCache","title":"<code>RequestServedFromCache</code>  <code>dataclass</code>","text":"<p>Fired if request ended up loading from cache.</p>"},{"location":"reference/cdp/#cdp.network.RequestWillBeSent","title":"<code>RequestWillBeSent</code>  <code>dataclass</code>","text":"<p>Fired when page is about to send HTTP request.</p>"},{"location":"reference/cdp/#cdp.network.RequestWillBeSentExtraInfo","title":"<code>RequestWillBeSentExtraInfo</code>  <code>dataclass</code>","text":"<p>Fired when additional information about a requestWillBeSent event is available from the network stack.</p> <p>Not every requestWillBeSent event will have an additional requestWillBeSentExtraInfo fired for it, and there is no guarantee whether requestWillBeSent or requestWillBeSentExtraInfo will be fired first for the same request.</p>"},{"location":"reference/cdp/#cdp.network.ResourceChangedPriority","title":"<code>ResourceChangedPriority</code>  <code>dataclass</code>","text":"<p>Fired when resource loading priority is changed.</p>"},{"location":"reference/cdp/#cdp.network.ResourcePriority","title":"<code>ResourcePriority</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Loading priority of a resource request.</p>"},{"location":"reference/cdp/#cdp.network.ResourceTiming","title":"<code>ResourceTiming</code>  <code>dataclass</code>","text":"<p>Timing information for the request.</p>"},{"location":"reference/cdp/#cdp.network.ResourceType","title":"<code>ResourceType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Resource type as it was perceived by the rendering engine.</p>"},{"location":"reference/cdp/#cdp.network.Response","title":"<code>Response</code>  <code>dataclass</code>","text":"<p>HTTP response data.</p>"},{"location":"reference/cdp/#cdp.network.ResponseReceived","title":"<code>ResponseReceived</code>  <code>dataclass</code>","text":"<p>Fired when HTTP response is available.</p>"},{"location":"reference/cdp/#cdp.network.ResponseReceivedExtraInfo","title":"<code>ResponseReceivedExtraInfo</code>  <code>dataclass</code>","text":"<p>Fired when additional information about a responseReceived event is available from the network stack.</p> <p>Not every responseReceived event will have an additional responseReceivedExtraInfo for it, and responseReceivedExtraInfo may be fired before or after responseReceived.</p>"},{"location":"reference/cdp/#cdp.network.SecurityDetails","title":"<code>SecurityDetails</code>  <code>dataclass</code>","text":"<p>Security details about a request.</p>"},{"location":"reference/cdp/#cdp.network.SecurityIsolationStatus","title":"<code>SecurityIsolationStatus</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.ServiceWorkerResponseSource","title":"<code>ServiceWorkerResponseSource</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Source of serviceworker response.</p>"},{"location":"reference/cdp/#cdp.network.SetCookieBlockedReason","title":"<code>SetCookieBlockedReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Types of reasons why a cookie may not be stored from a response.</p>"},{"location":"reference/cdp/#cdp.network.SignedCertificateTimestamp","title":"<code>SignedCertificateTimestamp</code>  <code>dataclass</code>","text":"<p>Details of a signed certificate timestamp (SCT).</p>"},{"location":"reference/cdp/#cdp.network.SignedExchangeError","title":"<code>SignedExchangeError</code>  <code>dataclass</code>","text":"<p>Information about a signed exchange response.</p>"},{"location":"reference/cdp/#cdp.network.SignedExchangeErrorField","title":"<code>SignedExchangeErrorField</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Field type for a signed exchange related error.</p>"},{"location":"reference/cdp/#cdp.network.SignedExchangeHeader","title":"<code>SignedExchangeHeader</code>  <code>dataclass</code>","text":"<p>Information about a signed exchange header.</p> <p>https://wicg.github.io/webpackage/draft-yasskin-httpbis-origin-signed-exchanges-impl.html#cbor-representation</p>"},{"location":"reference/cdp/#cdp.network.SignedExchangeInfo","title":"<code>SignedExchangeInfo</code>  <code>dataclass</code>","text":"<p>Information about a signed exchange response.</p>"},{"location":"reference/cdp/#cdp.network.SignedExchangeReceived","title":"<code>SignedExchangeReceived</code>  <code>dataclass</code>","text":"<p>Fired when a signed exchange was received over the network.</p>"},{"location":"reference/cdp/#cdp.network.SignedExchangeSignature","title":"<code>SignedExchangeSignature</code>  <code>dataclass</code>","text":"<p>Information about a signed exchange signature.</p> <p>https://wicg.github.io/webpackage/draft-yasskin-httpbis-origin-signed-exchanges-impl.html#rfc.section.3.1</p>"},{"location":"reference/cdp/#cdp.network.SubresourceWebBundleInnerResponseError","title":"<code>SubresourceWebBundleInnerResponseError</code>  <code>dataclass</code>","text":"<p>Fired when request for resources within a .wbn file failed.</p>"},{"location":"reference/cdp/#cdp.network.SubresourceWebBundleInnerResponseParsed","title":"<code>SubresourceWebBundleInnerResponseParsed</code>  <code>dataclass</code>","text":"<p>Fired when handling requests for resources within a .wbn file.</p> <p>Note: this will only be fired for resources that are requested by the webpage.</p>"},{"location":"reference/cdp/#cdp.network.SubresourceWebBundleMetadataError","title":"<code>SubresourceWebBundleMetadataError</code>  <code>dataclass</code>","text":"<p>Fired once when parsing the .wbn file has failed.</p>"},{"location":"reference/cdp/#cdp.network.SubresourceWebBundleMetadataReceived","title":"<code>SubresourceWebBundleMetadataReceived</code>  <code>dataclass</code>","text":"<p>Fired once when parsing the .wbn file has succeeded.</p> <p>The event contains the information about the web bundle contents.</p>"},{"location":"reference/cdp/#cdp.network.TimeSinceEpoch","title":"<code>TimeSinceEpoch</code>","text":"<p>         Bases: <code>float</code></p> <p>UTC time in seconds, counted from January 1, 1970.</p>"},{"location":"reference/cdp/#cdp.network.TrustTokenOperationDone","title":"<code>TrustTokenOperationDone</code>  <code>dataclass</code>","text":"<p>Fired exactly once for each Trust Token operation.</p> <p>Depending on the type of the operation and whether the operation succeeded or failed, the event is fired before the corresponding request was sent or after the response was received.</p>"},{"location":"reference/cdp/#cdp.network.TrustTokenOperationType","title":"<code>TrustTokenOperationType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.network.TrustTokenParams","title":"<code>TrustTokenParams</code>  <code>dataclass</code>","text":"<p>Determines what type of Trust Token operation is executed and depending on the type, some additional parameters.</p> <p>The values are specified in third_party/blink/renderer/core/fetch/trust_token.idl.</p>"},{"location":"reference/cdp/#cdp.network.WebSocketClosed","title":"<code>WebSocketClosed</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket is closed.</p>"},{"location":"reference/cdp/#cdp.network.WebSocketCreated","title":"<code>WebSocketCreated</code>  <code>dataclass</code>","text":"<p>Fired upon WebSocket creation.</p>"},{"location":"reference/cdp/#cdp.network.WebSocketFrame","title":"<code>WebSocketFrame</code>  <code>dataclass</code>","text":"<p>WebSocket message data.</p> <p>This represents an entire WebSocket message, not just a fragmented frame as the name suggests.</p>"},{"location":"reference/cdp/#cdp.network.WebSocketFrameError","title":"<code>WebSocketFrameError</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket message error occurs.</p>"},{"location":"reference/cdp/#cdp.network.WebSocketFrameReceived","title":"<code>WebSocketFrameReceived</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket message is received.</p>"},{"location":"reference/cdp/#cdp.network.WebSocketFrameSent","title":"<code>WebSocketFrameSent</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket message is sent.</p>"},{"location":"reference/cdp/#cdp.network.WebSocketHandshakeResponseReceived","title":"<code>WebSocketHandshakeResponseReceived</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket handshake response becomes available.</p>"},{"location":"reference/cdp/#cdp.network.WebSocketRequest","title":"<code>WebSocketRequest</code>  <code>dataclass</code>","text":"<p>WebSocket request data.</p>"},{"location":"reference/cdp/#cdp.network.WebSocketResponse","title":"<code>WebSocketResponse</code>  <code>dataclass</code>","text":"<p>WebSocket response data.</p>"},{"location":"reference/cdp/#cdp.network.WebSocketWillSendHandshakeRequest","title":"<code>WebSocketWillSendHandshakeRequest</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket is about to initiate handshake.</p>"},{"location":"reference/cdp/#cdp.network.WebTransportClosed","title":"<code>WebTransportClosed</code>  <code>dataclass</code>","text":"<p>Fired when WebTransport is disposed.</p>"},{"location":"reference/cdp/#cdp.network.WebTransportConnectionEstablished","title":"<code>WebTransportConnectionEstablished</code>  <code>dataclass</code>","text":"<p>Fired when WebTransport handshake is finished.</p>"},{"location":"reference/cdp/#cdp.network.WebTransportCreated","title":"<code>WebTransportCreated</code>  <code>dataclass</code>","text":"<p>Fired upon WebTransport creation.</p>"},{"location":"reference/cdp/#cdp.network.can_clear_browser_cache","title":"<code>can_clear_browser_cache()</code>  <code>async</code>","text":"<p>Tells whether clearing browser cache is supported.</p>"},{"location":"reference/cdp/#cdp.network.can_clear_browser_cache--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.can_clear_browser_cookies","title":"<code>can_clear_browser_cookies()</code>  <code>async</code>","text":"<p>Tells whether clearing browser cookies is supported.</p>"},{"location":"reference/cdp/#cdp.network.can_clear_browser_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.can_emulate_network_conditions","title":"<code>can_emulate_network_conditions()</code>  <code>async</code>","text":"<p>Tells whether emulation of network conditions is supported.</p>"},{"location":"reference/cdp/#cdp.network.can_emulate_network_conditions--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.clear_accepted_encodings_override","title":"<code>clear_accepted_encodings_override()</code>  <code>async</code>","text":"<p>Clears accepted encodings set by setAcceptedEncodings # noqa.</p>"},{"location":"reference/cdp/#cdp.network.clear_browser_cache","title":"<code>clear_browser_cache()</code>  <code>async</code>","text":"<p>Clears browser cache.</p>"},{"location":"reference/cdp/#cdp.network.clear_browser_cache--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.clear_browser_cookies","title":"<code>clear_browser_cookies()</code>  <code>async</code>","text":"<p>Clears browser cookies.</p>"},{"location":"reference/cdp/#cdp.network.clear_browser_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.continue_intercepted_request","title":"<code>continue_intercepted_request()</code>  <code>async</code>","text":"<p>Response to Network.requestIntercepted which either modifies the request to continue with any modifications, or blocks it, or completes it with the provided response bytes.</p> <p>If a network fetch occurs as a result which encounters a redirect an additional Network.requestIntercepted event will be sent with the same InterceptionId. Deprecated, use Fetch.continueRequest, Fetch.fulfillRequest and Fetch.failRequest instead. # noqa</p>"},{"location":"reference/cdp/#cdp.network.delete_cookies","title":"<code>delete_cookies()</code>  <code>async</code>","text":"<p>Deletes browser cookies with matching name and url or domain/path pair.</p>"},{"location":"reference/cdp/#cdp.network.delete_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables network tracking, prevents network events from being sent to the client.</p>"},{"location":"reference/cdp/#cdp.network.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.emulate_network_conditions","title":"<code>emulate_network_conditions()</code>  <code>async</code>","text":"<p>Activates emulation of network conditions.</p>"},{"location":"reference/cdp/#cdp.network.emulate_network_conditions--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables network tracking, network events will now be delivered to the client.</p>"},{"location":"reference/cdp/#cdp.network.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.enable_reporting_api","title":"<code>enable_reporting_api()</code>  <code>async</code>","text":"<p>Enables tracking for the Reporting API, events generated by the Reporting API will now be delivered to the client.</p> <p>Enabling triggers 'reportingApiReportAdded' for all existing reports. # noqa</p>"},{"location":"reference/cdp/#cdp.network.get_all_cookies","title":"<code>get_all_cookies()</code>  <code>async</code>","text":"<p>Returns all browser cookies.</p> <p>Depending on the backend support, will return detailed cookie information in the <code>cookies</code> field. Deprecated. Use Storage.getCookies instead. # noqa</p>"},{"location":"reference/cdp/#cdp.network.get_certificate","title":"<code>get_certificate()</code>  <code>async</code>","text":"<p>Returns the DER-encoded certificate.</p>"},{"location":"reference/cdp/#cdp.network.get_certificate--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.get_cookies","title":"<code>get_cookies()</code>  <code>async</code>","text":"<p>Returns all browser cookies for the current URL.</p> <p>Depending on the backend support, will return detailed cookie information in the <code>cookies</code> field. # noqa</p>"},{"location":"reference/cdp/#cdp.network.get_request_post_data","title":"<code>get_request_post_data()</code>  <code>async</code>","text":"<p>Returns post data sent with the request.</p> <p>Returns an error when no data was sent with the request. # noqa</p>"},{"location":"reference/cdp/#cdp.network.get_response_body","title":"<code>get_response_body()</code>  <code>async</code>","text":"<p>Returns content served for the given request.</p>"},{"location":"reference/cdp/#cdp.network.get_response_body--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.get_response_body_for_interception","title":"<code>get_response_body_for_interception()</code>  <code>async</code>","text":"<p>Returns content served for the given currently intercepted request.</p>"},{"location":"reference/cdp/#cdp.network.get_response_body_for_interception--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.get_security_isolation_status","title":"<code>get_security_isolation_status()</code>  <code>async</code>","text":"<p>Returns information about the COEP/COOP isolation status.</p>"},{"location":"reference/cdp/#cdp.network.get_security_isolation_status--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.load_network_resource","title":"<code>load_network_resource()</code>  <code>async</code>","text":"<p>Fetches the resource and returns the content.</p>"},{"location":"reference/cdp/#cdp.network.load_network_resource--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.replay_xhr","title":"<code>replay_xhr()</code>  <code>async</code>","text":"<p>This method sends a new XMLHttpRequest which is identical to the original one.</p> <p>The following parameters should be identical: method, url, async, request body, extra headers, withCredentials attribute, user, password. # noqa</p>"},{"location":"reference/cdp/#cdp.network.search_in_response_body","title":"<code>search_in_response_body()</code>  <code>async</code>","text":"<p>Searches for given string in response content.</p>"},{"location":"reference/cdp/#cdp.network.search_in_response_body--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.set_accepted_encodings","title":"<code>set_accepted_encodings()</code>  <code>async</code>","text":"<p>Sets a list of content encodings that will be accepted.</p> <p>Empty list means no encoding is accepted. # noqa</p>"},{"location":"reference/cdp/#cdp.network.set_attach_debug_stack","title":"<code>set_attach_debug_stack()</code>  <code>async</code>","text":"<p>Specifies whether to attach a page script stack id in requests # noqa.</p>"},{"location":"reference/cdp/#cdp.network.set_blocked_ur_ls","title":"<code>set_blocked_ur_ls()</code>  <code>async</code>","text":"<p>Blocks URLs from loading.</p>"},{"location":"reference/cdp/#cdp.network.set_blocked_ur_ls--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.set_bypass_service_worker","title":"<code>set_bypass_service_worker()</code>  <code>async</code>","text":"<p>Toggles ignoring of service worker for each request.</p>"},{"location":"reference/cdp/#cdp.network.set_bypass_service_worker--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.set_cache_disabled","title":"<code>set_cache_disabled()</code>  <code>async</code>","text":"<p>Toggles ignoring cache for each request.</p> <p>If <code>true</code>, cache will not be used. # noqa</p>"},{"location":"reference/cdp/#cdp.network.set_cookie","title":"<code>set_cookie()</code>  <code>async</code>","text":"<p>Sets a cookie with the given cookie data; may overwrite equivalent cookies if they exist.</p>"},{"location":"reference/cdp/#cdp.network.set_cookie--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.set_cookies","title":"<code>set_cookies()</code>  <code>async</code>","text":"<p>Sets given cookies.</p>"},{"location":"reference/cdp/#cdp.network.set_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.set_extra_http_headers","title":"<code>set_extra_http_headers()</code>  <code>async</code>","text":"<p>Specifies whether to always send extra HTTP headers with the requests from this page.</p>"},{"location":"reference/cdp/#cdp.network.set_extra_http_headers--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.set_request_interception","title":"<code>set_request_interception()</code>  <code>async</code>","text":"<p>Sets the requests to intercept that match the provided patterns and optionally resource types.</p> <p>Deprecated, please use Fetch.enable instead. # noqa</p>"},{"location":"reference/cdp/#cdp.network.set_user_agent_override","title":"<code>set_user_agent_override()</code>  <code>async</code>","text":"<p>Allows overriding user agent with the given string.</p>"},{"location":"reference/cdp/#cdp.network.set_user_agent_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.network.take_response_body_for_interception_as_stream","title":"<code>take_response_body_for_interception_as_stream()</code>  <code>async</code>","text":"<p>Returns a handle to the stream representing the response body.</p> <p>Note that after this command, the intercepted request can't be continued as is -- you either need to cancel it or to provide the response body. The stream only supports sequential read, IO.read will fail if the position is specified.</p>"},{"location":"reference/cdp/#cdp.network.take_response_body_for_interception_as_stream--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay","title":"<code>overlay</code>","text":""},{"location":"reference/cdp/#cdp.overlay.BoxStyle","title":"<code>BoxStyle</code>  <code>dataclass</code>","text":"<p>Style information for drawing a box.</p>"},{"location":"reference/cdp/#cdp.overlay.ColorFormat","title":"<code>ColorFormat</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.ContainerQueryContainerHighlightConfig","title":"<code>ContainerQueryContainerHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.ContainerQueryHighlightConfig","title":"<code>ContainerQueryHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.ContrastAlgorithm","title":"<code>ContrastAlgorithm</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.FlexContainerHighlightConfig","title":"<code>FlexContainerHighlightConfig</code>  <code>dataclass</code>","text":"<p>Configuration data for the highlighting of Flex container elements.</p>"},{"location":"reference/cdp/#cdp.overlay.FlexItemHighlightConfig","title":"<code>FlexItemHighlightConfig</code>  <code>dataclass</code>","text":"<p>Configuration data for the highlighting of Flex item elements.</p>"},{"location":"reference/cdp/#cdp.overlay.FlexNodeHighlightConfig","title":"<code>FlexNodeHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.GridHighlightConfig","title":"<code>GridHighlightConfig</code>  <code>dataclass</code>","text":"<p>Configuration data for the highlighting of Grid elements.</p>"},{"location":"reference/cdp/#cdp.overlay.GridNodeHighlightConfig","title":"<code>GridNodeHighlightConfig</code>  <code>dataclass</code>","text":"<p>Configurations for Persistent Grid Highlight.</p>"},{"location":"reference/cdp/#cdp.overlay.HighlightConfig","title":"<code>HighlightConfig</code>  <code>dataclass</code>","text":"<p>Configuration data for the highlighting of page elements.</p>"},{"location":"reference/cdp/#cdp.overlay.HingeConfig","title":"<code>HingeConfig</code>  <code>dataclass</code>","text":"<p>Configuration for dual screen hinge.</p>"},{"location":"reference/cdp/#cdp.overlay.InspectMode","title":"<code>InspectMode</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.InspectModeCanceled","title":"<code>InspectModeCanceled</code>  <code>dataclass</code>","text":"<p>Fired when user cancels the inspect mode.</p>"},{"location":"reference/cdp/#cdp.overlay.InspectNodeRequested","title":"<code>InspectNodeRequested</code>  <code>dataclass</code>","text":"<p>Fired when the node should be inspected.</p> <p>This happens after call to <code>setInspectMode</code> or when user manually inspects an element.</p>"},{"location":"reference/cdp/#cdp.overlay.IsolatedElementHighlightConfig","title":"<code>IsolatedElementHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.IsolationModeHighlightConfig","title":"<code>IsolationModeHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.LineStyle","title":"<code>LineStyle</code>  <code>dataclass</code>","text":"<p>Style information for drawing a line.</p>"},{"location":"reference/cdp/#cdp.overlay.NodeHighlightRequested","title":"<code>NodeHighlightRequested</code>  <code>dataclass</code>","text":"<p>Fired when the node should be highlighted.</p> <p>This happens after call to <code>setInspectMode</code>.</p>"},{"location":"reference/cdp/#cdp.overlay.ScreenshotRequested","title":"<code>ScreenshotRequested</code>  <code>dataclass</code>","text":"<p>Fired when user asks to capture screenshot of some area on the page.</p>"},{"location":"reference/cdp/#cdp.overlay.ScrollSnapContainerHighlightConfig","title":"<code>ScrollSnapContainerHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.ScrollSnapHighlightConfig","title":"<code>ScrollSnapHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.SourceOrderConfig","title":"<code>SourceOrderConfig</code>  <code>dataclass</code>","text":"<p>Configuration data for drawing the source order of an elements children.</p>"},{"location":"reference/cdp/#cdp.overlay.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables domain notifications.</p>"},{"location":"reference/cdp/#cdp.overlay.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables domain notifications.</p>"},{"location":"reference/cdp/#cdp.overlay.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.get_grid_highlight_objects_for_test","title":"<code>get_grid_highlight_objects_for_test()</code>  <code>async</code>","text":"<p>For Persistent Grid testing.</p>"},{"location":"reference/cdp/#cdp.overlay.get_grid_highlight_objects_for_test--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.get_highlight_object_for_test","title":"<code>get_highlight_object_for_test()</code>  <code>async</code>","text":"<p>For testing.</p>"},{"location":"reference/cdp/#cdp.overlay.get_highlight_object_for_test--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.get_source_order_highlight_object_for_test","title":"<code>get_source_order_highlight_object_for_test()</code>  <code>async</code>","text":"<p>For Source Order Viewer testing.</p>"},{"location":"reference/cdp/#cdp.overlay.get_source_order_highlight_object_for_test--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.hide_highlight","title":"<code>hide_highlight()</code>  <code>async</code>","text":"<p>Hides any highlight.</p>"},{"location":"reference/cdp/#cdp.overlay.hide_highlight--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.highlight_frame","title":"<code>highlight_frame()</code>  <code>async</code>","text":"<p>Highlights owner element of the frame with given id.</p> <p>Deprecated: Doesn't work reliablity and cannot be fixed due to process separatation (the owner node might be in a different process). Determine the owner node in the client and use highlightNode. # noqa</p>"},{"location":"reference/cdp/#cdp.overlay.highlight_node","title":"<code>highlight_node()</code>  <code>async</code>","text":"<p>Highlights DOM node with given id or with the given JavaScript object wrapper.</p> <p>Either nodeId or objectId must be specified. # noqa</p>"},{"location":"reference/cdp/#cdp.overlay.highlight_quad","title":"<code>highlight_quad()</code>  <code>async</code>","text":"<p>Highlights given quad.</p> <p>Coordinates are absolute with respect to the main frame viewport. # noqa</p>"},{"location":"reference/cdp/#cdp.overlay.highlight_rect","title":"<code>highlight_rect()</code>  <code>async</code>","text":"<p>Highlights given rectangle.</p> <p>Coordinates are absolute with respect to the main frame viewport. # noqa</p>"},{"location":"reference/cdp/#cdp.overlay.highlight_source_order","title":"<code>highlight_source_order()</code>  <code>async</code>","text":"<p>Highlights the source order of the children of the DOM node with given id or with the given JavaScript object wrapper.</p> <p>Either nodeId or objectId must be specified. # noqa</p>"},{"location":"reference/cdp/#cdp.overlay.set_inspect_mode","title":"<code>set_inspect_mode()</code>  <code>async</code>","text":"<p>Enters the 'inspect' mode.</p> <p>In this mode, elements that user is hovering over are highlighted. Backend then generates 'inspectNodeRequested' event upon element selection. # noqa</p>"},{"location":"reference/cdp/#cdp.overlay.set_paused_in_debugger_message","title":"<code>set_paused_in_debugger_message()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.set_paused_in_debugger_message--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.set_show_ad_highlights","title":"<code>set_show_ad_highlights()</code>  <code>async</code>","text":"<p>Highlights owner element of all frames detected to be ads.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_ad_highlights--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.set_show_container_query_overlays","title":"<code>set_show_container_query_overlays()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_container_query_overlays--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.set_show_debug_borders","title":"<code>set_show_debug_borders()</code>  <code>async</code>","text":"<p>Requests that backend shows debug borders on layers # noqa.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_flex_overlays","title":"<code>set_show_flex_overlays()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_flex_overlays--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.set_show_fps_counter","title":"<code>set_show_fps_counter()</code>  <code>async</code>","text":"<p>Requests that backend shows the FPS counter # noqa.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_grid_overlays","title":"<code>set_show_grid_overlays()</code>  <code>async</code>","text":"<p>Highlight multiple elements with the CSS Grid overlay.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_grid_overlays--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.set_show_hinge","title":"<code>set_show_hinge()</code>  <code>async</code>","text":"<p>Add a dual screen device hinge # noqa.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_hit_test_borders","title":"<code>set_show_hit_test_borders()</code>  <code>async</code>","text":"<p>Deprecated, no longer has any effect.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_hit_test_borders--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.set_show_isolated_elements","title":"<code>set_show_isolated_elements()</code>  <code>async</code>","text":"<p>Show elements in isolation mode with overlays.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_isolated_elements--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.set_show_layout_shift_regions","title":"<code>set_show_layout_shift_regions()</code>  <code>async</code>","text":"<p>Requests that backend shows layout shift regions # noqa.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_paint_rects","title":"<code>set_show_paint_rects()</code>  <code>async</code>","text":"<p>Requests that backend shows paint rectangles # noqa.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_scroll_bottleneck_rects","title":"<code>set_show_scroll_bottleneck_rects()</code>  <code>async</code>","text":"<p>Requests that backend shows scroll bottleneck rects # noqa.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_scroll_snap_overlays","title":"<code>set_show_scroll_snap_overlays()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_scroll_snap_overlays--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.set_show_viewport_size_on_resize","title":"<code>set_show_viewport_size_on_resize()</code>  <code>async</code>","text":"<p>Paints viewport size upon main frame resize.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_viewport_size_on_resize--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.overlay.set_show_web_vitals","title":"<code>set_show_web_vitals()</code>  <code>async</code>","text":"<p>Request that backend shows an overlay with web vital metrics.</p>"},{"location":"reference/cdp/#cdp.overlay.set_show_web_vitals--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page","title":"<code>page</code>","text":""},{"location":"reference/cdp/#cdp.page.AdFrameExplanation","title":"<code>AdFrameExplanation</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.AdFrameStatus","title":"<code>AdFrameStatus</code>  <code>dataclass</code>","text":"<p>Indicates whether a frame has been identified as an ad and why.</p>"},{"location":"reference/cdp/#cdp.page.AdFrameType","title":"<code>AdFrameType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Indicates whether a frame has been identified as an ad.</p>"},{"location":"reference/cdp/#cdp.page.AdScriptId","title":"<code>AdScriptId</code>  <code>dataclass</code>","text":"<p>Identifies the bottom-most script which caused the frame to be labelled as an ad.</p>"},{"location":"reference/cdp/#cdp.page.AppManifestError","title":"<code>AppManifestError</code>  <code>dataclass</code>","text":"<p>Error while paring app manifest.</p>"},{"location":"reference/cdp/#cdp.page.AppManifestParsedProperties","title":"<code>AppManifestParsedProperties</code>  <code>dataclass</code>","text":"<p>Parsed app manifest properties.</p>"},{"location":"reference/cdp/#cdp.page.AutoResponseMode","title":"<code>AutoResponseMode</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible auto-reponse for permisison / prompt dialogs.</p>"},{"location":"reference/cdp/#cdp.page.BackForwardCacheNotRestoredExplanation","title":"<code>BackForwardCacheNotRestoredExplanation</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.BackForwardCacheNotRestoredExplanationTree","title":"<code>BackForwardCacheNotRestoredExplanationTree</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.BackForwardCacheNotRestoredReason","title":"<code>BackForwardCacheNotRestoredReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>List of not restored reasons for back-forward cache.</p>"},{"location":"reference/cdp/#cdp.page.BackForwardCacheNotRestoredReasonType","title":"<code>BackForwardCacheNotRestoredReasonType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Types of not restored reasons for back-forward cache.</p>"},{"location":"reference/cdp/#cdp.page.BackForwardCacheNotUsed","title":"<code>BackForwardCacheNotUsed</code>  <code>dataclass</code>","text":"<p>Fired for failed bfcache history navigations if BackForwardCache feature is enabled.</p> <p>Do not assume any ordering with the Page.frameNavigated event. This event is fired only for main-frame history navigation where the document changes (non-same-document navigations), when bfcache navigation fails.</p>"},{"location":"reference/cdp/#cdp.page.ClientNavigationDisposition","title":"<code>ClientNavigationDisposition</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.ClientNavigationReason","title":"<code>ClientNavigationReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.CompilationCacheParams","title":"<code>CompilationCacheParams</code>  <code>dataclass</code>","text":"<p>Per-script compilation cache parameters for <code>Page.produceCompilationCache</code></p>"},{"location":"reference/cdp/#cdp.page.CompilationCacheProduced","title":"<code>CompilationCacheProduced</code>  <code>dataclass</code>","text":"<p>Issued for every compilation cache generated.</p> <p>Is only available if Page.setGenerateCompilationCache is enabled.</p>"},{"location":"reference/cdp/#cdp.page.CrossOriginIsolatedContextType","title":"<code>CrossOriginIsolatedContextType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Indicates whether the frame is cross-origin isolated and why it is the case.</p>"},{"location":"reference/cdp/#cdp.page.DialogType","title":"<code>DialogType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Javascript dialog type.</p>"},{"location":"reference/cdp/#cdp.page.DocumentOpened","title":"<code>DocumentOpened</code>  <code>dataclass</code>","text":"<p>Fired when opening document to write to.</p>"},{"location":"reference/cdp/#cdp.page.DomContentEventFired","title":"<code>DomContentEventFired</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.DownloadProgress","title":"<code>DownloadProgress</code>  <code>dataclass</code>","text":"<p>Fired when download makes progress.</p> <p>Last call has |done| == true. Deprecated. Use Browser.downloadProgress instead.</p>"},{"location":"reference/cdp/#cdp.page.DownloadWillBegin","title":"<code>DownloadWillBegin</code>  <code>dataclass</code>","text":"<p>Fired when page is about to start a download.</p> <p>Deprecated. Use Browser.downloadWillBegin instead.</p>"},{"location":"reference/cdp/#cdp.page.FileChooserOpened","title":"<code>FileChooserOpened</code>  <code>dataclass</code>","text":"<p>Emitted only when <code>page.interceptFileChooser</code> is enabled.</p>"},{"location":"reference/cdp/#cdp.page.FontFamilies","title":"<code>FontFamilies</code>  <code>dataclass</code>","text":"<p>Generic font families collection.</p>"},{"location":"reference/cdp/#cdp.page.FontSizes","title":"<code>FontSizes</code>  <code>dataclass</code>","text":"<p>Default font sizes.</p>"},{"location":"reference/cdp/#cdp.page.Frame","title":"<code>Frame</code>  <code>dataclass</code>","text":"<p>Information about the Frame on the page.</p>"},{"location":"reference/cdp/#cdp.page.FrameAttached","title":"<code>FrameAttached</code>  <code>dataclass</code>","text":"<p>Fired when frame has been attached to its parent.</p>"},{"location":"reference/cdp/#cdp.page.FrameClearedScheduledNavigation","title":"<code>FrameClearedScheduledNavigation</code>  <code>dataclass</code>","text":"<p>Fired when frame no longer has a scheduled navigation.</p>"},{"location":"reference/cdp/#cdp.page.FrameDetached","title":"<code>FrameDetached</code>  <code>dataclass</code>","text":"<p>Fired when frame has been detached from its parent.</p>"},{"location":"reference/cdp/#cdp.page.FrameId","title":"<code>FrameId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique frame identifier.</p>"},{"location":"reference/cdp/#cdp.page.FrameNavigated","title":"<code>FrameNavigated</code>  <code>dataclass</code>","text":"<p>Fired once navigation of the frame has completed.</p> <p>Frame is now associated with the new loader.</p>"},{"location":"reference/cdp/#cdp.page.FrameRequestedNavigation","title":"<code>FrameRequestedNavigation</code>  <code>dataclass</code>","text":"<p>Fired when a renderer-initiated navigation is requested.</p> <p>Navigation may still be cancelled after the event is issued.</p>"},{"location":"reference/cdp/#cdp.page.FrameResized","title":"<code>FrameResized</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.FrameResource","title":"<code>FrameResource</code>  <code>dataclass</code>","text":"<p>Information about the Resource on the page.</p>"},{"location":"reference/cdp/#cdp.page.FrameResourceTree","title":"<code>FrameResourceTree</code>  <code>dataclass</code>","text":"<p>Information about the Frame hierarchy along with their cached resources.</p>"},{"location":"reference/cdp/#cdp.page.FrameScheduledNavigation","title":"<code>FrameScheduledNavigation</code>  <code>dataclass</code>","text":"<p>Fired when frame schedules a potential navigation.</p>"},{"location":"reference/cdp/#cdp.page.FrameStartedLoading","title":"<code>FrameStartedLoading</code>  <code>dataclass</code>","text":"<p>Fired when frame has started loading.</p>"},{"location":"reference/cdp/#cdp.page.FrameStoppedLoading","title":"<code>FrameStoppedLoading</code>  <code>dataclass</code>","text":"<p>Fired when frame has stopped loading.</p>"},{"location":"reference/cdp/#cdp.page.FrameTree","title":"<code>FrameTree</code>  <code>dataclass</code>","text":"<p>Information about the Frame hierarchy.</p>"},{"location":"reference/cdp/#cdp.page.GatedAPIFeatures","title":"<code>GatedAPIFeatures</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.InstallabilityError","title":"<code>InstallabilityError</code>  <code>dataclass</code>","text":"<p>The installability error.</p>"},{"location":"reference/cdp/#cdp.page.InstallabilityErrorArgument","title":"<code>InstallabilityErrorArgument</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.InterstitialHidden","title":"<code>InterstitialHidden</code>  <code>dataclass</code>","text":"<p>Fired when interstitial page was hidden.</p>"},{"location":"reference/cdp/#cdp.page.InterstitialShown","title":"<code>InterstitialShown</code>  <code>dataclass</code>","text":"<p>Fired when interstitial page was shown.</p>"},{"location":"reference/cdp/#cdp.page.JavascriptDialogClosed","title":"<code>JavascriptDialogClosed</code>  <code>dataclass</code>","text":"<p>Fired when a JavaScript initiated dialog (alert, confirm, prompt, or onbeforeunload) has been closed.</p>"},{"location":"reference/cdp/#cdp.page.JavascriptDialogOpening","title":"<code>JavascriptDialogOpening</code>  <code>dataclass</code>","text":"<p>Fired when a JavaScript initiated dialog (alert, confirm, prompt, or onbeforeunload) is about to open.</p>"},{"location":"reference/cdp/#cdp.page.LayoutViewport","title":"<code>LayoutViewport</code>  <code>dataclass</code>","text":"<p>Layout viewport position and dimensions.</p>"},{"location":"reference/cdp/#cdp.page.LifecycleEvent","title":"<code>LifecycleEvent</code>  <code>dataclass</code>","text":"<p>Fired for top level page lifecycle events such as navigation, load, paint, etc.</p>"},{"location":"reference/cdp/#cdp.page.LoadEventFired","title":"<code>LoadEventFired</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.NavigatedWithinDocument","title":"<code>NavigatedWithinDocument</code>  <code>dataclass</code>","text":"<p>Fired when same-document navigation happens, e.g. due to history API usage or anchor navigation.</p>"},{"location":"reference/cdp/#cdp.page.NavigationEntry","title":"<code>NavigationEntry</code>  <code>dataclass</code>","text":"<p>Navigation history entry.</p>"},{"location":"reference/cdp/#cdp.page.NavigationType","title":"<code>NavigationType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The type of a frameNavigated event.</p>"},{"location":"reference/cdp/#cdp.page.OriginTrial","title":"<code>OriginTrial</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.OriginTrialStatus","title":"<code>OriginTrialStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Status for an Origin Trial.</p>"},{"location":"reference/cdp/#cdp.page.OriginTrialToken","title":"<code>OriginTrialToken</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.OriginTrialTokenStatus","title":"<code>OriginTrialTokenStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Origin Trial(https://www.chromium.org/blink/origin-trials) support.</p> <p>Status for an Origin Trial token.</p>"},{"location":"reference/cdp/#cdp.page.OriginTrialTokenWithStatus","title":"<code>OriginTrialTokenWithStatus</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.OriginTrialUsageRestriction","title":"<code>OriginTrialUsageRestriction</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.PermissionsPolicyBlockLocator","title":"<code>PermissionsPolicyBlockLocator</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.PermissionsPolicyBlockReason","title":"<code>PermissionsPolicyBlockReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Reason for a permissions policy feature to be disabled.</p>"},{"location":"reference/cdp/#cdp.page.PermissionsPolicyFeature","title":"<code>PermissionsPolicyFeature</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>All Permissions Policy features.</p> <p>This enum should match the one defined in third_party/blink/renderer/core/permissions_policy/permissions_policy_features.json5.</p>"},{"location":"reference/cdp/#cdp.page.PermissionsPolicyFeatureState","title":"<code>PermissionsPolicyFeatureState</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.ReferrerPolicy","title":"<code>ReferrerPolicy</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The referring-policy used for the navigation.</p>"},{"location":"reference/cdp/#cdp.page.ScreencastFrame","title":"<code>ScreencastFrame</code>  <code>dataclass</code>","text":"<p>Compressed image data requested by the <code>startScreencast</code>.</p>"},{"location":"reference/cdp/#cdp.page.ScreencastFrameMetadata","title":"<code>ScreencastFrameMetadata</code>  <code>dataclass</code>","text":"<p>Screencast frame metadata.</p>"},{"location":"reference/cdp/#cdp.page.ScreencastVisibilityChanged","title":"<code>ScreencastVisibilityChanged</code>  <code>dataclass</code>","text":"<p>Fired when the page with currently enabled screencast was shown or hidden `.</p>"},{"location":"reference/cdp/#cdp.page.ScriptFontFamilies","title":"<code>ScriptFontFamilies</code>  <code>dataclass</code>","text":"<p>Font families collection for a script.</p>"},{"location":"reference/cdp/#cdp.page.ScriptIdentifier","title":"<code>ScriptIdentifier</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique script identifier.</p>"},{"location":"reference/cdp/#cdp.page.SecureContextType","title":"<code>SecureContextType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Indicates whether the frame is a secure context and why it is the case.</p>"},{"location":"reference/cdp/#cdp.page.TransitionType","title":"<code>TransitionType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Transition type.</p>"},{"location":"reference/cdp/#cdp.page.Viewport","title":"<code>Viewport</code>  <code>dataclass</code>","text":"<p>Viewport for capturing screenshot.</p>"},{"location":"reference/cdp/#cdp.page.VisualViewport","title":"<code>VisualViewport</code>  <code>dataclass</code>","text":"<p>Visual viewport position, dimensions, and scale.</p>"},{"location":"reference/cdp/#cdp.page.WindowOpen","title":"<code>WindowOpen</code>  <code>dataclass</code>","text":"<p>Fired when a new window is going to be opened, via window.open(), link click, form submission, etc.</p>"},{"location":"reference/cdp/#cdp.page.add_compilation_cache","title":"<code>add_compilation_cache()</code>  <code>async</code>","text":"<p>Seeds compilation cache for given url.</p> <p>Compilation cache does not survive cross-process navigation. # noqa</p>"},{"location":"reference/cdp/#cdp.page.add_script_to_evaluate_on_load","title":"<code>add_script_to_evaluate_on_load()</code>  <code>async</code>","text":"<p>Deprecated, please use addScriptToEvaluateOnNewDocument instead.</p>"},{"location":"reference/cdp/#cdp.page.add_script_to_evaluate_on_load--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.add_script_to_evaluate_on_new_document","title":"<code>add_script_to_evaluate_on_new_document()</code>  <code>async</code>","text":"<p>Evaluates given script in every frame upon creation (before loading frame's scripts).</p>"},{"location":"reference/cdp/#cdp.page.add_script_to_evaluate_on_new_document--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.bring_to_front","title":"<code>bring_to_front()</code>  <code>async</code>","text":"<p>Brings page to front (activates tab).</p>"},{"location":"reference/cdp/#cdp.page.bring_to_front--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.capture_screenshot","title":"<code>capture_screenshot()</code>  <code>async</code>","text":"<p>Capture page screenshot.</p>"},{"location":"reference/cdp/#cdp.page.capture_screenshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.capture_snapshot","title":"<code>capture_snapshot()</code>  <code>async</code>","text":"<p>Returns a snapshot of the page as a string.</p> <p>For MHTML format, the serialization includes iframes, shadow DOM, external resources, and element-inline styles. # noqa</p>"},{"location":"reference/cdp/#cdp.page.clear_compilation_cache","title":"<code>clear_compilation_cache()</code>  <code>async</code>","text":"<p>Clears seeded compilation cache.</p>"},{"location":"reference/cdp/#cdp.page.clear_compilation_cache--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.clear_device_metrics_override","title":"<code>clear_device_metrics_override()</code>  <code>async</code>","text":"<p>Clears the overridden device metrics.</p>"},{"location":"reference/cdp/#cdp.page.clear_device_metrics_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.clear_device_orientation_override","title":"<code>clear_device_orientation_override()</code>  <code>async</code>","text":"<p>Clears the overridden Device Orientation.</p>"},{"location":"reference/cdp/#cdp.page.clear_device_orientation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.clear_geolocation_override","title":"<code>clear_geolocation_override()</code>  <code>async</code>","text":"<p>Clears the overridden Geolocation Position and Error.</p>"},{"location":"reference/cdp/#cdp.page.clear_geolocation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.close","title":"<code>close()</code>  <code>async</code>","text":"<p>Tries to close page, running its beforeunload hooks, if any.</p>"},{"location":"reference/cdp/#cdp.page.close--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.crash","title":"<code>crash()</code>  <code>async</code>","text":"<p>Crashes renderer on the IO thread, generates minidumps.</p>"},{"location":"reference/cdp/#cdp.page.crash--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.create_isolated_world","title":"<code>create_isolated_world()</code>  <code>async</code>","text":"<p>Creates an isolated world for the given frame.</p>"},{"location":"reference/cdp/#cdp.page.create_isolated_world--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.delete_cookie","title":"<code>delete_cookie()</code>  <code>async</code>","text":"<p>Deletes browser cookie with given name, domain and path.</p>"},{"location":"reference/cdp/#cdp.page.delete_cookie--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables page domain notifications.</p>"},{"location":"reference/cdp/#cdp.page.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables page domain notifications.</p>"},{"location":"reference/cdp/#cdp.page.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.generate_test_report","title":"<code>generate_test_report()</code>  <code>async</code>","text":"<p>Generates a report for testing.</p>"},{"location":"reference/cdp/#cdp.page.generate_test_report--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.get_ad_script_id","title":"<code>get_ad_script_id()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.get_ad_script_id--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.get_app_id","title":"<code>get_app_id()</code>  <code>async</code>","text":"<p>Returns the unique (PWA) app id.</p> <p>Only returns values if the feature flag 'WebAppEnableManifestId' is enabled # noqa</p>"},{"location":"reference/cdp/#cdp.page.get_app_manifest","title":"<code>get_app_manifest()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.get_app_manifest--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.get_cookies","title":"<code>get_cookies()</code>  <code>async</code>","text":"<p>Returns all browser cookies for the page and all of its subframes.</p> <p>Depending on the backend support, will return detailed cookie information in the <code>cookies</code> field. # noqa</p>"},{"location":"reference/cdp/#cdp.page.get_frame_tree","title":"<code>get_frame_tree()</code>  <code>async</code>","text":"<p>Returns present frame tree structure.</p>"},{"location":"reference/cdp/#cdp.page.get_frame_tree--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.get_installability_errors","title":"<code>get_installability_errors()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.page.get_installability_errors--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.get_layout_metrics","title":"<code>get_layout_metrics()</code>  <code>async</code>","text":"<p>Returns metrics relating to the layouting of the page, such as viewport bounds/scale.</p>"},{"location":"reference/cdp/#cdp.page.get_layout_metrics--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.get_manifest_icons","title":"<code>get_manifest_icons()</code>  <code>async</code>","text":"<p>Deprecated because it's not guaranteed that the returned icon is in fact the one used for PWA installation.</p>"},{"location":"reference/cdp/#cdp.page.get_manifest_icons--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.get_navigation_history","title":"<code>get_navigation_history()</code>  <code>async</code>","text":"<p>Returns navigation history for the current page.</p>"},{"location":"reference/cdp/#cdp.page.get_navigation_history--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.get_origin_trials","title":"<code>get_origin_trials()</code>  <code>async</code>","text":"<p>Get Origin Trials on given frame.</p>"},{"location":"reference/cdp/#cdp.page.get_origin_trials--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.get_permissions_policy_state","title":"<code>get_permissions_policy_state()</code>  <code>async</code>","text":"<p>Get Permissions Policy state on given frame.</p>"},{"location":"reference/cdp/#cdp.page.get_permissions_policy_state--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.get_resource_content","title":"<code>get_resource_content()</code>  <code>async</code>","text":"<p>Returns content of the given resource.</p>"},{"location":"reference/cdp/#cdp.page.get_resource_content--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.get_resource_tree","title":"<code>get_resource_tree()</code>  <code>async</code>","text":"<p>Returns present frame / resource tree structure.</p>"},{"location":"reference/cdp/#cdp.page.get_resource_tree--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.handle_java_script_dialog","title":"<code>handle_java_script_dialog()</code>  <code>async</code>","text":"<p>Accepts or dismisses a JavaScript initiated dialog (alert, confirm, prompt, or onbeforeunload).</p>"},{"location":"reference/cdp/#cdp.page.handle_java_script_dialog--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.navigate","title":"<code>navigate()</code>  <code>async</code>","text":"<p>Navigates current page to the given URL.</p>"},{"location":"reference/cdp/#cdp.page.navigate--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.navigate_to_history_entry","title":"<code>navigate_to_history_entry()</code>  <code>async</code>","text":"<p>Navigates current page to the given history entry.</p>"},{"location":"reference/cdp/#cdp.page.navigate_to_history_entry--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.print_to_pdf","title":"<code>print_to_pdf()</code>  <code>async</code>","text":"<p>Print page as PDF.</p>"},{"location":"reference/cdp/#cdp.page.print_to_pdf--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.produce_compilation_cache","title":"<code>produce_compilation_cache()</code>  <code>async</code>","text":"<p>Requests backend to produce compilation cache for the specified scripts.</p> <p><code>scripts</code> are appeneded to the list of scripts for which the cache would be produced. The list may be reset during page navigation. When script with a matching URL is encountered, the cache is optionally produced upon backend discretion, based on internal heuristics. See also: <code>Page.compilationCacheProduced</code>. # noqa</p>"},{"location":"reference/cdp/#cdp.page.reload","title":"<code>reload()</code>  <code>async</code>","text":"<p>Reloads given page optionally ignoring the cache.</p>"},{"location":"reference/cdp/#cdp.page.reload--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.remove_script_to_evaluate_on_load","title":"<code>remove_script_to_evaluate_on_load()</code>  <code>async</code>","text":"<p>Deprecated, please use removeScriptToEvaluateOnNewDocument instead.</p>"},{"location":"reference/cdp/#cdp.page.remove_script_to_evaluate_on_load--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.remove_script_to_evaluate_on_new_document","title":"<code>remove_script_to_evaluate_on_new_document()</code>  <code>async</code>","text":"<p>Removes given script from the list.</p>"},{"location":"reference/cdp/#cdp.page.remove_script_to_evaluate_on_new_document--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.reset_navigation_history","title":"<code>reset_navigation_history()</code>  <code>async</code>","text":"<p>Resets navigation history for the current page.</p>"},{"location":"reference/cdp/#cdp.page.reset_navigation_history--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.screencast_frame_ack","title":"<code>screencast_frame_ack()</code>  <code>async</code>","text":"<p>Acknowledges that a screencast frame has been received by the frontend.</p>"},{"location":"reference/cdp/#cdp.page.screencast_frame_ack--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.search_in_resource","title":"<code>search_in_resource()</code>  <code>async</code>","text":"<p>Searches for given string in resource content.</p>"},{"location":"reference/cdp/#cdp.page.search_in_resource--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.set_ad_blocking_enabled","title":"<code>set_ad_blocking_enabled()</code>  <code>async</code>","text":"<p>Enable Chrome's experimental ad filter on all sites.</p>"},{"location":"reference/cdp/#cdp.page.set_ad_blocking_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.set_bypass_csp","title":"<code>set_bypass_csp()</code>  <code>async</code>","text":"<p>Enable page Content Security Policy by-passing.</p>"},{"location":"reference/cdp/#cdp.page.set_bypass_csp--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.set_device_metrics_override","title":"<code>set_device_metrics_override()</code>  <code>async</code>","text":"<p>Overrides the values of device screen dimensions (window.screen.width, window.screen.height, window.innerWidth, window.innerHeight, and \"device-width\"/\"device-height\"-related CSS media query results).</p>"},{"location":"reference/cdp/#cdp.page.set_device_metrics_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.set_device_orientation_override","title":"<code>set_device_orientation_override()</code>  <code>async</code>","text":"<p>Overrides the Device Orientation.</p>"},{"location":"reference/cdp/#cdp.page.set_device_orientation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.set_document_content","title":"<code>set_document_content()</code>  <code>async</code>","text":"<p>Sets given markup as the document's HTML.</p>"},{"location":"reference/cdp/#cdp.page.set_document_content--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.set_download_behavior","title":"<code>set_download_behavior()</code>  <code>async</code>","text":"<p>Set the behavior when downloading a file.</p>"},{"location":"reference/cdp/#cdp.page.set_download_behavior--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.set_font_families","title":"<code>set_font_families()</code>  <code>async</code>","text":"<p>Set generic font families.</p>"},{"location":"reference/cdp/#cdp.page.set_font_families--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.set_font_sizes","title":"<code>set_font_sizes()</code>  <code>async</code>","text":"<p>Set default font sizes.</p>"},{"location":"reference/cdp/#cdp.page.set_font_sizes--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.set_geolocation_override","title":"<code>set_geolocation_override()</code>  <code>async</code>","text":"<p>Overrides the Geolocation Position or Error.</p> <p>Omitting any of the parameters emulates position unavailable. # noqa</p>"},{"location":"reference/cdp/#cdp.page.set_intercept_file_chooser_dialog","title":"<code>set_intercept_file_chooser_dialog()</code>  <code>async</code>","text":"<p>Intercept file chooser requests and transfer control to protocol clients.</p> <p>When file chooser interception is enabled, native file chooser dialog is not shown. Instead, a protocol event <code>Page.fileChooserOpened</code> is emitted. # noqa</p>"},{"location":"reference/cdp/#cdp.page.set_lifecycle_events_enabled","title":"<code>set_lifecycle_events_enabled()</code>  <code>async</code>","text":"<p>Controls whether page will emit lifecycle events.</p>"},{"location":"reference/cdp/#cdp.page.set_lifecycle_events_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.set_rph_registration_mode","title":"<code>set_rph_registration_mode()</code>  <code>async</code>","text":"<p>Extensions for Custom Handlers API:</p> <p>https://html.spec.whatwg.org/multipage/system-state.html#rph-automation # noqa</p>"},{"location":"reference/cdp/#cdp.page.set_spc_transaction_mode","title":"<code>set_spc_transaction_mode()</code>  <code>async</code>","text":"<p>Sets the Secure Payment Confirmation transaction mode.</p> <p>https://w3c.github.io/secure-payment-confirmation/#sctn-automation-set-spc-transaction-mode # noqa</p>"},{"location":"reference/cdp/#cdp.page.set_touch_emulation_enabled","title":"<code>set_touch_emulation_enabled()</code>  <code>async</code>","text":"<p>Toggles mouse event-based touch event emulation.</p>"},{"location":"reference/cdp/#cdp.page.set_touch_emulation_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.set_web_lifecycle_state","title":"<code>set_web_lifecycle_state()</code>  <code>async</code>","text":"<p>Tries to update the web lifecycle state of the page.</p> <p>It will transition the page to the given state according to: https://github.com/WICG/web-lifecycle/ # noqa</p>"},{"location":"reference/cdp/#cdp.page.start_screencast","title":"<code>start_screencast()</code>  <code>async</code>","text":"<p>Starts sending each frame using the <code>screencastFrame</code> event.</p>"},{"location":"reference/cdp/#cdp.page.start_screencast--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.stop_loading","title":"<code>stop_loading()</code>  <code>async</code>","text":"<p>Force the page stop all navigations and pending resource fetches.</p>"},{"location":"reference/cdp/#cdp.page.stop_loading--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.stop_screencast","title":"<code>stop_screencast()</code>  <code>async</code>","text":"<p>Stops sending each frame in the <code>screencastFrame</code>.</p>"},{"location":"reference/cdp/#cdp.page.stop_screencast--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.page.wait_for_debugger","title":"<code>wait_for_debugger()</code>  <code>async</code>","text":"<p>Pauses page execution.</p> <p>Can be resumed using generic Runtime.runIfWaitingForDebugger. # noqa</p>"},{"location":"reference/cdp/#cdp.performance","title":"<code>performance</code>","text":""},{"location":"reference/cdp/#cdp.performance.Metric","title":"<code>Metric</code>  <code>dataclass</code>","text":"<p>Run-time execution metric.</p>"},{"location":"reference/cdp/#cdp.performance.Metrics","title":"<code>Metrics</code>  <code>dataclass</code>","text":"<p>Current values of the metrics.</p>"},{"location":"reference/cdp/#cdp.performance.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disable collecting and reporting metrics.</p>"},{"location":"reference/cdp/#cdp.performance.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.performance.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enable collecting and reporting metrics.</p>"},{"location":"reference/cdp/#cdp.performance.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.performance.get_metrics","title":"<code>get_metrics()</code>  <code>async</code>","text":"<p>Retrieve current values of run-time metrics.</p>"},{"location":"reference/cdp/#cdp.performance.get_metrics--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.performance.set_time_domain","title":"<code>set_time_domain()</code>  <code>async</code>","text":"<p>Sets time domain to use for collecting and reporting duration metrics.</p> <p>Note that this must be called before enabling metrics collection. Calling this method while metrics collection is enabled returns an error. # noqa</p>"},{"location":"reference/cdp/#cdp.performance_timeline","title":"<code>performance_timeline</code>","text":""},{"location":"reference/cdp/#cdp.performance_timeline.LargestContentfulPaint","title":"<code>LargestContentfulPaint</code>  <code>dataclass</code>","text":"<p>See https://github.com/WICG/LargestContentfulPaint and largest_contentful_paint.idl.</p>"},{"location":"reference/cdp/#cdp.performance_timeline.LayoutShift","title":"<code>LayoutShift</code>  <code>dataclass</code>","text":"<p>See https://wicg.github.io/layout-instability/#sec-layout-shift and layout_shift.idl.</p>"},{"location":"reference/cdp/#cdp.performance_timeline.LayoutShiftAttribution","title":"<code>LayoutShiftAttribution</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.performance_timeline.TimelineEvent","title":"<code>TimelineEvent</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.performance_timeline.TimelineEventAdded","title":"<code>TimelineEventAdded</code>  <code>dataclass</code>","text":"<p>Sent when a performance timeline event is added.</p> <p>See reportPerformanceTimeline method.</p>"},{"location":"reference/cdp/#cdp.performance_timeline.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Previously buffered events would be reported before method returns.</p> <p>See also: timelineEventAdded # noqa</p>"},{"location":"reference/cdp/#cdp.preload","title":"<code>preload</code>","text":""},{"location":"reference/cdp/#cdp.preload.PrefetchStatusUpdated","title":"<code>PrefetchStatusUpdated</code>  <code>dataclass</code>","text":"<p>Fired when a prefetch attempt is updated.</p>"},{"location":"reference/cdp/#cdp.preload.PreloadingAttemptKey","title":"<code>PreloadingAttemptKey</code>  <code>dataclass</code>","text":"<p>A key that identifies a preloading attempt.</p> <p>The url used is the url specified by the trigger (i.e. the initial URL), and not the final url that is navigated to. For example, prerendering allows same-origin main frame navigations during the attempt, but the attempt is still keyed with the initial URL.</p>"},{"location":"reference/cdp/#cdp.preload.PreloadingAttemptSource","title":"<code>PreloadingAttemptSource</code>  <code>dataclass</code>","text":"<p>Lists sources for a preloading attempt, specifically the ids of rule sets that had a speculation rule that triggered the attempt, and the BackendNodeIds of  or  elements that triggered the attempt (in the case of attempts triggered by a document rule). <p>It is possible for mulitple rule sets and links to trigger a single attempt.</p>"},{"location":"reference/cdp/#cdp.preload.PreloadingAttemptSourcesUpdated","title":"<code>PreloadingAttemptSourcesUpdated</code>  <code>dataclass</code>","text":"<p>Send a list of sources for all preloading attempts in a document.</p>"},{"location":"reference/cdp/#cdp.preload.PreloadingStatus","title":"<code>PreloadingStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Preloading status values, see also PreloadingTriggeringOutcome.</p> <p>This status is shared by prefetchStatusUpdated and prerenderStatusUpdated.</p>"},{"location":"reference/cdp/#cdp.preload.PrerenderAttemptCompleted","title":"<code>PrerenderAttemptCompleted</code>  <code>dataclass</code>","text":"<p>Fired when a prerender attempt is completed.</p>"},{"location":"reference/cdp/#cdp.preload.PrerenderFinalStatus","title":"<code>PrerenderFinalStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>List of FinalStatus reasons for Prerender2.</p>"},{"location":"reference/cdp/#cdp.preload.PrerenderStatusUpdated","title":"<code>PrerenderStatusUpdated</code>  <code>dataclass</code>","text":"<p>Fired when a prerender attempt is updated.</p>"},{"location":"reference/cdp/#cdp.preload.RuleSet","title":"<code>RuleSet</code>  <code>dataclass</code>","text":"<p>Corresponds to SpeculationRuleSet.</p>"},{"location":"reference/cdp/#cdp.preload.RuleSetErrorType","title":"<code>RuleSetErrorType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.preload.RuleSetId","title":"<code>RuleSetId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique id.</p>"},{"location":"reference/cdp/#cdp.preload.RuleSetRemoved","title":"<code>RuleSetRemoved</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.preload.RuleSetUpdated","title":"<code>RuleSetUpdated</code>  <code>dataclass</code>","text":"<p>Upsert.</p> <p>Currently, it is only emitted when a rule set added.</p>"},{"location":"reference/cdp/#cdp.preload.SpeculationAction","title":"<code>SpeculationAction</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The type of preloading attempted.</p> <p>It corresponds to mojom::SpeculationAction (although PrefetchWithSubresources is omitted as it isn't being used by clients).</p>"},{"location":"reference/cdp/#cdp.preload.SpeculationTargetHint","title":"<code>SpeculationTargetHint</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Corresponds to mojom::SpeculationTargetHint.</p> <p>See https://github.com/WICG/nav-speculation/blob/main/triggers.md#window-name-targeting-hints</p>"},{"location":"reference/cdp/#cdp.preload.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.preload.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.preload.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.preload.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.profiler","title":"<code>profiler</code>","text":""},{"location":"reference/cdp/#cdp.profiler.ConsoleProfileFinished","title":"<code>ConsoleProfileFinished</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.profiler.ConsoleProfileStarted","title":"<code>ConsoleProfileStarted</code>  <code>dataclass</code>","text":"<p>Sent when new profile recording is started using console.profile() call.</p>"},{"location":"reference/cdp/#cdp.profiler.CoverageRange","title":"<code>CoverageRange</code>  <code>dataclass</code>","text":"<p>Coverage data for a source range.</p>"},{"location":"reference/cdp/#cdp.profiler.FunctionCoverage","title":"<code>FunctionCoverage</code>  <code>dataclass</code>","text":"<p>Coverage data for a JavaScript function.</p>"},{"location":"reference/cdp/#cdp.profiler.PositionTickInfo","title":"<code>PositionTickInfo</code>  <code>dataclass</code>","text":"<p>Specifies a number of samples attributed to a certain source position.</p>"},{"location":"reference/cdp/#cdp.profiler.PreciseCoverageDeltaUpdate","title":"<code>PreciseCoverageDeltaUpdate</code>  <code>dataclass</code>","text":"<p>Reports coverage delta since the last poll (either from an event like this, or from <code>takePreciseCoverage</code> for the current isolate.</p> <p>May only be sent if precise code coverage has been started. This event can be trigged by the embedder to, for example, trigger collection of coverage data immediately at a certain point in time.</p>"},{"location":"reference/cdp/#cdp.profiler.Profile","title":"<code>Profile</code>  <code>dataclass</code>","text":"<p>Profile.</p>"},{"location":"reference/cdp/#cdp.profiler.ProfileNode","title":"<code>ProfileNode</code>  <code>dataclass</code>","text":"<p>Profile node.</p> <p>Holds callsite information, execution statistics and child nodes.</p>"},{"location":"reference/cdp/#cdp.profiler.ScriptCoverage","title":"<code>ScriptCoverage</code>  <code>dataclass</code>","text":"<p>Coverage data for a JavaScript script.</p>"},{"location":"reference/cdp/#cdp.profiler.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.profiler.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.profiler.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.profiler.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.profiler.get_best_effort_coverage","title":"<code>get_best_effort_coverage()</code>  <code>async</code>","text":"<p>Collect coverage data for the current isolate.</p> <p>The coverage data may be incomplete due to garbage collection. # noqa</p>"},{"location":"reference/cdp/#cdp.profiler.set_sampling_interval","title":"<code>set_sampling_interval()</code>  <code>async</code>","text":"<p>Changes CPU profiler sampling interval.</p> <p>Must be called before CPU profiles recording started. # noqa</p>"},{"location":"reference/cdp/#cdp.profiler.start","title":"<code>start()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.profiler.start--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.profiler.start_precise_coverage","title":"<code>start_precise_coverage()</code>  <code>async</code>","text":"<p>Enable precise code coverage.</p> <p>Coverage data for JavaScript executed before enabling precise code coverage may be incomplete. Enabling prevents running optimized code and resets execution counters. # noqa</p>"},{"location":"reference/cdp/#cdp.profiler.stop","title":"<code>stop()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.profiler.stop--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.profiler.stop_precise_coverage","title":"<code>stop_precise_coverage()</code>  <code>async</code>","text":"<p>Disable precise code coverage.</p> <p>Disabling releases unnecessary execution count records and allows executing optimized code. # noqa</p>"},{"location":"reference/cdp/#cdp.profiler.take_precise_coverage","title":"<code>take_precise_coverage()</code>  <code>async</code>","text":"<p>Collect coverage data for the current isolate, and resets execution counters.</p> <p>Precise code coverage needs to have started. # noqa</p>"},{"location":"reference/cdp/#cdp.runtime","title":"<code>runtime</code>","text":""},{"location":"reference/cdp/#cdp.runtime.BindingCalled","title":"<code>BindingCalled</code>  <code>dataclass</code>","text":"<p>Notification is issued every time when binding is called.</p>"},{"location":"reference/cdp/#cdp.runtime.CallArgument","title":"<code>CallArgument</code>  <code>dataclass</code>","text":"<p>Represents function call argument.</p> <p>Either remote object id <code>objectId</code>, primitive <code>value</code>, unserializable primitive value or neither of (for undefined) them should be specified.</p>"},{"location":"reference/cdp/#cdp.runtime.CallFrame","title":"<code>CallFrame</code>  <code>dataclass</code>","text":"<p>Stack entry for runtime errors and assertions.</p>"},{"location":"reference/cdp/#cdp.runtime.ConsoleAPICalled","title":"<code>ConsoleAPICalled</code>  <code>dataclass</code>","text":"<p>Issued when console API was called.</p>"},{"location":"reference/cdp/#cdp.runtime.CustomPreview","title":"<code>CustomPreview</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.runtime.EntryPreview","title":"<code>EntryPreview</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.runtime.ExceptionDetails","title":"<code>ExceptionDetails</code>  <code>dataclass</code>","text":"<p>Detailed information about exception (or error) that was thrown during script compilation or execution.</p>"},{"location":"reference/cdp/#cdp.runtime.ExceptionRevoked","title":"<code>ExceptionRevoked</code>  <code>dataclass</code>","text":"<p>Issued when unhandled exception was revoked.</p>"},{"location":"reference/cdp/#cdp.runtime.ExceptionThrown","title":"<code>ExceptionThrown</code>  <code>dataclass</code>","text":"<p>Issued when exception was thrown and unhandled.</p>"},{"location":"reference/cdp/#cdp.runtime.ExecutionContextCreated","title":"<code>ExecutionContextCreated</code>  <code>dataclass</code>","text":"<p>Issued when new execution context is created.</p>"},{"location":"reference/cdp/#cdp.runtime.ExecutionContextDescription","title":"<code>ExecutionContextDescription</code>  <code>dataclass</code>","text":"<p>Description of an isolated world.</p>"},{"location":"reference/cdp/#cdp.runtime.ExecutionContextDestroyed","title":"<code>ExecutionContextDestroyed</code>  <code>dataclass</code>","text":"<p>Issued when execution context is destroyed.</p>"},{"location":"reference/cdp/#cdp.runtime.ExecutionContextId","title":"<code>ExecutionContextId</code>","text":"<p>         Bases: <code>int</code></p> <p>Id of an execution context.</p>"},{"location":"reference/cdp/#cdp.runtime.ExecutionContextsCleared","title":"<code>ExecutionContextsCleared</code>  <code>dataclass</code>","text":"<p>Issued when all executionContexts were cleared in browser.</p>"},{"location":"reference/cdp/#cdp.runtime.InspectRequested","title":"<code>InspectRequested</code>  <code>dataclass</code>","text":"<p>Issued when object should be inspected (for example, as a result of inspect() command line API call).</p>"},{"location":"reference/cdp/#cdp.runtime.InternalPropertyDescriptor","title":"<code>InternalPropertyDescriptor</code>  <code>dataclass</code>","text":"<p>Object internal property descriptor.</p> <p>This property isn't normally visible in JavaScript code.</p>"},{"location":"reference/cdp/#cdp.runtime.ObjectPreview","title":"<code>ObjectPreview</code>  <code>dataclass</code>","text":"<p>Object containing abbreviated remote object value.</p>"},{"location":"reference/cdp/#cdp.runtime.PrivatePropertyDescriptor","title":"<code>PrivatePropertyDescriptor</code>  <code>dataclass</code>","text":"<p>Object private field descriptor.</p>"},{"location":"reference/cdp/#cdp.runtime.PropertyDescriptor","title":"<code>PropertyDescriptor</code>  <code>dataclass</code>","text":"<p>Object property descriptor.</p>"},{"location":"reference/cdp/#cdp.runtime.PropertyPreview","title":"<code>PropertyPreview</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.runtime.RemoteObject","title":"<code>RemoteObject</code>  <code>dataclass</code>","text":"<p>Mirror object referencing original JavaScript object.</p>"},{"location":"reference/cdp/#cdp.runtime.RemoteObjectId","title":"<code>RemoteObjectId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique object identifier.</p>"},{"location":"reference/cdp/#cdp.runtime.ScriptId","title":"<code>ScriptId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique script identifier.</p>"},{"location":"reference/cdp/#cdp.runtime.StackTrace","title":"<code>StackTrace</code>  <code>dataclass</code>","text":"<p>Call frames for assertions or error messages.</p>"},{"location":"reference/cdp/#cdp.runtime.StackTraceId","title":"<code>StackTraceId</code>  <code>dataclass</code>","text":"<p>If <code>debuggerId</code> is set stack trace comes from another debugger and can be resolved there.</p> <p>This allows to track cross-debugger calls. See <code>Runtime.StackTrace</code> and <code>Debugger.paused</code> for usages.</p>"},{"location":"reference/cdp/#cdp.runtime.TimeDelta","title":"<code>TimeDelta</code>","text":"<p>         Bases: <code>float</code></p> <p>Number of milliseconds.</p>"},{"location":"reference/cdp/#cdp.runtime.Timestamp","title":"<code>Timestamp</code>","text":"<p>         Bases: <code>float</code></p> <p>Number of milliseconds since epoch.</p>"},{"location":"reference/cdp/#cdp.runtime.UniqueDebuggerId","title":"<code>UniqueDebuggerId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique identifier of current debugger.</p>"},{"location":"reference/cdp/#cdp.runtime.UnserializableValue","title":"<code>UnserializableValue</code>","text":"<p>         Bases: <code>str</code></p> <p>Primitive value which cannot be JSON-stringified.</p> <p>Includes values <code>-0</code>, <code>NaN</code>, <code>Infinity</code>, <code>-Infinity</code>, and bigint literals.</p>"},{"location":"reference/cdp/#cdp.runtime.WebDriverValue","title":"<code>WebDriverValue</code>  <code>dataclass</code>","text":"<p>Represents the value serialiazed by the WebDriver BiDi specification https://w3c.github.io/webdriver-bidi.</p>"},{"location":"reference/cdp/#cdp.runtime.add_binding","title":"<code>add_binding()</code>  <code>async</code>","text":"<p>If executionContextId is empty, adds binding with the given name on the global objects of all inspected contexts, including those created later, bindings survive reloads.</p> <p>Binding function takes exactly one argument, this argument should be string, in case of any other input, function throws an exception. Each binding function call produces Runtime.bindingCalled notification. # noqa</p>"},{"location":"reference/cdp/#cdp.runtime.await_promise","title":"<code>await_promise()</code>  <code>async</code>","text":"<p>Add handler to promise with given promise object id.</p>"},{"location":"reference/cdp/#cdp.runtime.await_promise--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.call_function_on","title":"<code>call_function_on()</code>  <code>async</code>","text":"<p>Calls function with given declaration on the given object.</p> <p>Object group of the result is inherited from the target object. # noqa</p>"},{"location":"reference/cdp/#cdp.runtime.compile_script","title":"<code>compile_script()</code>  <code>async</code>","text":"<p>Compiles expression.</p>"},{"location":"reference/cdp/#cdp.runtime.compile_script--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables reporting of execution contexts creation.</p>"},{"location":"reference/cdp/#cdp.runtime.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.discard_console_entries","title":"<code>discard_console_entries()</code>  <code>async</code>","text":"<p>Discards collected exceptions and console API calls.</p>"},{"location":"reference/cdp/#cdp.runtime.discard_console_entries--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables reporting of execution contexts creation by means of <code>executionContextCreated</code> event.</p> <p>When the reporting gets enabled the event will be sent immediately for each existing execution context. # noqa</p>"},{"location":"reference/cdp/#cdp.runtime.evaluate","title":"<code>evaluate()</code>  <code>async</code>","text":"<p>Evaluates expression on global object.</p>"},{"location":"reference/cdp/#cdp.runtime.evaluate--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.get_exception_details","title":"<code>get_exception_details()</code>  <code>async</code>","text":"<p>This method tries to lookup and populate exception details for a JavaScript Error object.</p> <p>Note that the stackTrace portion of the resulting exceptionDetails will only be populated if the Runtime domain was enabled at the time when the Error was thrown. # noqa</p>"},{"location":"reference/cdp/#cdp.runtime.get_heap_usage","title":"<code>get_heap_usage()</code>  <code>async</code>","text":"<p>Returns the JavaScript heap usage.</p> <p>It is the total usage of the corresponding isolate not scoped to a particular Runtime. # noqa</p>"},{"location":"reference/cdp/#cdp.runtime.get_isolate_id","title":"<code>get_isolate_id()</code>  <code>async</code>","text":"<p>Returns the isolate id.</p>"},{"location":"reference/cdp/#cdp.runtime.get_isolate_id--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.get_properties","title":"<code>get_properties()</code>  <code>async</code>","text":"<p>Returns properties of a given object.</p> <p>Object group of the result is inherited from the target object. # noqa</p>"},{"location":"reference/cdp/#cdp.runtime.global_lexical_scope_names","title":"<code>global_lexical_scope_names()</code>  <code>async</code>","text":"<p>Returns all let, const and class variables from global scope.</p>"},{"location":"reference/cdp/#cdp.runtime.global_lexical_scope_names--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.query_objects","title":"<code>query_objects()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.runtime.query_objects--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.release_object","title":"<code>release_object()</code>  <code>async</code>","text":"<p>Releases remote object with given id.</p>"},{"location":"reference/cdp/#cdp.runtime.release_object--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.release_object_group","title":"<code>release_object_group()</code>  <code>async</code>","text":"<p>Releases all remote objects that belong to a given group.</p>"},{"location":"reference/cdp/#cdp.runtime.release_object_group--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.remove_binding","title":"<code>remove_binding()</code>  <code>async</code>","text":"<p>This method does not remove binding function from global object but unsubscribes current runtime agent from Runtime.bindingCalled notifications.</p>"},{"location":"reference/cdp/#cdp.runtime.remove_binding--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.run_if_waiting_for_debugger","title":"<code>run_if_waiting_for_debugger()</code>  <code>async</code>","text":"<p>Tells inspected instance to run if it was waiting for debugger to attach.</p>"},{"location":"reference/cdp/#cdp.runtime.run_if_waiting_for_debugger--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.run_script","title":"<code>run_script()</code>  <code>async</code>","text":"<p>Runs script with given id in a given context.</p>"},{"location":"reference/cdp/#cdp.runtime.run_script--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.set_async_call_stack_depth","title":"<code>set_async_call_stack_depth()</code>  <code>async</code>","text":"<p>Enables or disables async call stacks tracking.</p>"},{"location":"reference/cdp/#cdp.runtime.set_async_call_stack_depth--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.set_custom_object_formatter_enabled","title":"<code>set_custom_object_formatter_enabled()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.runtime.set_custom_object_formatter_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.set_max_call_stack_size_to_capture","title":"<code>set_max_call_stack_size_to_capture()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.runtime.set_max_call_stack_size_to_capture--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.runtime.terminate_execution","title":"<code>terminate_execution()</code>  <code>async</code>","text":"<p>Terminate current or next JavaScript execution.</p> <p>Will cancel the termination when the outer-most script execution ends. # noqa</p>"},{"location":"reference/cdp/#cdp.schema","title":"<code>schema</code>","text":""},{"location":"reference/cdp/#cdp.schema.Domain","title":"<code>Domain</code>  <code>dataclass</code>","text":"<p>Description of the protocol domain.</p>"},{"location":"reference/cdp/#cdp.schema.get_domains","title":"<code>get_domains()</code>  <code>async</code>","text":"<p>Returns supported domains.</p>"},{"location":"reference/cdp/#cdp.schema.get_domains--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.security","title":"<code>security</code>","text":""},{"location":"reference/cdp/#cdp.security.CertificateError","title":"<code>CertificateError</code>  <code>dataclass</code>","text":"<p>There is a certificate error.</p> <p>If overriding certificate errors is enabled, then it should be handled with the <code>handleCertificateError</code> command. Note: this event does not fire if the certificate error has been allowed internally. Only one client per target should override certificate errors at the same time.</p>"},{"location":"reference/cdp/#cdp.security.CertificateErrorAction","title":"<code>CertificateErrorAction</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The action to take when a certificate error occurs.</p> <p>continue will continue processing the request and cancel will cancel the request.</p>"},{"location":"reference/cdp/#cdp.security.CertificateId","title":"<code>CertificateId</code>","text":"<p>         Bases: <code>int</code></p> <p>An internal certificate ID value.</p>"},{"location":"reference/cdp/#cdp.security.CertificateSecurityState","title":"<code>CertificateSecurityState</code>  <code>dataclass</code>","text":"<p>Details about the security state of the page certificate.</p>"},{"location":"reference/cdp/#cdp.security.InsecureContentStatus","title":"<code>InsecureContentStatus</code>  <code>dataclass</code>","text":"<p>Information about insecure content on the page.</p>"},{"location":"reference/cdp/#cdp.security.MixedContentType","title":"<code>MixedContentType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>A description of mixed content (HTTP resources on HTTPS pages), as defined by https://www.w3.org/TR/mixed- content/#categories.</p>"},{"location":"reference/cdp/#cdp.security.SafetyTipInfo","title":"<code>SafetyTipInfo</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.security.SafetyTipStatus","title":"<code>SafetyTipStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.security.SecurityState","title":"<code>SecurityState</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The security level of a page or resource.</p>"},{"location":"reference/cdp/#cdp.security.SecurityStateChanged","title":"<code>SecurityStateChanged</code>  <code>dataclass</code>","text":"<p>The security state of the page changed.</p> <p>No longer being sent.</p>"},{"location":"reference/cdp/#cdp.security.SecurityStateExplanation","title":"<code>SecurityStateExplanation</code>  <code>dataclass</code>","text":"<p>An explanation of an factor contributing to the security state.</p>"},{"location":"reference/cdp/#cdp.security.VisibleSecurityState","title":"<code>VisibleSecurityState</code>  <code>dataclass</code>","text":"<p>Security state information about the page.</p>"},{"location":"reference/cdp/#cdp.security.VisibleSecurityStateChanged","title":"<code>VisibleSecurityStateChanged</code>  <code>dataclass</code>","text":"<p>The security state of the page changed.</p>"},{"location":"reference/cdp/#cdp.security.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables tracking security state changes.</p>"},{"location":"reference/cdp/#cdp.security.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.security.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables tracking security state changes.</p>"},{"location":"reference/cdp/#cdp.security.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.security.handle_certificate_error","title":"<code>handle_certificate_error()</code>  <code>async</code>","text":"<p>Handles a certificate error that fired a certificateError event.</p>"},{"location":"reference/cdp/#cdp.security.handle_certificate_error--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.security.set_ignore_certificate_errors","title":"<code>set_ignore_certificate_errors()</code>  <code>async</code>","text":"<p>Enable/disable whether all certificate errors should be ignored.</p>"},{"location":"reference/cdp/#cdp.security.set_ignore_certificate_errors--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.security.set_override_certificate_errors","title":"<code>set_override_certificate_errors()</code>  <code>async</code>","text":"<p>Enable/disable overriding certificate errors.</p> <p>If enabled, all certificate error events need to be handled by the DevTools client and should be answered with <code>handleCertificateError</code> commands. # noqa</p>"},{"location":"reference/cdp/#cdp.service_worker","title":"<code>service_worker</code>","text":""},{"location":"reference/cdp/#cdp.service_worker.RegistrationID","title":"<code>RegistrationID</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.ServiceWorkerErrorMessage","title":"<code>ServiceWorkerErrorMessage</code>  <code>dataclass</code>","text":"<p>ServiceWorker error message.</p>"},{"location":"reference/cdp/#cdp.service_worker.ServiceWorkerRegistration","title":"<code>ServiceWorkerRegistration</code>  <code>dataclass</code>","text":"<p>ServiceWorker registration.</p>"},{"location":"reference/cdp/#cdp.service_worker.ServiceWorkerVersion","title":"<code>ServiceWorkerVersion</code>  <code>dataclass</code>","text":"<p>ServiceWorker version.</p>"},{"location":"reference/cdp/#cdp.service_worker.ServiceWorkerVersionRunningStatus","title":"<code>ServiceWorkerVersionRunningStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.ServiceWorkerVersionStatus","title":"<code>ServiceWorkerVersionStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.WorkerErrorReported","title":"<code>WorkerErrorReported</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.WorkerRegistrationUpdated","title":"<code>WorkerRegistrationUpdated</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.WorkerVersionUpdated","title":"<code>WorkerVersionUpdated</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.deliver_push_message","title":"<code>deliver_push_message()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.deliver_push_message--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.dispatch_periodic_sync_event","title":"<code>dispatch_periodic_sync_event()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.dispatch_periodic_sync_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.dispatch_sync_event","title":"<code>dispatch_sync_event()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.dispatch_sync_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.inspect_worker","title":"<code>inspect_worker()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.inspect_worker--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.set_force_update_on_page_load","title":"<code>set_force_update_on_page_load()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.set_force_update_on_page_load--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.skip_waiting","title":"<code>skip_waiting()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.skip_waiting--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.start_worker","title":"<code>start_worker()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.start_worker--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.stop_all_workers","title":"<code>stop_all_workers()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.stop_all_workers--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.stop_worker","title":"<code>stop_worker()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.stop_worker--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.unregister","title":"<code>unregister()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.unregister--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.service_worker.update_registration","title":"<code>update_registration()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.service_worker.update_registration--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage","title":"<code>storage</code>","text":""},{"location":"reference/cdp/#cdp.storage.CacheStorageContentUpdated","title":"<code>CacheStorageContentUpdated</code>  <code>dataclass</code>","text":"<p>A cache's contents have been modified.</p>"},{"location":"reference/cdp/#cdp.storage.CacheStorageListUpdated","title":"<code>CacheStorageListUpdated</code>  <code>dataclass</code>","text":"<p>A cache has been added/deleted.</p>"},{"location":"reference/cdp/#cdp.storage.IndexedDBContentUpdated","title":"<code>IndexedDBContentUpdated</code>  <code>dataclass</code>","text":"<p>The origin's IndexedDB object store has been modified.</p>"},{"location":"reference/cdp/#cdp.storage.IndexedDBListUpdated","title":"<code>IndexedDBListUpdated</code>  <code>dataclass</code>","text":"<p>The origin's IndexedDB database list has been modified.</p>"},{"location":"reference/cdp/#cdp.storage.InterestGroupAccessType","title":"<code>InterestGroupAccessType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of interest group access types.</p>"},{"location":"reference/cdp/#cdp.storage.InterestGroupAccessed","title":"<code>InterestGroupAccessed</code>  <code>dataclass</code>","text":"<p>One of the interest groups was accessed by the associated page.</p>"},{"location":"reference/cdp/#cdp.storage.InterestGroupAd","title":"<code>InterestGroupAd</code>  <code>dataclass</code>","text":"<p>Ad advertising element inside an interest group.</p>"},{"location":"reference/cdp/#cdp.storage.InterestGroupDetails","title":"<code>InterestGroupDetails</code>  <code>dataclass</code>","text":"<p>The full details of an interest group.</p>"},{"location":"reference/cdp/#cdp.storage.SerializedStorageKey","title":"<code>SerializedStorageKey</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.storage.SharedStorageAccessParams","title":"<code>SharedStorageAccessParams</code>  <code>dataclass</code>","text":"<p>Bundles the parameters for shared storage access events whose presence/absence can vary according to SharedStorageAccessType.</p>"},{"location":"reference/cdp/#cdp.storage.SharedStorageAccessType","title":"<code>SharedStorageAccessType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of shared storage access types.</p>"},{"location":"reference/cdp/#cdp.storage.SharedStorageAccessed","title":"<code>SharedStorageAccessed</code>  <code>dataclass</code>","text":"<p>Shared storage was accessed by the associated page.</p> <p>The following parameters are included in all events.</p>"},{"location":"reference/cdp/#cdp.storage.SharedStorageEntry","title":"<code>SharedStorageEntry</code>  <code>dataclass</code>","text":"<p>Struct for a single key-value pair in an origin's shared storage.</p>"},{"location":"reference/cdp/#cdp.storage.SharedStorageMetadata","title":"<code>SharedStorageMetadata</code>  <code>dataclass</code>","text":"<p>Details for an origin's shared storage.</p>"},{"location":"reference/cdp/#cdp.storage.SharedStorageReportingMetadata","title":"<code>SharedStorageReportingMetadata</code>  <code>dataclass</code>","text":"<p>Pair of reporting metadata details for a candidate URL for <code>selectURL()</code>.</p>"},{"location":"reference/cdp/#cdp.storage.SharedStorageUrlWithMetadata","title":"<code>SharedStorageUrlWithMetadata</code>  <code>dataclass</code>","text":"<p>Bundles a candidate URL with its reporting metadata.</p>"},{"location":"reference/cdp/#cdp.storage.StorageBucketCreatedOrUpdated","title":"<code>StorageBucketCreatedOrUpdated</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.storage.StorageBucketDeleted","title":"<code>StorageBucketDeleted</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.storage.StorageBucketInfo","title":"<code>StorageBucketInfo</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.storage.StorageBucketsDurability","title":"<code>StorageBucketsDurability</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.storage.StorageType","title":"<code>StorageType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible storage types.</p>"},{"location":"reference/cdp/#cdp.storage.TrustTokens","title":"<code>TrustTokens</code>  <code>dataclass</code>","text":"<p>Pair of issuer origin and number of available (signed, but not used) Trust Tokens from that issuer.</p>"},{"location":"reference/cdp/#cdp.storage.UsageForType","title":"<code>UsageForType</code>  <code>dataclass</code>","text":"<p>Usage for a storage type.</p>"},{"location":"reference/cdp/#cdp.storage.clear_cookies","title":"<code>clear_cookies()</code>  <code>async</code>","text":"<p>Clears cookies.</p>"},{"location":"reference/cdp/#cdp.storage.clear_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.clear_data_for_origin","title":"<code>clear_data_for_origin()</code>  <code>async</code>","text":"<p>Clears storage for origin.</p>"},{"location":"reference/cdp/#cdp.storage.clear_data_for_origin--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.clear_data_for_storage_key","title":"<code>clear_data_for_storage_key()</code>  <code>async</code>","text":"<p>Clears storage for storage key.</p>"},{"location":"reference/cdp/#cdp.storage.clear_data_for_storage_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.clear_shared_storage_entries","title":"<code>clear_shared_storage_entries()</code>  <code>async</code>","text":"<p>Clears all entries for a given origin's shared storage.</p>"},{"location":"reference/cdp/#cdp.storage.clear_shared_storage_entries--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.clear_trust_tokens","title":"<code>clear_trust_tokens()</code>  <code>async</code>","text":"<p>Removes all Trust Tokens issued by the provided issuerOrigin.</p> <p>Leaves other stored data, including the issuer's Redemption Records, intact. # noqa</p>"},{"location":"reference/cdp/#cdp.storage.delete_shared_storage_entry","title":"<code>delete_shared_storage_entry()</code>  <code>async</code>","text":"<p>Deletes entry for <code>key</code> (if it exists) for a given origin's shared storage.</p>"},{"location":"reference/cdp/#cdp.storage.delete_shared_storage_entry--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.delete_storage_bucket","title":"<code>delete_storage_bucket()</code>  <code>async</code>","text":"<p>Deletes the Storage Bucket with the given storage key and bucket name.</p>"},{"location":"reference/cdp/#cdp.storage.delete_storage_bucket--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.get_cookies","title":"<code>get_cookies()</code>  <code>async</code>","text":"<p>Returns all browser cookies.</p>"},{"location":"reference/cdp/#cdp.storage.get_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.get_interest_group_details","title":"<code>get_interest_group_details()</code>  <code>async</code>","text":"<p>Gets details for a named interest group.</p>"},{"location":"reference/cdp/#cdp.storage.get_interest_group_details--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.get_shared_storage_entries","title":"<code>get_shared_storage_entries()</code>  <code>async</code>","text":"<p>Gets the entries in an given origin's shared storage.</p>"},{"location":"reference/cdp/#cdp.storage.get_shared_storage_entries--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.get_shared_storage_metadata","title":"<code>get_shared_storage_metadata()</code>  <code>async</code>","text":"<p>Gets metadata for an origin's shared storage.</p>"},{"location":"reference/cdp/#cdp.storage.get_shared_storage_metadata--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.get_storage_key_for_frame","title":"<code>get_storage_key_for_frame()</code>  <code>async</code>","text":"<p>Returns a storage key given a frame id.</p>"},{"location":"reference/cdp/#cdp.storage.get_storage_key_for_frame--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.get_trust_tokens","title":"<code>get_trust_tokens()</code>  <code>async</code>","text":"<p>Returns the number of stored Trust Tokens per issuer for the current browsing context.</p>"},{"location":"reference/cdp/#cdp.storage.get_trust_tokens--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.get_usage_and_quota","title":"<code>get_usage_and_quota()</code>  <code>async</code>","text":"<p>Returns usage and quota in bytes.</p>"},{"location":"reference/cdp/#cdp.storage.get_usage_and_quota--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.override_quota_for_origin","title":"<code>override_quota_for_origin()</code>  <code>async</code>","text":"<p>Override quota for the specified origin # noqa.</p>"},{"location":"reference/cdp/#cdp.storage.reset_shared_storage_budget","title":"<code>reset_shared_storage_budget()</code>  <code>async</code>","text":"<p>Resets the budget for <code>ownerOrigin</code> by clearing all budget withdrawals.</p>"},{"location":"reference/cdp/#cdp.storage.reset_shared_storage_budget--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.set_cookies","title":"<code>set_cookies()</code>  <code>async</code>","text":"<p>Sets given cookies.</p>"},{"location":"reference/cdp/#cdp.storage.set_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.set_interest_group_tracking","title":"<code>set_interest_group_tracking()</code>  <code>async</code>","text":"<p>Enables/Disables issuing of interestGroupAccessed events.</p>"},{"location":"reference/cdp/#cdp.storage.set_interest_group_tracking--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.set_shared_storage_entry","title":"<code>set_shared_storage_entry()</code>  <code>async</code>","text":"<p>Sets entry with <code>key</code> and <code>value</code> for a given origin's shared storage.</p>"},{"location":"reference/cdp/#cdp.storage.set_shared_storage_entry--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.set_shared_storage_tracking","title":"<code>set_shared_storage_tracking()</code>  <code>async</code>","text":"<p>Enables/disables issuing of sharedStorageAccessed events.</p>"},{"location":"reference/cdp/#cdp.storage.set_shared_storage_tracking--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.set_storage_bucket_tracking","title":"<code>set_storage_bucket_tracking()</code>  <code>async</code>","text":"<p>Set tracking for a storage key's buckets.</p>"},{"location":"reference/cdp/#cdp.storage.set_storage_bucket_tracking--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.track_cache_storage_for_origin","title":"<code>track_cache_storage_for_origin()</code>  <code>async</code>","text":"<p>Registers origin to be notified when an update occurs to its cache storage list.</p>"},{"location":"reference/cdp/#cdp.storage.track_cache_storage_for_origin--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.track_cache_storage_for_storage_key","title":"<code>track_cache_storage_for_storage_key()</code>  <code>async</code>","text":"<p>Registers storage key to be notified when an update occurs to its cache storage list.</p>"},{"location":"reference/cdp/#cdp.storage.track_cache_storage_for_storage_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.track_indexed_db_for_origin","title":"<code>track_indexed_db_for_origin()</code>  <code>async</code>","text":"<p>Registers origin to be notified when an update occurs to its IndexedDB.</p>"},{"location":"reference/cdp/#cdp.storage.track_indexed_db_for_origin--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.track_indexed_db_for_storage_key","title":"<code>track_indexed_db_for_storage_key()</code>  <code>async</code>","text":"<p>Registers storage key to be notified when an update occurs to its IndexedDB.</p>"},{"location":"reference/cdp/#cdp.storage.track_indexed_db_for_storage_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.untrack_cache_storage_for_origin","title":"<code>untrack_cache_storage_for_origin()</code>  <code>async</code>","text":"<p>Unregisters origin from receiving notifications for cache storage.</p>"},{"location":"reference/cdp/#cdp.storage.untrack_cache_storage_for_origin--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.untrack_cache_storage_for_storage_key","title":"<code>untrack_cache_storage_for_storage_key()</code>  <code>async</code>","text":"<p>Unregisters storage key from receiving notifications for cache storage.</p>"},{"location":"reference/cdp/#cdp.storage.untrack_cache_storage_for_storage_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.untrack_indexed_db_for_origin","title":"<code>untrack_indexed_db_for_origin()</code>  <code>async</code>","text":"<p>Unregisters origin from receiving notifications for IndexedDB.</p>"},{"location":"reference/cdp/#cdp.storage.untrack_indexed_db_for_origin--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.storage.untrack_indexed_db_for_storage_key","title":"<code>untrack_indexed_db_for_storage_key()</code>  <code>async</code>","text":"<p>Unregisters storage key from receiving notifications for IndexedDB.</p>"},{"location":"reference/cdp/#cdp.storage.untrack_indexed_db_for_storage_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.system_info","title":"<code>system_info</code>","text":""},{"location":"reference/cdp/#cdp.system_info.GPUDevice","title":"<code>GPUDevice</code>  <code>dataclass</code>","text":"<p>Describes a single graphics processor (GPU).</p>"},{"location":"reference/cdp/#cdp.system_info.GPUInfo","title":"<code>GPUInfo</code>  <code>dataclass</code>","text":"<p>Provides information about the GPU(s) on the system.</p>"},{"location":"reference/cdp/#cdp.system_info.ImageDecodeAcceleratorCapability","title":"<code>ImageDecodeAcceleratorCapability</code>  <code>dataclass</code>","text":"<p>Describes a supported image decoding profile with its associated minimum and maximum resolutions and subsampling.</p>"},{"location":"reference/cdp/#cdp.system_info.ImageType","title":"<code>ImageType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Image format of a given image.</p>"},{"location":"reference/cdp/#cdp.system_info.ProcessInfo","title":"<code>ProcessInfo</code>  <code>dataclass</code>","text":"<p>Represents process info.</p>"},{"location":"reference/cdp/#cdp.system_info.Size","title":"<code>Size</code>  <code>dataclass</code>","text":"<p>Describes the width and height dimensions of an entity.</p>"},{"location":"reference/cdp/#cdp.system_info.SubsamplingFormat","title":"<code>SubsamplingFormat</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>YUV subsampling type of the pixels of a given image.</p>"},{"location":"reference/cdp/#cdp.system_info.VideoDecodeAcceleratorCapability","title":"<code>VideoDecodeAcceleratorCapability</code>  <code>dataclass</code>","text":"<p>Describes a supported video decoding profile with its associated minimum and maximum resolutions.</p>"},{"location":"reference/cdp/#cdp.system_info.VideoEncodeAcceleratorCapability","title":"<code>VideoEncodeAcceleratorCapability</code>  <code>dataclass</code>","text":"<p>Describes a supported video encoding profile with its associated maximum resolution and maximum framerate.</p>"},{"location":"reference/cdp/#cdp.system_info.get_feature_state","title":"<code>get_feature_state()</code>  <code>async</code>","text":"<p>Returns information about the feature state.</p>"},{"location":"reference/cdp/#cdp.system_info.get_feature_state--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.system_info.get_info","title":"<code>get_info()</code>  <code>async</code>","text":"<p>Returns information about the system.</p>"},{"location":"reference/cdp/#cdp.system_info.get_info--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.system_info.get_process_info","title":"<code>get_process_info()</code>  <code>async</code>","text":"<p>Returns information about all running processes.</p>"},{"location":"reference/cdp/#cdp.system_info.get_process_info--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.target","title":"<code>target</code>","text":""},{"location":"reference/cdp/#cdp.target.AttachedToTarget","title":"<code>AttachedToTarget</code>  <code>dataclass</code>","text":"<p>Issued when attached to target because of auto-attach or <code>attachToTarget</code> command.</p>"},{"location":"reference/cdp/#cdp.target.DetachedFromTarget","title":"<code>DetachedFromTarget</code>  <code>dataclass</code>","text":"<p>Issued when detached from target for any reason (including <code>detachFromTarget</code> command).</p> <p>Can be issued multiple times per target if multiple sessions have been attached to it.</p>"},{"location":"reference/cdp/#cdp.target.FilterEntry","title":"<code>FilterEntry</code>  <code>dataclass</code>","text":"<p>A filter used by target query/discovery/auto-attach operations.</p>"},{"location":"reference/cdp/#cdp.target.ReceivedMessageFromTarget","title":"<code>ReceivedMessageFromTarget</code>  <code>dataclass</code>","text":"<p>Notifies about a new protocol message received from the session (as reported in <code>attachedToTarget</code> event).</p>"},{"location":"reference/cdp/#cdp.target.RemoteLocation","title":"<code>RemoteLocation</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.target.SessionID","title":"<code>SessionID</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique identifier of attached debugging session.</p>"},{"location":"reference/cdp/#cdp.target.TargetCrashed","title":"<code>TargetCrashed</code>  <code>dataclass</code>","text":"<p>Issued when a target has crashed.</p>"},{"location":"reference/cdp/#cdp.target.TargetCreated","title":"<code>TargetCreated</code>  <code>dataclass</code>","text":"<p>Issued when a possible inspection target is created.</p>"},{"location":"reference/cdp/#cdp.target.TargetDestroyed","title":"<code>TargetDestroyed</code>  <code>dataclass</code>","text":"<p>Issued when a target is destroyed.</p>"},{"location":"reference/cdp/#cdp.target.TargetFilter","title":"<code>TargetFilter</code>  <code>dataclass</code>","text":"<p>The entries in TargetFilter are matched sequentially against targets and the first entry that matches determines if the target is included or not, depending on the value of <code>exclude</code> field in the entry. If filter is not specified, the one assumed is.</p> <p>[{type: \"browser\", exclude: true}, {type: \"tab\", exclude: true}, {}] (i.e. include everything but <code>browser</code> and <code>tab</code>).</p>"},{"location":"reference/cdp/#cdp.target.TargetID","title":"<code>TargetID</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.target.TargetInfo","title":"<code>TargetInfo</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.target.TargetInfoChanged","title":"<code>TargetInfoChanged</code>  <code>dataclass</code>","text":"<p>Issued when some information about a target has changed.</p> <p>This only happens between <code>targetCreated</code> and <code>targetDestroyed</code>.</p>"},{"location":"reference/cdp/#cdp.target.activate_target","title":"<code>activate_target()</code>  <code>async</code>","text":"<p>Activates (focuses) the target.</p>"},{"location":"reference/cdp/#cdp.target.activate_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.target.attach_to_browser_target","title":"<code>attach_to_browser_target()</code>  <code>async</code>","text":"<p>Attaches to the browser target, only uses flat sessionId mode.</p>"},{"location":"reference/cdp/#cdp.target.attach_to_browser_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.target.attach_to_target","title":"<code>attach_to_target()</code>  <code>async</code>","text":"<p>Attaches to the target with given id.</p>"},{"location":"reference/cdp/#cdp.target.attach_to_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.target.auto_attach_related","title":"<code>auto_attach_related()</code>  <code>async</code>","text":"<p>Adds the specified target to the list of targets that will be monitored for any related target creation (such as child frames, child workers and new versions of service worker) and reported through <code>attachedToTarget</code>.</p> <p>The specified target is also auto-attached. This cancels the effect of any previous <code>setAutoAttach</code> and is also cancelled by subsequent <code>setAutoAttach</code>. Only available at the Browser target. # noqa</p>"},{"location":"reference/cdp/#cdp.target.close_target","title":"<code>close_target()</code>  <code>async</code>","text":"<p>Closes the target.</p> <p>If the target is a page that gets closed too. # noqa</p>"},{"location":"reference/cdp/#cdp.target.create_browser_context","title":"<code>create_browser_context()</code>  <code>async</code>","text":"<p>Creates a new empty BrowserContext.</p> <p>Similar to an incognito profile but you can have more than one. # noqa</p>"},{"location":"reference/cdp/#cdp.target.create_target","title":"<code>create_target()</code>  <code>async</code>","text":"<p>Creates a new page.</p>"},{"location":"reference/cdp/#cdp.target.create_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.target.detach_from_target","title":"<code>detach_from_target()</code>  <code>async</code>","text":"<p>Detaches session with given id.</p>"},{"location":"reference/cdp/#cdp.target.detach_from_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.target.dispose_browser_context","title":"<code>dispose_browser_context()</code>  <code>async</code>","text":"<p>Deletes a BrowserContext.</p> <p>All the belonging pages will be closed without calling their beforeunload hooks. # noqa</p>"},{"location":"reference/cdp/#cdp.target.expose_dev_tools_protocol","title":"<code>expose_dev_tools_protocol()</code>  <code>async</code>","text":"<p>Inject object to the target's main frame that provides a communication channel with browser target.</p> <p>Injected object will be available as <code>window[bindingName]</code>.</p> <p>The object has the follwing API: - <code>binding.send(json)</code> - a method to send messages over the remote debugging protocol - <code>binding.onmessage = json =&gt; handleMessage(json)</code> - a callback that will be called for the protocol notifications and command responses. # noqa</p>"},{"location":"reference/cdp/#cdp.target.get_browser_contexts","title":"<code>get_browser_contexts()</code>  <code>async</code>","text":"<p>Returns all browser contexts created with <code>Target.createBrowserContext</code> method.</p>"},{"location":"reference/cdp/#cdp.target.get_browser_contexts--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.target.get_target_info","title":"<code>get_target_info()</code>  <code>async</code>","text":"<p>Returns information about a target.</p>"},{"location":"reference/cdp/#cdp.target.get_target_info--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.target.get_targets","title":"<code>get_targets()</code>  <code>async</code>","text":"<p>Retrieves a list of available targets.</p>"},{"location":"reference/cdp/#cdp.target.get_targets--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.target.send_message_to_target","title":"<code>send_message_to_target()</code>  <code>async</code>","text":"<p>Sends protocol message over session with given id.</p> <p>Consider using flat mode instead; see commands attachToTarget, setAutoAttach, and crbug.com/991325. # noqa</p>"},{"location":"reference/cdp/#cdp.target.set_auto_attach","title":"<code>set_auto_attach()</code>  <code>async</code>","text":"<p>Controls whether to automatically attach to new targets which are considered to be related to this one.</p> <p>When turned on, attaches to all existing related targets as well. When turned off, automatically detaches from all currently attached targets. This also clears all targets added by <code>autoAttachRelated</code> from the list of targets to watch for creation of related targets. # noqa</p>"},{"location":"reference/cdp/#cdp.target.set_discover_targets","title":"<code>set_discover_targets()</code>  <code>async</code>","text":"<p>Controls whether to discover available targets and notify via <code>targetCreated/targetInfoChanged/targetDestroyed</code> events.</p>"},{"location":"reference/cdp/#cdp.target.set_discover_targets--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.target.set_remote_locations","title":"<code>set_remote_locations()</code>  <code>async</code>","text":"<p>Enables target discovery for the specified locations, when <code>setDiscoverTargets</code> was set to <code>true</code>.</p>"},{"location":"reference/cdp/#cdp.target.set_remote_locations--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.tethering","title":"<code>tethering</code>","text":""},{"location":"reference/cdp/#cdp.tethering.Accepted","title":"<code>Accepted</code>  <code>dataclass</code>","text":"<p>Informs that port was successfully bound and got a specified connection id.</p>"},{"location":"reference/cdp/#cdp.tethering.bind","title":"<code>bind()</code>  <code>async</code>","text":"<p>Request browser port binding.</p>"},{"location":"reference/cdp/#cdp.tethering.bind--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.tethering.unbind","title":"<code>unbind()</code>  <code>async</code>","text":"<p>Request browser port unbinding.</p>"},{"location":"reference/cdp/#cdp.tethering.unbind--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.tracing","title":"<code>tracing</code>","text":""},{"location":"reference/cdp/#cdp.tracing.BufferUsage","title":"<code>BufferUsage</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.tracing.DataCollected","title":"<code>DataCollected</code>  <code>dataclass</code>","text":"<p>Contains a bucket of collected trace events.</p> <p>When tracing is stopped collected events will be sent as a sequence of dataCollected events followed by tracingComplete event.</p>"},{"location":"reference/cdp/#cdp.tracing.MemoryDumpConfig","title":"<code>MemoryDumpConfig</code>  <code>dataclass</code>","text":"<p>Configuration for memory dump.</p> <p>Used only when \"memory-infra\" category is enabled.</p>"},{"location":"reference/cdp/#cdp.tracing.MemoryDumpLevelOfDetail","title":"<code>MemoryDumpLevelOfDetail</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Details exposed when memory request explicitly declared.</p> <p>Keep consistent with memory_dump_request_args.h and memory_instrumentation.mojom</p>"},{"location":"reference/cdp/#cdp.tracing.StreamCompression","title":"<code>StreamCompression</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Compression type to use for traces returned via streams.</p>"},{"location":"reference/cdp/#cdp.tracing.StreamFormat","title":"<code>StreamFormat</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Data format of a trace.</p> <p>Can be either the legacy JSON format or the protocol buffer format. Note that the JSON format will be deprecated soon.</p>"},{"location":"reference/cdp/#cdp.tracing.TraceConfig","title":"<code>TraceConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.tracing.TracingBackend","title":"<code>TracingBackend</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Backend type to use for tracing.</p> <p><code>chrome</code> uses the Chrome-integrated tracing service and is supported on all platforms. <code>system</code> is only supported on Chrome OS and uses the Perfetto system tracing service. <code>auto</code> chooses <code>system</code> when the perfettoConfig provided to Tracing.start specifies at least one non-Chrome data source; otherwise uses <code>chrome</code>.</p>"},{"location":"reference/cdp/#cdp.tracing.TracingComplete","title":"<code>TracingComplete</code>  <code>dataclass</code>","text":"<p>Signals that tracing is stopped and there is no trace buffers pending flush, all data were delivered via dataCollected events.</p>"},{"location":"reference/cdp/#cdp.tracing.end","title":"<code>end()</code>  <code>async</code>","text":"<p>Stop trace events collection.</p>"},{"location":"reference/cdp/#cdp.tracing.end--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.tracing.get_categories","title":"<code>get_categories()</code>  <code>async</code>","text":"<p>Gets supported tracing categories.</p>"},{"location":"reference/cdp/#cdp.tracing.get_categories--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.tracing.record_clock_sync_marker","title":"<code>record_clock_sync_marker()</code>  <code>async</code>","text":"<p>Record a clock sync marker in the trace.</p>"},{"location":"reference/cdp/#cdp.tracing.record_clock_sync_marker--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.tracing.request_memory_dump","title":"<code>request_memory_dump()</code>  <code>async</code>","text":"<p>Request a global memory dump.</p>"},{"location":"reference/cdp/#cdp.tracing.request_memory_dump--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.tracing.start","title":"<code>start()</code>  <code>async</code>","text":"<p>Start trace events collection.</p>"},{"location":"reference/cdp/#cdp.tracing.start--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_audio","title":"<code>web_audio</code>","text":""},{"location":"reference/cdp/#cdp.web_audio.AudioListener","title":"<code>AudioListener</code>  <code>dataclass</code>","text":"<p>Protocol object for AudioListener.</p>"},{"location":"reference/cdp/#cdp.web_audio.AudioListenerCreated","title":"<code>AudioListenerCreated</code>  <code>dataclass</code>","text":"<p>Notifies that the construction of an AudioListener has finished.</p>"},{"location":"reference/cdp/#cdp.web_audio.AudioListenerWillBeDestroyed","title":"<code>AudioListenerWillBeDestroyed</code>  <code>dataclass</code>","text":"<p>Notifies that a new AudioListener has been created.</p>"},{"location":"reference/cdp/#cdp.web_audio.AudioNode","title":"<code>AudioNode</code>  <code>dataclass</code>","text":"<p>Protocol object for AudioNode.</p>"},{"location":"reference/cdp/#cdp.web_audio.AudioNodeCreated","title":"<code>AudioNodeCreated</code>  <code>dataclass</code>","text":"<p>Notifies that a new AudioNode has been created.</p>"},{"location":"reference/cdp/#cdp.web_audio.AudioNodeWillBeDestroyed","title":"<code>AudioNodeWillBeDestroyed</code>  <code>dataclass</code>","text":"<p>Notifies that an existing AudioNode has been destroyed.</p>"},{"location":"reference/cdp/#cdp.web_audio.AudioParam","title":"<code>AudioParam</code>  <code>dataclass</code>","text":"<p>Protocol object for AudioParam.</p>"},{"location":"reference/cdp/#cdp.web_audio.AudioParamCreated","title":"<code>AudioParamCreated</code>  <code>dataclass</code>","text":"<p>Notifies that a new AudioParam has been created.</p>"},{"location":"reference/cdp/#cdp.web_audio.AudioParamWillBeDestroyed","title":"<code>AudioParamWillBeDestroyed</code>  <code>dataclass</code>","text":"<p>Notifies that an existing AudioParam has been destroyed.</p>"},{"location":"reference/cdp/#cdp.web_audio.AutomationRate","title":"<code>AutomationRate</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of AudioParam::AutomationRate from the spec.</p>"},{"location":"reference/cdp/#cdp.web_audio.BaseAudioContext","title":"<code>BaseAudioContext</code>  <code>dataclass</code>","text":"<p>Protocol object for BaseAudioContext.</p>"},{"location":"reference/cdp/#cdp.web_audio.ChannelCountMode","title":"<code>ChannelCountMode</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of AudioNode::ChannelCountMode from the spec.</p>"},{"location":"reference/cdp/#cdp.web_audio.ChannelInterpretation","title":"<code>ChannelInterpretation</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of AudioNode::ChannelInterpretation from the spec.</p>"},{"location":"reference/cdp/#cdp.web_audio.ContextChanged","title":"<code>ContextChanged</code>  <code>dataclass</code>","text":"<p>Notifies that existing BaseAudioContext has changed some properties (id stays the same)..</p>"},{"location":"reference/cdp/#cdp.web_audio.ContextCreated","title":"<code>ContextCreated</code>  <code>dataclass</code>","text":"<p>Notifies that a new BaseAudioContext has been created.</p>"},{"location":"reference/cdp/#cdp.web_audio.ContextRealtimeData","title":"<code>ContextRealtimeData</code>  <code>dataclass</code>","text":"<p>Fields in AudioContext that change in real-time.</p>"},{"location":"reference/cdp/#cdp.web_audio.ContextState","title":"<code>ContextState</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of AudioContextState from the spec.</p>"},{"location":"reference/cdp/#cdp.web_audio.ContextType","title":"<code>ContextType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of BaseAudioContext types.</p>"},{"location":"reference/cdp/#cdp.web_audio.ContextWillBeDestroyed","title":"<code>ContextWillBeDestroyed</code>  <code>dataclass</code>","text":"<p>Notifies that an existing BaseAudioContext will be destroyed.</p>"},{"location":"reference/cdp/#cdp.web_audio.GraphObjectId","title":"<code>GraphObjectId</code>","text":"<p>         Bases: <code>str</code></p> <p>An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API.</p>"},{"location":"reference/cdp/#cdp.web_audio.NodeParamConnected","title":"<code>NodeParamConnected</code>  <code>dataclass</code>","text":"<p>Notifies that an AudioNode is connected to an AudioParam.</p>"},{"location":"reference/cdp/#cdp.web_audio.NodeParamDisconnected","title":"<code>NodeParamDisconnected</code>  <code>dataclass</code>","text":"<p>Notifies that an AudioNode is disconnected to an AudioParam.</p>"},{"location":"reference/cdp/#cdp.web_audio.NodeType","title":"<code>NodeType</code>","text":"<p>         Bases: <code>str</code></p> <p>Enum of AudioNode types.</p>"},{"location":"reference/cdp/#cdp.web_audio.NodesConnected","title":"<code>NodesConnected</code>  <code>dataclass</code>","text":"<p>Notifies that two AudioNodes are connected.</p>"},{"location":"reference/cdp/#cdp.web_audio.NodesDisconnected","title":"<code>NodesDisconnected</code>  <code>dataclass</code>","text":"<p>Notifies that AudioNodes are disconnected.</p> <p>The destination can be null, and it means all the outgoing connections from the source are disconnected.</p>"},{"location":"reference/cdp/#cdp.web_audio.ParamType","title":"<code>ParamType</code>","text":"<p>         Bases: <code>str</code></p> <p>Enum of AudioParam types.</p>"},{"location":"reference/cdp/#cdp.web_audio.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables the WebAudio domain.</p>"},{"location":"reference/cdp/#cdp.web_audio.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_audio.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables the WebAudio domain and starts sending context lifetime events.</p>"},{"location":"reference/cdp/#cdp.web_audio.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_audio.get_realtime_data","title":"<code>get_realtime_data()</code>  <code>async</code>","text":"<p>Fetch the realtime data from the registered contexts.</p>"},{"location":"reference/cdp/#cdp.web_audio.get_realtime_data--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_authn","title":"<code>web_authn</code>","text":""},{"location":"reference/cdp/#cdp.web_authn.AuthenticatorId","title":"<code>AuthenticatorId</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.web_authn.AuthenticatorProtocol","title":"<code>AuthenticatorProtocol</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.web_authn.AuthenticatorTransport","title":"<code>AuthenticatorTransport</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.web_authn.Credential","title":"<code>Credential</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.web_authn.CredentialAdded","title":"<code>CredentialAdded</code>  <code>dataclass</code>","text":"<p>Triggered when a credential is added to an authenticator.</p>"},{"location":"reference/cdp/#cdp.web_authn.CredentialAsserted","title":"<code>CredentialAsserted</code>  <code>dataclass</code>","text":"<p>Triggered when a credential is used in a webauthn assertion.</p>"},{"location":"reference/cdp/#cdp.web_authn.Ctap2Version","title":"<code>Ctap2Version</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.web_authn.VirtualAuthenticatorOptions","title":"<code>VirtualAuthenticatorOptions</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/#cdp.web_authn.add_credential","title":"<code>add_credential()</code>  <code>async</code>","text":"<p>Adds the credential to the specified authenticator.</p>"},{"location":"reference/cdp/#cdp.web_authn.add_credential--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_authn.add_virtual_authenticator","title":"<code>add_virtual_authenticator()</code>  <code>async</code>","text":"<p>Creates and adds a virtual authenticator.</p>"},{"location":"reference/cdp/#cdp.web_authn.add_virtual_authenticator--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_authn.clear_credentials","title":"<code>clear_credentials()</code>  <code>async</code>","text":"<p>Clears all the credentials from the specified device.</p>"},{"location":"reference/cdp/#cdp.web_authn.clear_credentials--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_authn.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disable the WebAuthn domain.</p>"},{"location":"reference/cdp/#cdp.web_authn.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_authn.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enable the WebAuthn domain and start intercepting credential storage and retrieval with a virtual authenticator.</p>"},{"location":"reference/cdp/#cdp.web_authn.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_authn.get_credential","title":"<code>get_credential()</code>  <code>async</code>","text":"<p>Returns a single credential stored in the given virtual authenticator that matches the credential ID.</p>"},{"location":"reference/cdp/#cdp.web_authn.get_credential--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_authn.get_credentials","title":"<code>get_credentials()</code>  <code>async</code>","text":"<p>Returns all the credentials stored in the given virtual authenticator.</p>"},{"location":"reference/cdp/#cdp.web_authn.get_credentials--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_authn.remove_credential","title":"<code>remove_credential()</code>  <code>async</code>","text":"<p>Removes a credential from the authenticator.</p>"},{"location":"reference/cdp/#cdp.web_authn.remove_credential--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_authn.remove_virtual_authenticator","title":"<code>remove_virtual_authenticator()</code>  <code>async</code>","text":"<p>Removes the given authenticator.</p>"},{"location":"reference/cdp/#cdp.web_authn.remove_virtual_authenticator--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_authn.set_automatic_presence_simulation","title":"<code>set_automatic_presence_simulation()</code>  <code>async</code>","text":"<p>Sets whether tests of user presence will succeed immediately (if true) or fail to resolve (if false) for an authenticator.</p> <p>The default is true. # noqa</p>"},{"location":"reference/cdp/#cdp.web_authn.set_response_override_bits","title":"<code>set_response_override_bits()</code>  <code>async</code>","text":"<p>Resets parameters isBogusSignature, isBadUV, isBadUP to false if they are not present.</p>"},{"location":"reference/cdp/#cdp.web_authn.set_response_override_bits--noqa","title":"noqa","text":""},{"location":"reference/cdp/#cdp.web_authn.set_user_verified","title":"<code>set_user_verified()</code>  <code>async</code>","text":"<p>Sets whether User Verification succeeds or fails for an authenticator.</p> <p>The default is true. # noqa</p>"},{"location":"reference/cdp/accessibility/","title":"Accessibility","text":""},{"location":"reference/cdp/accessibility/#cdp.accessibility.AXNode","title":"<code>AXNode</code>  <code>dataclass</code>","text":"<p>A node in the accessibility tree.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.AXNodeId","title":"<code>AXNodeId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique accessibility node identifier.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.AXProperty","title":"<code>AXProperty</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.AXPropertyName","title":"<code>AXPropertyName</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Values of AXProperty name:</p> <ul> <li>from 'busy' to 'roledescription': states which apply to every AX node</li> <li>from 'live' to 'root': attributes which apply to nodes in live regions</li> <li>from 'autocomplete' to 'valuetext': attributes which apply to widgets</li> <li>from 'checked' to 'selected': states which apply to widgets</li> <li>from 'activedescendant' to 'owns' - relationships between elements other than parent/child/sibling.</li> </ul>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.AXRelatedNode","title":"<code>AXRelatedNode</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.AXValue","title":"<code>AXValue</code>  <code>dataclass</code>","text":"<p>A single computed AX property.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.AXValueNativeSourceType","title":"<code>AXValueNativeSourceType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible native property sources (as a subtype of a particular AXValueSourceType).</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.AXValueSource","title":"<code>AXValueSource</code>  <code>dataclass</code>","text":"<p>A single source for a computed AX property.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.AXValueSourceType","title":"<code>AXValueSourceType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible property sources.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.AXValueType","title":"<code>AXValueType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible property types.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.LoadComplete","title":"<code>LoadComplete</code>  <code>dataclass</code>","text":"<p>The loadComplete event mirrors the load complete event sent by the browser to assistive technology when the web page has finished loading.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.NodesUpdated","title":"<code>NodesUpdated</code>  <code>dataclass</code>","text":"<p>The nodesUpdated event is sent every time a previously requested node has changed the in tree.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables the accessibility domain.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/accessibility/#cdp.accessibility.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables the accessibility domain which causes <code>AXNodeId</code>s to remain consistent between method calls.</p> <p>This turns on accessibility for the page, which can impact performance until accessibility is disabled. # noqa</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.get_ax_node_and_ancestors","title":"<code>get_ax_node_and_ancestors()</code>  <code>async</code>","text":"<p>Fetches a node and all ancestors up to and including the root.</p> <p>Requires <code>enable()</code> to have been called previously. # noqa</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.get_child_ax_nodes","title":"<code>get_child_ax_nodes()</code>  <code>async</code>","text":"<p>Fetches a particular accessibility node by AXNodeId.</p> <p>Requires <code>enable()</code> to have been called previously. # noqa</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.get_full_ax_tree","title":"<code>get_full_ax_tree()</code>  <code>async</code>","text":"<p>Fetches the entire accessibility tree for the root Document # noqa.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.get_partial_ax_tree","title":"<code>get_partial_ax_tree()</code>  <code>async</code>","text":"<p>Fetches the accessibility node and partial accessibility tree for this DOM node, if it exists.</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.get_partial_ax_tree--noqa","title":"noqa","text":""},{"location":"reference/cdp/accessibility/#cdp.accessibility.get_root_ax_node","title":"<code>get_root_ax_node()</code>  <code>async</code>","text":"<p>Fetches the root node.</p> <p>Requires <code>enable()</code> to have been called previously. # noqa</p>"},{"location":"reference/cdp/accessibility/#cdp.accessibility.query_ax_tree","title":"<code>query_ax_tree()</code>  <code>async</code>","text":"<p>Query a DOM node's accessibility subtree for accessible name and role.</p> <p>This command computes the name and role for all nodes in the subtree, including those that are ignored for accessibility, and returns those that mactch the specified name and role. If no DOM node is specified, or the DOM node does not exist, the command returns an error. If neither <code>accessibleName</code> or <code>role</code> is specified, it returns all the accessibility nodes in the subtree. # noqa</p>"},{"location":"reference/cdp/animation/","title":"Animation","text":""},{"location":"reference/cdp/animation/#cdp.animation.Animation","title":"<code>Animation</code>  <code>dataclass</code>","text":"<p>Animation instance.</p>"},{"location":"reference/cdp/animation/#cdp.animation.AnimationCanceled","title":"<code>AnimationCanceled</code>  <code>dataclass</code>","text":"<p>Event for when an animation has been cancelled.</p>"},{"location":"reference/cdp/animation/#cdp.animation.AnimationCreated","title":"<code>AnimationCreated</code>  <code>dataclass</code>","text":"<p>Event for each animation that has been created.</p>"},{"location":"reference/cdp/animation/#cdp.animation.AnimationEffect","title":"<code>AnimationEffect</code>  <code>dataclass</code>","text":"<p>AnimationEffect instance.</p>"},{"location":"reference/cdp/animation/#cdp.animation.AnimationStarted","title":"<code>AnimationStarted</code>  <code>dataclass</code>","text":"<p>Event for animation that has been started.</p>"},{"location":"reference/cdp/animation/#cdp.animation.KeyframeStyle","title":"<code>KeyframeStyle</code>  <code>dataclass</code>","text":"<p>Keyframe Style.</p>"},{"location":"reference/cdp/animation/#cdp.animation.KeyframesRule","title":"<code>KeyframesRule</code>  <code>dataclass</code>","text":"<p>Keyframes Rule.</p>"},{"location":"reference/cdp/animation/#cdp.animation.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables animation domain notifications.</p>"},{"location":"reference/cdp/animation/#cdp.animation.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/animation/#cdp.animation.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables animation domain notifications.</p>"},{"location":"reference/cdp/animation/#cdp.animation.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/animation/#cdp.animation.get_current_time","title":"<code>get_current_time()</code>  <code>async</code>","text":"<p>Returns the current time of the an animation.</p>"},{"location":"reference/cdp/animation/#cdp.animation.get_current_time--noqa","title":"noqa","text":""},{"location":"reference/cdp/animation/#cdp.animation.get_playback_rate","title":"<code>get_playback_rate()</code>  <code>async</code>","text":"<p>Gets the playback rate of the document timeline.</p>"},{"location":"reference/cdp/animation/#cdp.animation.get_playback_rate--noqa","title":"noqa","text":""},{"location":"reference/cdp/animation/#cdp.animation.release_animations","title":"<code>release_animations()</code>  <code>async</code>","text":"<p>Releases a set of animations to no longer be manipulated.</p>"},{"location":"reference/cdp/animation/#cdp.animation.release_animations--noqa","title":"noqa","text":""},{"location":"reference/cdp/animation/#cdp.animation.resolve_animation","title":"<code>resolve_animation()</code>  <code>async</code>","text":"<p>Gets the remote object of the Animation.</p>"},{"location":"reference/cdp/animation/#cdp.animation.resolve_animation--noqa","title":"noqa","text":""},{"location":"reference/cdp/animation/#cdp.animation.seek_animations","title":"<code>seek_animations()</code>  <code>async</code>","text":"<p>Seek a set of animations to a particular time within each animation.</p>"},{"location":"reference/cdp/animation/#cdp.animation.seek_animations--noqa","title":"noqa","text":""},{"location":"reference/cdp/animation/#cdp.animation.set_paused","title":"<code>set_paused()</code>  <code>async</code>","text":"<p>Sets the paused state of a set of animations.</p>"},{"location":"reference/cdp/animation/#cdp.animation.set_paused--noqa","title":"noqa","text":""},{"location":"reference/cdp/animation/#cdp.animation.set_playback_rate","title":"<code>set_playback_rate()</code>  <code>async</code>","text":"<p>Sets the playback rate of the document timeline.</p>"},{"location":"reference/cdp/animation/#cdp.animation.set_playback_rate--noqa","title":"noqa","text":""},{"location":"reference/cdp/animation/#cdp.animation.set_timing","title":"<code>set_timing()</code>  <code>async</code>","text":"<p>Sets the timing of an animation node.</p>"},{"location":"reference/cdp/animation/#cdp.animation.set_timing--noqa","title":"noqa","text":""},{"location":"reference/cdp/audits/","title":"Audits","text":""},{"location":"reference/cdp/audits/#cdp.audits.AffectedCookie","title":"<code>AffectedCookie</code>  <code>dataclass</code>","text":"<p>Information about a cookie that is affected by an inspector issue.</p>"},{"location":"reference/cdp/audits/#cdp.audits.AffectedFrame","title":"<code>AffectedFrame</code>  <code>dataclass</code>","text":"<p>Information about the frame affected by an inspector issue.</p>"},{"location":"reference/cdp/audits/#cdp.audits.AffectedRequest","title":"<code>AffectedRequest</code>  <code>dataclass</code>","text":"<p>Information about a request that is affected by an inspector issue.</p>"},{"location":"reference/cdp/audits/#cdp.audits.AttributionReportingIssueDetails","title":"<code>AttributionReportingIssueDetails</code>  <code>dataclass</code>","text":"<p>Details for issues around \"Attribution Reporting API\" usage.</p> <p>Explainer: https://github.com/WICG/attribution-reporting-api</p>"},{"location":"reference/cdp/audits/#cdp.audits.AttributionReportingIssueType","title":"<code>AttributionReportingIssueType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.BlockedByResponseIssueDetails","title":"<code>BlockedByResponseIssueDetails</code>  <code>dataclass</code>","text":"<p>Details for a request that has been blocked with the BLOCKED_BY_RESPONSE code.</p> <p>Currently only used for COEP/COOP, but may be extended to include some CSP errors in the future.</p>"},{"location":"reference/cdp/audits/#cdp.audits.BlockedByResponseReason","title":"<code>BlockedByResponseReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum indicating the reason a response has been blocked.</p> <p>These reasons are refinements of the net error BLOCKED_BY_RESPONSE.</p>"},{"location":"reference/cdp/audits/#cdp.audits.ClientHintIssueDetails","title":"<code>ClientHintIssueDetails</code>  <code>dataclass</code>","text":"<p>This issue tracks client hints related issues.</p> <p>It's used to deprecate old features, encourage the use of new ones, and provide general guidance.</p>"},{"location":"reference/cdp/audits/#cdp.audits.ClientHintIssueReason","title":"<code>ClientHintIssueReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.ContentSecurityPolicyIssueDetails","title":"<code>ContentSecurityPolicyIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.ContentSecurityPolicyViolationType","title":"<code>ContentSecurityPolicyViolationType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.CookieExclusionReason","title":"<code>CookieExclusionReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.CookieIssueDetails","title":"<code>CookieIssueDetails</code>  <code>dataclass</code>","text":"<p>This information is currently necessary, as the front-end has a difficult time finding a specific cookie.</p> <p>With this, we can convey specific error information without the cookie.</p>"},{"location":"reference/cdp/audits/#cdp.audits.CookieOperation","title":"<code>CookieOperation</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.CookieWarningReason","title":"<code>CookieWarningReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.CorsIssueDetails","title":"<code>CorsIssueDetails</code>  <code>dataclass</code>","text":"<p>Details for a CORS related issue, e.g. a warning or error related to CORS RFC1918 enforcement.</p>"},{"location":"reference/cdp/audits/#cdp.audits.DeprecationIssueDetails","title":"<code>DeprecationIssueDetails</code>  <code>dataclass</code>","text":"<p>This issue tracks information needed to print a deprecation message.</p> <p>https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/third_party/blink/renderer/core/frame/deprecation/README.md</p>"},{"location":"reference/cdp/audits/#cdp.audits.FederatedAuthRequestIssueDetails","title":"<code>FederatedAuthRequestIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.FederatedAuthRequestIssueReason","title":"<code>FederatedAuthRequestIssueReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Represents the failure reason when a federated authentication reason fails.</p> <p>Should be updated alongside RequestIdTokenStatus in third_party/blink/public/mojom/devtools/inspector_issue.mojom to include all cases except for success.</p>"},{"location":"reference/cdp/audits/#cdp.audits.GenericIssueDetails","title":"<code>GenericIssueDetails</code>  <code>dataclass</code>","text":"<p>Depending on the concrete errorType, different properties are set.</p>"},{"location":"reference/cdp/audits/#cdp.audits.GenericIssueErrorType","title":"<code>GenericIssueErrorType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.HeavyAdIssueDetails","title":"<code>HeavyAdIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.HeavyAdReason","title":"<code>HeavyAdReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.HeavyAdResolutionStatus","title":"<code>HeavyAdResolutionStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.InspectorIssue","title":"<code>InspectorIssue</code>  <code>dataclass</code>","text":"<p>An inspector issue reported from the back-end.</p>"},{"location":"reference/cdp/audits/#cdp.audits.InspectorIssueCode","title":"<code>InspectorIssueCode</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>A unique identifier for the type of issue.</p> <p>Each type may use one of the optional fields in InspectorIssueDetails to convey more specific information about the kind of issue.</p>"},{"location":"reference/cdp/audits/#cdp.audits.InspectorIssueDetails","title":"<code>InspectorIssueDetails</code>  <code>dataclass</code>","text":"<p>This struct holds a list of optional fields with additional information specific to the kind of issue.</p> <p>When adding a new issue code, please also add a new optional field to this type.</p>"},{"location":"reference/cdp/audits/#cdp.audits.IssueAdded","title":"<code>IssueAdded</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.IssueId","title":"<code>IssueId</code>","text":"<p>         Bases: <code>str</code></p> <p>A unique id for a DevTools inspector issue.</p> <p>Allows other entities (e.g. exceptions, CDP message, console messages, etc.) to reference an issue.</p>"},{"location":"reference/cdp/audits/#cdp.audits.LowTextContrastIssueDetails","title":"<code>LowTextContrastIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.MixedContentIssueDetails","title":"<code>MixedContentIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.MixedContentResolutionStatus","title":"<code>MixedContentResolutionStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.MixedContentResourceType","title":"<code>MixedContentResourceType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.NavigatorUserAgentIssueDetails","title":"<code>NavigatorUserAgentIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.QuirksModeIssueDetails","title":"<code>QuirksModeIssueDetails</code>  <code>dataclass</code>","text":"<p>Details for issues about documents in Quirks Mode or Limited Quirks Mode that affects page layouting.</p>"},{"location":"reference/cdp/audits/#cdp.audits.SharedArrayBufferIssueDetails","title":"<code>SharedArrayBufferIssueDetails</code>  <code>dataclass</code>","text":"<p>Details for a issue arising from an SAB being instantiated in, or transferred to a context that is not cross- origin isolated.</p>"},{"location":"reference/cdp/audits/#cdp.audits.SharedArrayBufferIssueType","title":"<code>SharedArrayBufferIssueType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.SourceCodeLocation","title":"<code>SourceCodeLocation</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.TrustedWebActivityIssueDetails","title":"<code>TrustedWebActivityIssueDetails</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.TwaQualityEnforcementViolationType","title":"<code>TwaQualityEnforcementViolationType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/audits/#cdp.audits.check_contrast","title":"<code>check_contrast()</code>  <code>async</code>","text":"<p>Runs the contrast check for the target page.</p> <p>Found issues are reported using Audits.issueAdded event. # noqa</p>"},{"location":"reference/cdp/audits/#cdp.audits.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables issues domain, prevents further issues from being reported to the client.</p>"},{"location":"reference/cdp/audits/#cdp.audits.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/audits/#cdp.audits.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables issues domain, sends the issues collected so far to the client by means of the <code>issueAdded</code> event.</p>"},{"location":"reference/cdp/audits/#cdp.audits.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/audits/#cdp.audits.get_encoded_response","title":"<code>get_encoded_response()</code>  <code>async</code>","text":"<p>Returns the response body and size if it were re-encoded with the specified settings.</p> <p>Only applies to images. # noqa</p>"},{"location":"reference/cdp/background_service/","title":"Background service","text":""},{"location":"reference/cdp/background_service/#cdp.background_service.BackgroundServiceEvent","title":"<code>BackgroundServiceEvent</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/background_service/#cdp.background_service.BackgroundServiceEventReceived","title":"<code>BackgroundServiceEventReceived</code>  <code>dataclass</code>","text":"<p>Called with all existing backgroundServiceEvents when enabled, and all new events afterwards if enabled and recording.</p>"},{"location":"reference/cdp/background_service/#cdp.background_service.EventMetadata","title":"<code>EventMetadata</code>  <code>dataclass</code>","text":"<p>A key-value pair for additional event information to pass along.</p>"},{"location":"reference/cdp/background_service/#cdp.background_service.RecordingStateChanged","title":"<code>RecordingStateChanged</code>  <code>dataclass</code>","text":"<p>Called when the recording state for the service has been updated.</p>"},{"location":"reference/cdp/background_service/#cdp.background_service.ServiceName","title":"<code>ServiceName</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The Background Service that will be associated with the commands/events.</p> <p>Every Background Service operates independently, but they share the same API.</p>"},{"location":"reference/cdp/background_service/#cdp.background_service.clear_events","title":"<code>clear_events()</code>  <code>async</code>","text":"<p>Clears all stored data for the service.</p>"},{"location":"reference/cdp/background_service/#cdp.background_service.clear_events--noqa","title":"noqa","text":""},{"location":"reference/cdp/background_service/#cdp.background_service.set_recording","title":"<code>set_recording()</code>  <code>async</code>","text":"<p>Set the recording state for the service.</p>"},{"location":"reference/cdp/background_service/#cdp.background_service.set_recording--noqa","title":"noqa","text":""},{"location":"reference/cdp/background_service/#cdp.background_service.start_observing","title":"<code>start_observing()</code>  <code>async</code>","text":"<p>Enables event updates for the service.</p>"},{"location":"reference/cdp/background_service/#cdp.background_service.start_observing--noqa","title":"noqa","text":""},{"location":"reference/cdp/background_service/#cdp.background_service.stop_observing","title":"<code>stop_observing()</code>  <code>async</code>","text":"<p>Disables event updates for the service.</p>"},{"location":"reference/cdp/background_service/#cdp.background_service.stop_observing--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/","title":"Browser","text":""},{"location":"reference/cdp/browser/#cdp.browser.Bounds","title":"<code>Bounds</code>  <code>dataclass</code>","text":"<p>Browser window bounds information.</p>"},{"location":"reference/cdp/browser/#cdp.browser.BrowserCommandId","title":"<code>BrowserCommandId</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Browser command ids used by executeBrowserCommand.</p>"},{"location":"reference/cdp/browser/#cdp.browser.BrowserContextID","title":"<code>BrowserContextID</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/browser/#cdp.browser.Bucket","title":"<code>Bucket</code>  <code>dataclass</code>","text":"<p>Chrome histogram bucket.</p>"},{"location":"reference/cdp/browser/#cdp.browser.DownloadProgress","title":"<code>DownloadProgress</code>  <code>dataclass</code>","text":"<p>Fired when download makes progress.</p> <p>Last call has |done| == true.</p>"},{"location":"reference/cdp/browser/#cdp.browser.DownloadWillBegin","title":"<code>DownloadWillBegin</code>  <code>dataclass</code>","text":"<p>Fired when page is about to start a download.</p>"},{"location":"reference/cdp/browser/#cdp.browser.Histogram","title":"<code>Histogram</code>  <code>dataclass</code>","text":"<p>Chrome histogram.</p>"},{"location":"reference/cdp/browser/#cdp.browser.PermissionDescriptor","title":"<code>PermissionDescriptor</code>  <code>dataclass</code>","text":"<p>Definition of PermissionDescriptor defined in the Permissions API:</p> <p>https://w3c.github.io/permissions/#dictdef-permissiondescriptor.</p>"},{"location":"reference/cdp/browser/#cdp.browser.PermissionSetting","title":"<code>PermissionSetting</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/browser/#cdp.browser.PermissionType","title":"<code>PermissionType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/browser/#cdp.browser.WindowID","title":"<code>WindowID</code>","text":"<p>         Bases: <code>int</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/browser/#cdp.browser.WindowState","title":"<code>WindowState</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The state of the browser window.</p>"},{"location":"reference/cdp/browser/#cdp.browser.cancel_download","title":"<code>cancel_download()</code>  <code>async</code>","text":"<p>Cancel a download if in progress # noqa.</p>"},{"location":"reference/cdp/browser/#cdp.browser.close","title":"<code>close()</code>  <code>async</code>","text":"<p>Close browser gracefully.</p>"},{"location":"reference/cdp/browser/#cdp.browser.close--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.crash","title":"<code>crash()</code>  <code>async</code>","text":"<p>Crashes browser on the main thread.</p>"},{"location":"reference/cdp/browser/#cdp.browser.crash--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.crash_gpu_process","title":"<code>crash_gpu_process()</code>  <code>async</code>","text":"<p>Crashes GPU process.</p>"},{"location":"reference/cdp/browser/#cdp.browser.crash_gpu_process--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.execute_browser_command","title":"<code>execute_browser_command()</code>  <code>async</code>","text":"<p>Invoke custom browser commands used by telemetry.</p>"},{"location":"reference/cdp/browser/#cdp.browser.execute_browser_command--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.get_browser_command_line","title":"<code>get_browser_command_line()</code>  <code>async</code>","text":"<p>Returns the command line switches for the browser process if, and only if.</p> <p>--enable-automation is on the commandline. # noqa</p>"},{"location":"reference/cdp/browser/#cdp.browser.get_histogram","title":"<code>get_histogram()</code>  <code>async</code>","text":"<p>Get a Chrome histogram by name.</p>"},{"location":"reference/cdp/browser/#cdp.browser.get_histogram--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.get_histograms","title":"<code>get_histograms()</code>  <code>async</code>","text":"<p>Get Chrome histograms.</p>"},{"location":"reference/cdp/browser/#cdp.browser.get_histograms--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.get_version","title":"<code>get_version()</code>  <code>async</code>","text":"<p>Returns version information.</p>"},{"location":"reference/cdp/browser/#cdp.browser.get_version--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.get_window_bounds","title":"<code>get_window_bounds()</code>  <code>async</code>","text":"<p>Get position and size of the browser window.</p>"},{"location":"reference/cdp/browser/#cdp.browser.get_window_bounds--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.get_window_for_target","title":"<code>get_window_for_target()</code>  <code>async</code>","text":"<p>Get the browser window that contains the devtools target.</p>"},{"location":"reference/cdp/browser/#cdp.browser.get_window_for_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.grant_permissions","title":"<code>grant_permissions()</code>  <code>async</code>","text":"<p>Grant specific permissions to the given origin and reject all others.</p>"},{"location":"reference/cdp/browser/#cdp.browser.grant_permissions--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.reset_permissions","title":"<code>reset_permissions()</code>  <code>async</code>","text":"<p>Reset all permission management for all origins.</p>"},{"location":"reference/cdp/browser/#cdp.browser.reset_permissions--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.set_dock_tile","title":"<code>set_dock_tile()</code>  <code>async</code>","text":"<p>Set dock tile details, platform-specific.</p>"},{"location":"reference/cdp/browser/#cdp.browser.set_dock_tile--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.set_download_behavior","title":"<code>set_download_behavior()</code>  <code>async</code>","text":"<p>Set the behavior when downloading a file.</p>"},{"location":"reference/cdp/browser/#cdp.browser.set_download_behavior--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.set_permission","title":"<code>set_permission()</code>  <code>async</code>","text":"<p>Set permission settings for given origin.</p>"},{"location":"reference/cdp/browser/#cdp.browser.set_permission--noqa","title":"noqa","text":""},{"location":"reference/cdp/browser/#cdp.browser.set_window_bounds","title":"<code>set_window_bounds()</code>  <code>async</code>","text":"<p>Set position and/or size of the browser window.</p>"},{"location":"reference/cdp/browser/#cdp.browser.set_window_bounds--noqa","title":"noqa","text":""},{"location":"reference/cdp/cache_storage/","title":"Cache storage","text":""},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.Cache","title":"<code>Cache</code>  <code>dataclass</code>","text":"<p>Cache identifier.</p>"},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.CacheId","title":"<code>CacheId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique identifier of the Cache object.</p>"},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.CachedResponse","title":"<code>CachedResponse</code>  <code>dataclass</code>","text":"<p>Cached response.</p>"},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.CachedResponseType","title":"<code>CachedResponseType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Type of HTTP response cached.</p>"},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.DataEntry","title":"<code>DataEntry</code>  <code>dataclass</code>","text":"<p>Data entry.</p>"},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.Header","title":"<code>Header</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.delete_cache","title":"<code>delete_cache()</code>  <code>async</code>","text":"<p>Deletes a cache.</p>"},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.delete_cache--noqa","title":"noqa","text":""},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.delete_entry","title":"<code>delete_entry()</code>  <code>async</code>","text":"<p>Deletes a cache entry.</p>"},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.delete_entry--noqa","title":"noqa","text":""},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.request_cache_names","title":"<code>request_cache_names()</code>  <code>async</code>","text":"<p>Requests cache names.</p>"},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.request_cache_names--noqa","title":"noqa","text":""},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.request_cached_response","title":"<code>request_cached_response()</code>  <code>async</code>","text":"<p>Fetches cache entry.</p>"},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.request_cached_response--noqa","title":"noqa","text":""},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.request_entries","title":"<code>request_entries()</code>  <code>async</code>","text":"<p>Requests data from cache.</p>"},{"location":"reference/cdp/cache_storage/#cdp.cache_storage.request_entries--noqa","title":"noqa","text":""},{"location":"reference/cdp/cast/","title":"Cast","text":""},{"location":"reference/cdp/cast/#cdp.cast.IssueUpdated","title":"<code>IssueUpdated</code>  <code>dataclass</code>","text":"<p>This is fired whenever the outstanding issue/error message changes.</p> <p>|issueMessage| is empty if there is no issue.</p>"},{"location":"reference/cdp/cast/#cdp.cast.Sink","title":"<code>Sink</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/cast/#cdp.cast.SinksUpdated","title":"<code>SinksUpdated</code>  <code>dataclass</code>","text":"<p>This is fired whenever the list of available sinks changes.</p> <p>A sink is a device or a software surface that you can cast to.</p>"},{"location":"reference/cdp/cast/#cdp.cast.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Stops observing for sinks and issues.</p>"},{"location":"reference/cdp/cast/#cdp.cast.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/cast/#cdp.cast.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Starts observing for sinks that can be used for tab mirroring, and if set, sinks compatible with.</p> <p>|presentationUrl| as well. When sinks are found, a.</p> <p>|sinksUpdated| event is fired. Also starts observing for issue messages. When an issue is added or removed, an |issueUpdated| event is fired. # noqa</p>"},{"location":"reference/cdp/cast/#cdp.cast.set_sink_to_use","title":"<code>set_sink_to_use()</code>  <code>async</code>","text":"<p>Sets a sink to be used when the web page requests the browser to choose a sink via Presentation API, Remote Playback API, or Cast SDK.</p>"},{"location":"reference/cdp/cast/#cdp.cast.set_sink_to_use--noqa","title":"noqa","text":""},{"location":"reference/cdp/cast/#cdp.cast.start_desktop_mirroring","title":"<code>start_desktop_mirroring()</code>  <code>async</code>","text":"<p>Starts mirroring the desktop to the sink.</p>"},{"location":"reference/cdp/cast/#cdp.cast.start_desktop_mirroring--noqa","title":"noqa","text":""},{"location":"reference/cdp/cast/#cdp.cast.start_tab_mirroring","title":"<code>start_tab_mirroring()</code>  <code>async</code>","text":"<p>Starts mirroring the tab to the sink.</p>"},{"location":"reference/cdp/cast/#cdp.cast.start_tab_mirroring--noqa","title":"noqa","text":""},{"location":"reference/cdp/cast/#cdp.cast.stop_casting","title":"<code>stop_casting()</code>  <code>async</code>","text":"<p>Stops the active Cast session on the sink.</p>"},{"location":"reference/cdp/cast/#cdp.cast.stop_casting--noqa","title":"noqa","text":""},{"location":"reference/cdp/console/","title":"Console","text":""},{"location":"reference/cdp/console/#cdp.console.ConsoleMessage","title":"<code>ConsoleMessage</code>  <code>dataclass</code>","text":"<p>Console message.</p>"},{"location":"reference/cdp/console/#cdp.console.MessageAdded","title":"<code>MessageAdded</code>  <code>dataclass</code>","text":"<p>Issued when new console message is added.</p>"},{"location":"reference/cdp/console/#cdp.console.clear_messages","title":"<code>clear_messages()</code>  <code>async</code>","text":"<p>Does nothing.</p>"},{"location":"reference/cdp/console/#cdp.console.clear_messages--noqa","title":"noqa","text":""},{"location":"reference/cdp/console/#cdp.console.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables console domain, prevents further console messages from being reported to the client.</p>"},{"location":"reference/cdp/console/#cdp.console.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/console/#cdp.console.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables console domain, sends the messages collected so far to the client by means of the <code>messageAdded</code> notification.</p>"},{"location":"reference/cdp/console/#cdp.console.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/","title":"Css","text":""},{"location":"reference/cdp/css/#cdp.css.CSSComputedStyleProperty","title":"<code>CSSComputedStyleProperty</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSContainerQuery","title":"<code>CSSContainerQuery</code>  <code>dataclass</code>","text":"<p>CSS container query rule descriptor.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSKeyframeRule","title":"<code>CSSKeyframeRule</code>  <code>dataclass</code>","text":"<p>CSS keyframe rule representation.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSKeyframesRule","title":"<code>CSSKeyframesRule</code>  <code>dataclass</code>","text":"<p>CSS keyframes rule representation.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSLayer","title":"<code>CSSLayer</code>  <code>dataclass</code>","text":"<p>CSS Layer at-rule descriptor.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSLayerData","title":"<code>CSSLayerData</code>  <code>dataclass</code>","text":"<p>CSS Layer data.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSMedia","title":"<code>CSSMedia</code>  <code>dataclass</code>","text":"<p>CSS media rule descriptor.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSPositionFallbackRule","title":"<code>CSSPositionFallbackRule</code>  <code>dataclass</code>","text":"<p>CSS position-fallback rule representation.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSProperty","title":"<code>CSSProperty</code>  <code>dataclass</code>","text":"<p>CSS property declaration data.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSRule","title":"<code>CSSRule</code>  <code>dataclass</code>","text":"<p>CSS rule representation.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSScope","title":"<code>CSSScope</code>  <code>dataclass</code>","text":"<p>CSS Scope at-rule descriptor.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSStyle","title":"<code>CSSStyle</code>  <code>dataclass</code>","text":"<p>CSS style representation.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSStyleSheetHeader","title":"<code>CSSStyleSheetHeader</code>  <code>dataclass</code>","text":"<p>CSS stylesheet metainformation.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSSupports","title":"<code>CSSSupports</code>  <code>dataclass</code>","text":"<p>CSS Supports at-rule descriptor.</p>"},{"location":"reference/cdp/css/#cdp.css.CSSTryRule","title":"<code>CSSTryRule</code>  <code>dataclass</code>","text":"<p>CSS try rule representation.</p>"},{"location":"reference/cdp/css/#cdp.css.FontFace","title":"<code>FontFace</code>  <code>dataclass</code>","text":"<p>Properties of a web font: https://www.w3.org/TR/2008/REC-CSS2-20080411/fonts.html#font-descriptions and additional information such as platformFontFamily and fontVariationAxes.</p>"},{"location":"reference/cdp/css/#cdp.css.FontVariationAxis","title":"<code>FontVariationAxis</code>  <code>dataclass</code>","text":"<p>Information about font variation axes for variable fonts.</p>"},{"location":"reference/cdp/css/#cdp.css.FontsUpdated","title":"<code>FontsUpdated</code>  <code>dataclass</code>","text":"<p>Fires whenever a web font is updated.</p> <p>A non-empty font parameter indicates a successfully loaded web font.</p>"},{"location":"reference/cdp/css/#cdp.css.InheritedPseudoElementMatches","title":"<code>InheritedPseudoElementMatches</code>  <code>dataclass</code>","text":"<p>Inherited pseudo element matches from pseudos of an ancestor node.</p>"},{"location":"reference/cdp/css/#cdp.css.InheritedStyleEntry","title":"<code>InheritedStyleEntry</code>  <code>dataclass</code>","text":"<p>Inherited CSS rule collection from ancestor node.</p>"},{"location":"reference/cdp/css/#cdp.css.MediaQuery","title":"<code>MediaQuery</code>  <code>dataclass</code>","text":"<p>Media query descriptor.</p>"},{"location":"reference/cdp/css/#cdp.css.MediaQueryExpression","title":"<code>MediaQueryExpression</code>  <code>dataclass</code>","text":"<p>Media query expression descriptor.</p>"},{"location":"reference/cdp/css/#cdp.css.MediaQueryResultChanged","title":"<code>MediaQueryResultChanged</code>  <code>dataclass</code>","text":"<p>Fires whenever a MediaQuery result changes (for example, after a browser window has been resized.) The current implementation considers only viewport-dependent media features.</p>"},{"location":"reference/cdp/css/#cdp.css.PlatformFontUsage","title":"<code>PlatformFontUsage</code>  <code>dataclass</code>","text":"<p>Information about amount of glyphs that were rendered with given font.</p>"},{"location":"reference/cdp/css/#cdp.css.PseudoElementMatches","title":"<code>PseudoElementMatches</code>  <code>dataclass</code>","text":"<p>CSS rule collection for a single pseudo style.</p>"},{"location":"reference/cdp/css/#cdp.css.RuleMatch","title":"<code>RuleMatch</code>  <code>dataclass</code>","text":"<p>Match data for a CSS rule.</p>"},{"location":"reference/cdp/css/#cdp.css.RuleUsage","title":"<code>RuleUsage</code>  <code>dataclass</code>","text":"<p>CSS coverage information.</p>"},{"location":"reference/cdp/css/#cdp.css.SelectorList","title":"<code>SelectorList</code>  <code>dataclass</code>","text":"<p>Selector list data.</p>"},{"location":"reference/cdp/css/#cdp.css.ShorthandEntry","title":"<code>ShorthandEntry</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/css/#cdp.css.SourceRange","title":"<code>SourceRange</code>  <code>dataclass</code>","text":"<p>Text range within a resource.</p> <p>All numbers are zero-based.</p>"},{"location":"reference/cdp/css/#cdp.css.StyleDeclarationEdit","title":"<code>StyleDeclarationEdit</code>  <code>dataclass</code>","text":"<p>A descriptor of operation to mutate style declaration text.</p>"},{"location":"reference/cdp/css/#cdp.css.StyleSheetAdded","title":"<code>StyleSheetAdded</code>  <code>dataclass</code>","text":"<p>Fired whenever an active document stylesheet is added.</p>"},{"location":"reference/cdp/css/#cdp.css.StyleSheetChanged","title":"<code>StyleSheetChanged</code>  <code>dataclass</code>","text":"<p>Fired whenever a stylesheet is changed as a result of the client operation.</p>"},{"location":"reference/cdp/css/#cdp.css.StyleSheetId","title":"<code>StyleSheetId</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/css/#cdp.css.StyleSheetOrigin","title":"<code>StyleSheetOrigin</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Stylesheet type: \"injected\" for stylesheets injected via extension, \"user-agent\" for user-agent stylesheets, \"inspector\" for stylesheets created by the inspector (i.e. those holding the \"via inspector\" rules), \"regular\" for regular stylesheets.</p>"},{"location":"reference/cdp/css/#cdp.css.StyleSheetRemoved","title":"<code>StyleSheetRemoved</code>  <code>dataclass</code>","text":"<p>Fired whenever an active document stylesheet is removed.</p>"},{"location":"reference/cdp/css/#cdp.css.Value","title":"<code>Value</code>  <code>dataclass</code>","text":"<p>Data for a simple selector (these are delimited by commas in a selector list).</p>"},{"location":"reference/cdp/css/#cdp.css.add_rule","title":"<code>add_rule()</code>  <code>async</code>","text":"<p>Inserts a new rule with the given <code>ruleText</code> in a stylesheet with given <code>styleSheetId</code>, at the position specified by <code>location</code>.</p>"},{"location":"reference/cdp/css/#cdp.css.add_rule--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.collect_class_names","title":"<code>collect_class_names()</code>  <code>async</code>","text":"<p>Returns all class names from specified stylesheet.</p>"},{"location":"reference/cdp/css/#cdp.css.collect_class_names--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.create_style_sheet","title":"<code>create_style_sheet()</code>  <code>async</code>","text":"<p>Creates a new special \"via-inspector\" stylesheet in the frame with given <code>frameId</code>.</p>"},{"location":"reference/cdp/css/#cdp.css.create_style_sheet--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables the CSS agent for the given page.</p>"},{"location":"reference/cdp/css/#cdp.css.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables the CSS agent for the given page.</p> <p>Clients should not assume that the CSS agent has been enabled until the result of this command is received. # noqa</p>"},{"location":"reference/cdp/css/#cdp.css.force_pseudo_state","title":"<code>force_pseudo_state()</code>  <code>async</code>","text":"<p>Ensures that the given node will have specified pseudo-classes whenever its style is computed by the browser.</p>"},{"location":"reference/cdp/css/#cdp.css.force_pseudo_state--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.get_background_colors","title":"<code>get_background_colors()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/css/#cdp.css.get_background_colors--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.get_computed_style_for_node","title":"<code>get_computed_style_for_node()</code>  <code>async</code>","text":"<p>Returns the computed style for a DOM node identified by <code>nodeId</code>.</p>"},{"location":"reference/cdp/css/#cdp.css.get_computed_style_for_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.get_inline_styles_for_node","title":"<code>get_inline_styles_for_node()</code>  <code>async</code>","text":"<p>Returns the styles defined inline (explicitly in the \"style\" attribute and implicitly, using DOM attributes) for a DOM node identified by <code>nodeId</code>.</p>"},{"location":"reference/cdp/css/#cdp.css.get_inline_styles_for_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.get_layers_for_node","title":"<code>get_layers_for_node()</code>  <code>async</code>","text":"<p>Returns all layers parsed by the rendering engine for the tree scope of a node.</p> <p>Given a DOM element identified by nodeId, getLayersForNode returns the root layer for the nearest ancestor document or shadow root. The layer root contains the full layer tree for the tree scope and their ordering. # noqa</p>"},{"location":"reference/cdp/css/#cdp.css.get_matched_styles_for_node","title":"<code>get_matched_styles_for_node()</code>  <code>async</code>","text":"<p>Returns requested styles for a DOM node identified by <code>nodeId</code>.</p>"},{"location":"reference/cdp/css/#cdp.css.get_matched_styles_for_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.get_media_queries","title":"<code>get_media_queries()</code>  <code>async</code>","text":"<p>Returns all media queries parsed by the rendering engine.</p>"},{"location":"reference/cdp/css/#cdp.css.get_media_queries--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.get_platform_fonts_for_node","title":"<code>get_platform_fonts_for_node()</code>  <code>async</code>","text":"<p>Requests information about platform fonts which we used to render child TextNodes in the given node.</p>"},{"location":"reference/cdp/css/#cdp.css.get_platform_fonts_for_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.get_style_sheet_text","title":"<code>get_style_sheet_text()</code>  <code>async</code>","text":"<p>Returns the current textual content for a stylesheet.</p>"},{"location":"reference/cdp/css/#cdp.css.get_style_sheet_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.set_container_query_text","title":"<code>set_container_query_text()</code>  <code>async</code>","text":"<p>Modifies the expression of a container query.</p>"},{"location":"reference/cdp/css/#cdp.css.set_container_query_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.set_effective_property_value_for_node","title":"<code>set_effective_property_value_for_node()</code>  <code>async</code>","text":"<p>Find a rule with the given active property for the given node and set the new value for this property # noqa.</p>"},{"location":"reference/cdp/css/#cdp.css.set_keyframe_key","title":"<code>set_keyframe_key()</code>  <code>async</code>","text":"<p>Modifies the keyframe rule key text.</p>"},{"location":"reference/cdp/css/#cdp.css.set_keyframe_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.set_local_fonts_enabled","title":"<code>set_local_fonts_enabled()</code>  <code>async</code>","text":"<p>Enables/disables rendering of local CSS fonts (enabled by default).</p>"},{"location":"reference/cdp/css/#cdp.css.set_local_fonts_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.set_media_text","title":"<code>set_media_text()</code>  <code>async</code>","text":"<p>Modifies the rule selector.</p>"},{"location":"reference/cdp/css/#cdp.css.set_media_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.set_rule_selector","title":"<code>set_rule_selector()</code>  <code>async</code>","text":"<p>Modifies the rule selector.</p>"},{"location":"reference/cdp/css/#cdp.css.set_rule_selector--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.set_scope_text","title":"<code>set_scope_text()</code>  <code>async</code>","text":"<p>Modifies the expression of a scope at-rule.</p>"},{"location":"reference/cdp/css/#cdp.css.set_scope_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.set_style_sheet_text","title":"<code>set_style_sheet_text()</code>  <code>async</code>","text":"<p>Sets the new stylesheet text.</p>"},{"location":"reference/cdp/css/#cdp.css.set_style_sheet_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.set_style_texts","title":"<code>set_style_texts()</code>  <code>async</code>","text":"<p>Applies specified style edits one after another in the given order.</p>"},{"location":"reference/cdp/css/#cdp.css.set_style_texts--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.set_supports_text","title":"<code>set_supports_text()</code>  <code>async</code>","text":"<p>Modifies the expression of a supports at-rule.</p>"},{"location":"reference/cdp/css/#cdp.css.set_supports_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.start_rule_usage_tracking","title":"<code>start_rule_usage_tracking()</code>  <code>async</code>","text":"<p>Enables the selector recording.</p>"},{"location":"reference/cdp/css/#cdp.css.start_rule_usage_tracking--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.stop_rule_usage_tracking","title":"<code>stop_rule_usage_tracking()</code>  <code>async</code>","text":"<p>Stop tracking rule usage and return the list of rules that were used since last call to <code>takeCoverageDelta</code> (or since start of coverage instrumentation).</p>"},{"location":"reference/cdp/css/#cdp.css.stop_rule_usage_tracking--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.take_computed_style_updates","title":"<code>take_computed_style_updates()</code>  <code>async</code>","text":"<p>Polls the next batch of computed style updates.</p>"},{"location":"reference/cdp/css/#cdp.css.take_computed_style_updates--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.take_coverage_delta","title":"<code>take_coverage_delta()</code>  <code>async</code>","text":"<p>Obtain list of rules that became used since last call to this method (or since start of coverage instrumentation).</p>"},{"location":"reference/cdp/css/#cdp.css.take_coverage_delta--noqa","title":"noqa","text":""},{"location":"reference/cdp/css/#cdp.css.track_computed_style_updates","title":"<code>track_computed_style_updates()</code>  <code>async</code>","text":"<p>Starts tracking the given computed styles for updates.</p> <p>The specified array of properties replaces the one previously specified. Pass empty array to disable tracking. Use takeComputedStyleUpdates to retrieve the list of nodes that had properties modified. The changes to computed style properties are only tracked for nodes pushed to the front-end by the DOM agent. If no changes to the tracked properties occur after the node has been pushed to the front-end, no updates will be issued for the node. # noqa</p>"},{"location":"reference/cdp/database/","title":"Database","text":""},{"location":"reference/cdp/database/#cdp.database.AddDatabase","title":"<code>AddDatabase</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/database/#cdp.database.Database","title":"<code>Database</code>  <code>dataclass</code>","text":"<p>Database object.</p>"},{"location":"reference/cdp/database/#cdp.database.DatabaseId","title":"<code>DatabaseId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique identifier of Database object.</p>"},{"location":"reference/cdp/database/#cdp.database.Error","title":"<code>Error</code>  <code>dataclass</code>","text":"<p>Database error.</p>"},{"location":"reference/cdp/database/#cdp.database.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables database tracking, prevents database events from being sent to the client.</p>"},{"location":"reference/cdp/database/#cdp.database.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/database/#cdp.database.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables database tracking, database events will now be delivered to the client.</p>"},{"location":"reference/cdp/database/#cdp.database.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/database/#cdp.database.execute_sql","title":"<code>execute_sql()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/database/#cdp.database.execute_sql--noqa","title":"noqa","text":""},{"location":"reference/cdp/database/#cdp.database.get_database_table_names","title":"<code>get_database_table_names()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/database/#cdp.database.get_database_table_names--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/","title":"Debugger","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.BreakLocation","title":"<code>BreakLocation</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.BreakpointId","title":"<code>BreakpointId</code>","text":"<p>         Bases: <code>str</code></p> <p>Breakpoint identifier.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.BreakpointResolved","title":"<code>BreakpointResolved</code>  <code>dataclass</code>","text":"<p>Fired when breakpoint is resolved to an actual script and location.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.CallFrame","title":"<code>CallFrame</code>  <code>dataclass</code>","text":"<p>JavaScript call frame.</p> <p>Array of call frames form the call stack.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.CallFrameId","title":"<code>CallFrameId</code>","text":"<p>         Bases: <code>str</code></p> <p>Call frame identifier.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.DebugSymbols","title":"<code>DebugSymbols</code>  <code>dataclass</code>","text":"<p>Debug symbols available for a wasm script.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.Location","title":"<code>Location</code>  <code>dataclass</code>","text":"<p>Location in the source code.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.LocationRange","title":"<code>LocationRange</code>  <code>dataclass</code>","text":"<p>Location range within one script.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.Paused","title":"<code>Paused</code>  <code>dataclass</code>","text":"<p>Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.Resumed","title":"<code>Resumed</code>  <code>dataclass</code>","text":"<p>Fired when the virtual machine resumed execution.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.Scope","title":"<code>Scope</code>  <code>dataclass</code>","text":"<p>Scope description.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.ScriptFailedToParse","title":"<code>ScriptFailedToParse</code>  <code>dataclass</code>","text":"<p>Fired when virtual machine fails to parse the script.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.ScriptLanguage","title":"<code>ScriptLanguage</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible script languages.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.ScriptParsed","title":"<code>ScriptParsed</code>  <code>dataclass</code>","text":"<p>Fired when virtual machine parses script.</p> <p>This event is also fired for all known and uncollected scripts upon enabling debugger.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.ScriptPosition","title":"<code>ScriptPosition</code>  <code>dataclass</code>","text":"<p>Location in the source code.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.SearchMatch","title":"<code>SearchMatch</code>  <code>dataclass</code>","text":"<p>Search match for resource.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.WasmDisassemblyChunk","title":"<code>WasmDisassemblyChunk</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.continue_to_location","title":"<code>continue_to_location()</code>  <code>async</code>","text":"<p>Continues execution until specific location is reached.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.continue_to_location--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables debugger for given page.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.disassemble_wasm_module","title":"<code>disassemble_wasm_module()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.disassemble_wasm_module--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables debugger for the given page.</p> <p>Clients should not assume that the debugging has been enabled until the result for this command is received. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.evaluate_on_call_frame","title":"<code>evaluate_on_call_frame()</code>  <code>async</code>","text":"<p>Evaluates expression on a given call frame.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.evaluate_on_call_frame--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.get_possible_breakpoints","title":"<code>get_possible_breakpoints()</code>  <code>async</code>","text":"<p>Returns possible locations for breakpoint.</p> <p>scriptId in start and end range locations should be the same. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.get_script_source","title":"<code>get_script_source()</code>  <code>async</code>","text":"<p>Returns source for the script with given id.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.get_script_source--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.get_stack_trace","title":"<code>get_stack_trace()</code>  <code>async</code>","text":"<p>Returns stack trace with given <code>stackTraceId</code>.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.get_stack_trace--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.get_wasm_bytecode","title":"<code>get_wasm_bytecode()</code>  <code>async</code>","text":"<p>This command is deprecated.</p> <p>Use getScriptSource instead. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.next_wasm_disassembly_chunk","title":"<code>next_wasm_disassembly_chunk()</code>  <code>async</code>","text":"<p>Disassemble the next chunk of lines for the module corresponding to the stream.</p> <p>If disassembly is complete, this API will invalidate the streamId and return an empty chunk. Any subsequent calls for the now invalid stream will return errors. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.pause","title":"<code>pause()</code>  <code>async</code>","text":"<p>Stops on the next JavaScript statement.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.pause--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.pause_on_async_call","title":"<code>pause_on_async_call()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.pause_on_async_call--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.remove_breakpoint","title":"<code>remove_breakpoint()</code>  <code>async</code>","text":"<p>Removes JavaScript breakpoint.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.remove_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.restart_frame","title":"<code>restart_frame()</code>  <code>async</code>","text":"<p>Restarts particular call frame from the beginning. The old, deprecated behavior of <code>restartFrame</code> is to stay paused and allow further CDP commands after a restart was scheduled. This can cause problems with restarting, so we now continue execution immediatly after it has been scheduled until we reach the beginning of the restarted frame.</p> <p>To stay back-wards compatible, <code>restartFrame</code> now expects a <code>mode</code> parameter to be present. If the <code>mode</code> parameter is missing, <code>restartFrame</code> errors out.</p> <p>The various return values are deprecated and <code>callFrames</code> is always empty. Use the call frames from the <code>Debugger#paused</code> events instead, that fires once V8 pauses at the beginning of the restarted function. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.resume","title":"<code>resume()</code>  <code>async</code>","text":"<p>Resumes JavaScript execution.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.resume--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.search_in_content","title":"<code>search_in_content()</code>  <code>async</code>","text":"<p>Searches for given string in script content.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.search_in_content--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.set_async_call_stack_depth","title":"<code>set_async_call_stack_depth()</code>  <code>async</code>","text":"<p>Enables or disables async call stacks tracking.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_async_call_stack_depth--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.set_blackbox_patterns","title":"<code>set_blackbox_patterns()</code>  <code>async</code>","text":"<p>Replace previous blackbox patterns with passed ones.</p> <p>Forces backend to skip stepping/pausing in scripts with url matching one of the patterns. VM will try to leave blackboxed script by performing 'step in' several times, finally resorting to 'step out' if unsuccessful. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_blackboxed_ranges","title":"<code>set_blackboxed_ranges()</code>  <code>async</code>","text":"<p>Makes backend skip steps in the script in blackboxed ranges.</p> <p>VM will try leave blacklisted scripts by performing 'step in' several times, finally resorting to 'step out' if unsuccessful. Positions array contains positions where blackbox state is changed. First interval isn't blackboxed. Array should be sorted. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_breakpoint","title":"<code>set_breakpoint()</code>  <code>async</code>","text":"<p>Sets JavaScript breakpoint at a given location.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.set_breakpoint_by_url","title":"<code>set_breakpoint_by_url()</code>  <code>async</code>","text":"<p>Sets JavaScript breakpoint at given location specified either by URL or URL regex.</p> <p>Once this command is issued, all existing parsed scripts will have breakpoints resolved and returned in <code>locations</code> property. Further matching script parsing will result in subsequent <code>breakpointResolved</code> events issued. This logical breakpoint will survive page reloads. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_breakpoint_on_function_call","title":"<code>set_breakpoint_on_function_call()</code>  <code>async</code>","text":"<p>Sets JavaScript breakpoint before each call to the given function.</p> <p>If another function was created from the same source as a given one, calling it will also trigger the breakpoint. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_breakpoints_active","title":"<code>set_breakpoints_active()</code>  <code>async</code>","text":"<p>Activates / deactivates all breakpoints on the page.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_breakpoints_active--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.set_instrumentation_breakpoint","title":"<code>set_instrumentation_breakpoint()</code>  <code>async</code>","text":"<p>Sets instrumentation breakpoint.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_instrumentation_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.set_pause_on_exceptions","title":"<code>set_pause_on_exceptions()</code>  <code>async</code>","text":"<p>Defines pause on exceptions state.</p> <p>Can be set to stop on all exceptions, uncaught exceptions, or caught exceptions, no exceptions. Initial pause on exceptions state is <code>none</code>. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_return_value","title":"<code>set_return_value()</code>  <code>async</code>","text":"<p>Changes return value in top frame.</p> <p>Available only at return break position. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_script_source","title":"<code>set_script_source()</code>  <code>async</code>","text":"<p>Edits JavaScript source live.</p> <p>In general, functions that are currently on the stack can not be edited with a single exception: If the edited function is the top-most stack frame and that is the only activation of that function on the stack. In this case the live edit will be successful and a <code>Debugger.restartFrame</code> for the top-most function is automatically triggered. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_skip_all_pauses","title":"<code>set_skip_all_pauses()</code>  <code>async</code>","text":"<p>Makes page not interrupt on any pauses (breakpoint, exception, dom exception etc).</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.set_skip_all_pauses--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.set_variable_value","title":"<code>set_variable_value()</code>  <code>async</code>","text":"<p>Changes value of variable in a callframe.</p> <p>Object-based scopes are not supported and must be mutated manually. # noqa</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.step_into","title":"<code>step_into()</code>  <code>async</code>","text":"<p>Steps into the function call.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.step_into--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.step_out","title":"<code>step_out()</code>  <code>async</code>","text":"<p>Steps out of the function call.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.step_out--noqa","title":"noqa","text":""},{"location":"reference/cdp/debugger/#cdp.debugger.step_over","title":"<code>step_over()</code>  <code>async</code>","text":"<p>Steps over the statement.</p>"},{"location":"reference/cdp/debugger/#cdp.debugger.step_over--noqa","title":"noqa","text":""},{"location":"reference/cdp/device_access/","title":"Device access","text":""},{"location":"reference/cdp/device_access/#cdp.device_access.DeviceId","title":"<code>DeviceId</code>","text":"<p>         Bases: <code>str</code></p> <p>A device id.</p>"},{"location":"reference/cdp/device_access/#cdp.device_access.DeviceRequestPrompted","title":"<code>DeviceRequestPrompted</code>  <code>dataclass</code>","text":"<p>A device request opened a user prompt to select a device.</p> <p>Respond with the selectPrompt or cancelPrompt command.</p>"},{"location":"reference/cdp/device_access/#cdp.device_access.PromptDevice","title":"<code>PromptDevice</code>  <code>dataclass</code>","text":"<p>Device information displayed in a user prompt to select a device.</p>"},{"location":"reference/cdp/device_access/#cdp.device_access.RequestId","title":"<code>RequestId</code>","text":"<p>         Bases: <code>str</code></p> <p>Device request id.</p>"},{"location":"reference/cdp/device_access/#cdp.device_access.cancel_prompt","title":"<code>cancel_prompt()</code>  <code>async</code>","text":"<p>Cancel a prompt in response to a DeviceAccess.deviceRequestPrompted event.</p>"},{"location":"reference/cdp/device_access/#cdp.device_access.cancel_prompt--noqa","title":"noqa","text":""},{"location":"reference/cdp/device_access/#cdp.device_access.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disable events in this domain.</p>"},{"location":"reference/cdp/device_access/#cdp.device_access.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/device_access/#cdp.device_access.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enable events in this domain.</p>"},{"location":"reference/cdp/device_access/#cdp.device_access.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/device_access/#cdp.device_access.select_prompt","title":"<code>select_prompt()</code>  <code>async</code>","text":"<p>Select a device in response to a DeviceAccess.deviceRequestPrompted event.</p>"},{"location":"reference/cdp/device_access/#cdp.device_access.select_prompt--noqa","title":"noqa","text":""},{"location":"reference/cdp/device_orientation/","title":"Device orientation","text":""},{"location":"reference/cdp/device_orientation/#cdp.device_orientation.clear_device_orientation_override","title":"<code>clear_device_orientation_override()</code>  <code>async</code>","text":"<p>Clears the overridden Device Orientation.</p>"},{"location":"reference/cdp/device_orientation/#cdp.device_orientation.clear_device_orientation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/device_orientation/#cdp.device_orientation.set_device_orientation_override","title":"<code>set_device_orientation_override()</code>  <code>async</code>","text":"<p>Overrides the Device Orientation.</p>"},{"location":"reference/cdp/device_orientation/#cdp.device_orientation.set_device_orientation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/","title":"Dom","text":""},{"location":"reference/cdp/dom/#cdp.dom.AttributeModified","title":"<code>AttributeModified</code>  <code>dataclass</code>","text":"<p>Fired when <code>Element</code>'s attribute is modified.</p>"},{"location":"reference/cdp/dom/#cdp.dom.AttributeRemoved","title":"<code>AttributeRemoved</code>  <code>dataclass</code>","text":"<p>Fired when <code>Element</code>'s attribute is removed.</p>"},{"location":"reference/cdp/dom/#cdp.dom.BackendNode","title":"<code>BackendNode</code>  <code>dataclass</code>","text":"<p>Backend node with a friendly name.</p>"},{"location":"reference/cdp/dom/#cdp.dom.BackendNodeId","title":"<code>BackendNodeId</code>","text":"<p>         Bases: <code>int</code></p> <p>Unique DOM node identifier used to reference a node that may not have been pushed to the front-end.</p>"},{"location":"reference/cdp/dom/#cdp.dom.BoxModel","title":"<code>BoxModel</code>  <code>dataclass</code>","text":"<p>Box model.</p>"},{"location":"reference/cdp/dom/#cdp.dom.CSSComputedStyleProperty","title":"<code>CSSComputedStyleProperty</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom/#cdp.dom.CharacterDataModified","title":"<code>CharacterDataModified</code>  <code>dataclass</code>","text":"<p>Mirrors <code>DOMCharacterDataModified</code> event.</p>"},{"location":"reference/cdp/dom/#cdp.dom.ChildNodeCountUpdated","title":"<code>ChildNodeCountUpdated</code>  <code>dataclass</code>","text":"<p>Fired when <code>Container</code>'s child node count has changed.</p>"},{"location":"reference/cdp/dom/#cdp.dom.ChildNodeInserted","title":"<code>ChildNodeInserted</code>  <code>dataclass</code>","text":"<p>Mirrors <code>DOMNodeInserted</code> event.</p>"},{"location":"reference/cdp/dom/#cdp.dom.ChildNodeRemoved","title":"<code>ChildNodeRemoved</code>  <code>dataclass</code>","text":"<p>Mirrors <code>DOMNodeRemoved</code> event.</p>"},{"location":"reference/cdp/dom/#cdp.dom.CompatibilityMode","title":"<code>CompatibilityMode</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Document compatibility mode.</p>"},{"location":"reference/cdp/dom/#cdp.dom.DistributedNodesUpdated","title":"<code>DistributedNodesUpdated</code>  <code>dataclass</code>","text":"<p>Called when distribution is changed.</p>"},{"location":"reference/cdp/dom/#cdp.dom.DocumentUpdated","title":"<code>DocumentUpdated</code>  <code>dataclass</code>","text":"<p>Fired when <code>Document</code> has been totally updated.</p> <p>Node ids are no longer valid.</p>"},{"location":"reference/cdp/dom/#cdp.dom.InlineStyleInvalidated","title":"<code>InlineStyleInvalidated</code>  <code>dataclass</code>","text":"<p>Fired when <code>Element</code>'s inline style is modified via a CSS property modification.</p>"},{"location":"reference/cdp/dom/#cdp.dom.LogicalAxes","title":"<code>LogicalAxes</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>ContainerSelector logical axes.</p>"},{"location":"reference/cdp/dom/#cdp.dom.Node","title":"<code>Node</code>  <code>dataclass</code>","text":"<p>DOM interaction is implemented in terms of mirror objects that represent the actual DOM nodes.</p> <p>DOMNode is a base node mirror type.</p>"},{"location":"reference/cdp/dom/#cdp.dom.NodeId","title":"<code>NodeId</code>","text":"<p>         Bases: <code>int</code></p> <p>Unique DOM node identifier.</p>"},{"location":"reference/cdp/dom/#cdp.dom.PhysicalAxes","title":"<code>PhysicalAxes</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>ContainerSelector physical axes.</p>"},{"location":"reference/cdp/dom/#cdp.dom.PseudoElementAdded","title":"<code>PseudoElementAdded</code>  <code>dataclass</code>","text":"<p>Called when a pseudo element is added to an element.</p>"},{"location":"reference/cdp/dom/#cdp.dom.PseudoElementRemoved","title":"<code>PseudoElementRemoved</code>  <code>dataclass</code>","text":"<p>Called when a pseudo element is removed from an element.</p>"},{"location":"reference/cdp/dom/#cdp.dom.PseudoType","title":"<code>PseudoType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Pseudo element type.</p>"},{"location":"reference/cdp/dom/#cdp.dom.Quad","title":"<code>Quad</code>  <code>dataclass</code>","text":"<p>An array of quad vertices, x immediately followed by y for each point, points clock-wise.</p>"},{"location":"reference/cdp/dom/#cdp.dom.RGBA","title":"<code>RGBA</code>  <code>dataclass</code>","text":"<p>A structure holding an RGBA color.</p>"},{"location":"reference/cdp/dom/#cdp.dom.Rect","title":"<code>Rect</code>  <code>dataclass</code>","text":"<p>Rectangle.</p>"},{"location":"reference/cdp/dom/#cdp.dom.SetChildNodes","title":"<code>SetChildNodes</code>  <code>dataclass</code>","text":"<p>Fired when backend wants to provide client with the missing DOM structure.</p> <p>This happens upon most of the calls requesting node ids.</p>"},{"location":"reference/cdp/dom/#cdp.dom.ShadowRootPopped","title":"<code>ShadowRootPopped</code>  <code>dataclass</code>","text":"<p>Called when shadow root is popped from the element.</p>"},{"location":"reference/cdp/dom/#cdp.dom.ShadowRootPushed","title":"<code>ShadowRootPushed</code>  <code>dataclass</code>","text":"<p>Called when shadow root is pushed into the element.</p>"},{"location":"reference/cdp/dom/#cdp.dom.ShadowRootType","title":"<code>ShadowRootType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Shadow root type.</p>"},{"location":"reference/cdp/dom/#cdp.dom.ShapeOutsideInfo","title":"<code>ShapeOutsideInfo</code>  <code>dataclass</code>","text":"<p>CSS Shape Outside details.</p>"},{"location":"reference/cdp/dom/#cdp.dom.TopLayerElementsUpdated","title":"<code>TopLayerElementsUpdated</code>  <code>dataclass</code>","text":"<p>Called when top layer elements are changed.</p>"},{"location":"reference/cdp/dom/#cdp.dom.collect_class_names_from_subtree","title":"<code>collect_class_names_from_subtree()</code>  <code>async</code>","text":"<p>Collects class names for the node with given id and all of it's child nodes.</p>"},{"location":"reference/cdp/dom/#cdp.dom.collect_class_names_from_subtree--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.copy_to","title":"<code>copy_to()</code>  <code>async</code>","text":"<p>Creates a deep copy of the specified node and places it into the target container before the given anchor.</p>"},{"location":"reference/cdp/dom/#cdp.dom.copy_to--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.describe_node","title":"<code>describe_node()</code>  <code>async</code>","text":"<p>Describes node given its id, does not require domain to be enabled.</p> <p>Does not start tracking any objects, can be used for automation. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables DOM agent for the given page.</p>"},{"location":"reference/cdp/dom/#cdp.dom.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.discard_search_results","title":"<code>discard_search_results()</code>  <code>async</code>","text":"<p>Discards search results from the session with the given id.</p> <p><code>getSearchResults</code> should no longer be called for that search. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables DOM agent for the given page.</p>"},{"location":"reference/cdp/dom/#cdp.dom.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.focus","title":"<code>focus()</code>  <code>async</code>","text":"<p>Focuses the given element.</p>"},{"location":"reference/cdp/dom/#cdp.dom.focus--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.get_attributes","title":"<code>get_attributes()</code>  <code>async</code>","text":"<p>Returns attributes for the specified node.</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_attributes--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.get_box_model","title":"<code>get_box_model()</code>  <code>async</code>","text":"<p>Returns boxes for the given node.</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_box_model--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.get_container_for_node","title":"<code>get_container_for_node()</code>  <code>async</code>","text":"<p>Returns the query container of the given node based on container query conditions: containerName, physical, and logical axes. If no axes are provided, the style container is returned, which is the direct parent or the closest element with a matching container-name. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_content_quads","title":"<code>get_content_quads()</code>  <code>async</code>","text":"<p>Returns quads that describe node position on the page.</p> <p>This method might return multiple quads for inline nodes. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_document","title":"<code>get_document()</code>  <code>async</code>","text":"<p>Returns the root DOM node (and optionally the subtree) to the caller.</p> <p>Implicitly enables the DOM domain events for the current target. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_file_info","title":"<code>get_file_info()</code>  <code>async</code>","text":"<p>Returns file information for the given File wrapper.</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_file_info--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.get_flattened_document","title":"<code>get_flattened_document()</code>  <code>async</code>","text":"<p>Returns the root DOM node (and optionally the subtree) to the caller.</p> <p>Deprecated, as it is not designed to work well with the rest of the DOM agent. Use DOMSnapshot.captureSnapshot instead. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_frame_owner","title":"<code>get_frame_owner()</code>  <code>async</code>","text":"<p>Returns iframe node that owns iframe with the given domain.</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_frame_owner--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.get_node_for_location","title":"<code>get_node_for_location()</code>  <code>async</code>","text":"<p>Returns node id at given location.</p> <p>Depending on whether DOM domain is enabled, nodeId is either returned or not. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_node_stack_traces","title":"<code>get_node_stack_traces()</code>  <code>async</code>","text":"<p>Gets stack traces associated with a Node.</p> <p>As of now, only provides stack trace for Node creation. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_nodes_for_subtree_by_style","title":"<code>get_nodes_for_subtree_by_style()</code>  <code>async</code>","text":"<p>Finds nodes with a given computed style in a subtree.</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_nodes_for_subtree_by_style--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.get_outer_html","title":"<code>get_outer_html()</code>  <code>async</code>","text":"<p>Returns node's HTML markup.</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_outer_html--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.get_querying_descendants_for_container","title":"<code>get_querying_descendants_for_container()</code>  <code>async</code>","text":"<p>Returns the descendants of a container query container that have container queries against this container.</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_querying_descendants_for_container--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.get_relayout_boundary","title":"<code>get_relayout_boundary()</code>  <code>async</code>","text":"<p>Returns the id of the nearest ancestor that is a relayout boundary.</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_relayout_boundary--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.get_search_results","title":"<code>get_search_results()</code>  <code>async</code>","text":"<p>Returns search results from given <code>fromIndex</code> to given <code>toIndex</code> from the search with the given identifier.</p>"},{"location":"reference/cdp/dom/#cdp.dom.get_search_results--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.get_top_layer_elements","title":"<code>get_top_layer_elements()</code>  <code>async</code>","text":"<p>Returns NodeIds of current top layer elements.</p> <p>Top layer is rendered closest to the user within a viewport, therefore its elements always appear on top of all other content. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.hide_highlight","title":"<code>hide_highlight()</code>  <code>async</code>","text":"<p>Hides any highlight.</p>"},{"location":"reference/cdp/dom/#cdp.dom.hide_highlight--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.highlight_node","title":"<code>highlight_node()</code>  <code>async</code>","text":"<p>Highlights DOM node.</p>"},{"location":"reference/cdp/dom/#cdp.dom.highlight_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.highlight_rect","title":"<code>highlight_rect()</code>  <code>async</code>","text":"<p>Highlights given rectangle.</p>"},{"location":"reference/cdp/dom/#cdp.dom.highlight_rect--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.mark_undoable_state","title":"<code>mark_undoable_state()</code>  <code>async</code>","text":"<p>Marks last undoable state.</p>"},{"location":"reference/cdp/dom/#cdp.dom.mark_undoable_state--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.move_to","title":"<code>move_to()</code>  <code>async</code>","text":"<p>Moves node into the new container, places it before the given anchor.</p>"},{"location":"reference/cdp/dom/#cdp.dom.move_to--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.perform_search","title":"<code>perform_search()</code>  <code>async</code>","text":"<p>Searches for a given string in the DOM tree.</p> <p>Use <code>getSearchResults</code> to access search results or <code>cancelSearch</code> to end this search session. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.push_node_by_path_to_frontend","title":"<code>push_node_by_path_to_frontend()</code>  <code>async</code>","text":"<p>Requests that the node is sent to the caller given its path.</p> <p>// FIXME, use XPath # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.push_nodes_by_backend_ids_to_frontend","title":"<code>push_nodes_by_backend_ids_to_frontend()</code>  <code>async</code>","text":"<p>Requests that a batch of nodes is sent to the caller given their backend node ids.</p>"},{"location":"reference/cdp/dom/#cdp.dom.push_nodes_by_backend_ids_to_frontend--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.query_selector","title":"<code>query_selector()</code>  <code>async</code>","text":"<p>Executes <code>querySelector</code> on a given node.</p>"},{"location":"reference/cdp/dom/#cdp.dom.query_selector--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.query_selector_all","title":"<code>query_selector_all()</code>  <code>async</code>","text":"<p>Executes <code>querySelectorAll</code> on a given node.</p>"},{"location":"reference/cdp/dom/#cdp.dom.query_selector_all--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.redo","title":"<code>redo()</code>  <code>async</code>","text":"<p>Re-does the last undone action.</p>"},{"location":"reference/cdp/dom/#cdp.dom.redo--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.remove_attribute","title":"<code>remove_attribute()</code>  <code>async</code>","text":"<p>Removes attribute with given name from an element with given id.</p>"},{"location":"reference/cdp/dom/#cdp.dom.remove_attribute--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.remove_node","title":"<code>remove_node()</code>  <code>async</code>","text":"<p>Removes node with given id.</p>"},{"location":"reference/cdp/dom/#cdp.dom.remove_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.request_child_nodes","title":"<code>request_child_nodes()</code>  <code>async</code>","text":"<p>Requests that children of the node with given id are returned to the caller in form of <code>setChildNodes</code> events where not only immediate children are retrieved, but all children down to the specified depth.</p>"},{"location":"reference/cdp/dom/#cdp.dom.request_child_nodes--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.request_node","title":"<code>request_node()</code>  <code>async</code>","text":"<p>Requests that the node is sent to the caller given the JavaScript node object reference.</p> <p>All nodes that form the path from the node to the root are also sent to the client as a series of <code>setChildNodes</code> notifications. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.resolve_node","title":"<code>resolve_node()</code>  <code>async</code>","text":"<p>Resolves the JavaScript node object for a given NodeId or BackendNodeId.</p>"},{"location":"reference/cdp/dom/#cdp.dom.resolve_node--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.scroll_into_view_if_needed","title":"<code>scroll_into_view_if_needed()</code>  <code>async</code>","text":"<p>Scrolls the specified rect of the given node into view if not already visible.</p> <p>Note: exactly one between nodeId, backendNodeId and objectId should be passed to identify the node. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.set_attribute_value","title":"<code>set_attribute_value()</code>  <code>async</code>","text":"<p>Sets attribute for an element with given id.</p>"},{"location":"reference/cdp/dom/#cdp.dom.set_attribute_value--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.set_attributes_as_text","title":"<code>set_attributes_as_text()</code>  <code>async</code>","text":"<p>Sets attributes on element with given id.</p> <p>This method is useful when user edits some existing attribute value and types in several attribute name/value pairs.</p>"},{"location":"reference/cdp/dom/#cdp.dom.set_attributes_as_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.set_file_input_files","title":"<code>set_file_input_files()</code>  <code>async</code>","text":"<p>Sets files for the given file input element.</p>"},{"location":"reference/cdp/dom/#cdp.dom.set_file_input_files--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.set_inspected_node","title":"<code>set_inspected_node()</code>  <code>async</code>","text":"<p>Enables console to refer to the node with given id via $x (see Command Line API for more details.</p> <p>$x functions). # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.set_node_name","title":"<code>set_node_name()</code>  <code>async</code>","text":"<p>Sets node name for a node with given id.</p>"},{"location":"reference/cdp/dom/#cdp.dom.set_node_name--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.set_node_stack_traces_enabled","title":"<code>set_node_stack_traces_enabled()</code>  <code>async</code>","text":"<p>Sets if stack traces should be captured for Nodes.</p> <p>See <code>Node.getNodeStackTraces</code>. Default is disabled. # noqa</p>"},{"location":"reference/cdp/dom/#cdp.dom.set_node_value","title":"<code>set_node_value()</code>  <code>async</code>","text":"<p>Sets node value for a node with given id.</p>"},{"location":"reference/cdp/dom/#cdp.dom.set_node_value--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.set_outer_html","title":"<code>set_outer_html()</code>  <code>async</code>","text":"<p>Sets node HTML markup, returns new node id.</p>"},{"location":"reference/cdp/dom/#cdp.dom.set_outer_html--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom/#cdp.dom.undo","title":"<code>undo()</code>  <code>async</code>","text":"<p>Undoes the last performed action.</p>"},{"location":"reference/cdp/dom/#cdp.dom.undo--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_debugger/","title":"Dom debugger","text":""},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.CSPViolationType","title":"<code>CSPViolationType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>CSP Violation type.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.DOMBreakpointType","title":"<code>DOMBreakpointType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>DOM breakpoint type.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.EventListener","title":"<code>EventListener</code>  <code>dataclass</code>","text":"<p>Object event listener.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.get_event_listeners","title":"<code>get_event_listeners()</code>  <code>async</code>","text":"<p>Returns event listeners of the given object.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.get_event_listeners--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.remove_dom_breakpoint","title":"<code>remove_dom_breakpoint()</code>  <code>async</code>","text":"<p>Removes DOM breakpoint that was set using <code>setDOMBreakpoint</code>.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.remove_dom_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.remove_event_listener_breakpoint","title":"<code>remove_event_listener_breakpoint()</code>  <code>async</code>","text":"<p>Removes breakpoint on particular DOM event.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.remove_event_listener_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.remove_instrumentation_breakpoint","title":"<code>remove_instrumentation_breakpoint()</code>  <code>async</code>","text":"<p>Removes breakpoint on particular native event.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.remove_instrumentation_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.remove_xhr_breakpoint","title":"<code>remove_xhr_breakpoint()</code>  <code>async</code>","text":"<p>Removes breakpoint from XMLHttpRequest.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.remove_xhr_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.set_break_on_csp_violation","title":"<code>set_break_on_csp_violation()</code>  <code>async</code>","text":"<p>Sets breakpoint on particular CSP violations.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.set_break_on_csp_violation--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.set_dom_breakpoint","title":"<code>set_dom_breakpoint()</code>  <code>async</code>","text":"<p>Sets breakpoint on particular operation with DOM.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.set_dom_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.set_event_listener_breakpoint","title":"<code>set_event_listener_breakpoint()</code>  <code>async</code>","text":"<p>Sets breakpoint on particular DOM event.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.set_event_listener_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.set_instrumentation_breakpoint","title":"<code>set_instrumentation_breakpoint()</code>  <code>async</code>","text":"<p>Sets breakpoint on particular native event.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.set_instrumentation_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.set_xhr_breakpoint","title":"<code>set_xhr_breakpoint()</code>  <code>async</code>","text":"<p>Sets breakpoint on XMLHttpRequest.</p>"},{"location":"reference/cdp/dom_debugger/#cdp.dom_debugger.set_xhr_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_snapshot/","title":"Dom snapshot","text":""},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.ArrayOfStrings","title":"<code>ArrayOfStrings</code>  <code>dataclass</code>","text":"<p>Index of the string in the strings table.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.ComputedStyle","title":"<code>ComputedStyle</code>  <code>dataclass</code>","text":"<p>A subset of the full ComputedStyle as defined by the request whitelist.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.DOMNode","title":"<code>DOMNode</code>  <code>dataclass</code>","text":"<p>A Node in the DOM tree.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.DocumentSnapshot","title":"<code>DocumentSnapshot</code>  <code>dataclass</code>","text":"<p>Document snapshot.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.InlineTextBox","title":"<code>InlineTextBox</code>  <code>dataclass</code>","text":"<p>Details of post layout rendered text positions.</p> <p>The exact layout should not be regarded as stable and may change between versions.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.LayoutTreeNode","title":"<code>LayoutTreeNode</code>  <code>dataclass</code>","text":"<p>Details of an element in the DOM tree with a LayoutObject.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.LayoutTreeSnapshot","title":"<code>LayoutTreeSnapshot</code>  <code>dataclass</code>","text":"<p>Table of details of an element in the DOM tree with a LayoutObject.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.NameValue","title":"<code>NameValue</code>  <code>dataclass</code>","text":"<p>A name/value pair.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.NodeTreeSnapshot","title":"<code>NodeTreeSnapshot</code>  <code>dataclass</code>","text":"<p>Table containing nodes.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.RareBooleanData","title":"<code>RareBooleanData</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.RareIntegerData","title":"<code>RareIntegerData</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.RareStringData","title":"<code>RareStringData</code>  <code>dataclass</code>","text":"<p>Data that is only present on rare nodes.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.Rectangle","title":"<code>Rectangle</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.StringIndex","title":"<code>StringIndex</code>","text":"<p>         Bases: <code>int</code></p> <p>Index of the string in the strings table.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.TextBoxSnapshot","title":"<code>TextBoxSnapshot</code>  <code>dataclass</code>","text":"<p>Table of details of the post layout rendered text positions.</p> <p>The exact layout should not be regarded as stable and may change between versions.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.capture_snapshot","title":"<code>capture_snapshot()</code>  <code>async</code>","text":"<p>Returns a document snapshot, including the full DOM tree of the root node (including iframes, template contents, and imported documents) in a flattened array, as well as layout and white-listed computed style information for the nodes.</p> <p>Shadow DOM in the returned DOM tree is flattened. # noqa</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables DOM snapshot agent for the given page.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables DOM snapshot agent for the given page.</p>"},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_snapshot/#cdp.dom_snapshot.get_snapshot","title":"<code>get_snapshot()</code>  <code>async</code>","text":"<p>Returns a document snapshot, including the full DOM tree of the root node (including iframes, template contents, and imported documents) in a flattened array, as well as layout and white-listed computed style information for the nodes.</p> <p>Shadow DOM in the returned DOM tree is flattened. # noqa</p>"},{"location":"reference/cdp/dom_storage/","title":"Dom storage","text":""},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.DomStorageItemAdded","title":"<code>DomStorageItemAdded</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.DomStorageItemRemoved","title":"<code>DomStorageItemRemoved</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.DomStorageItemUpdated","title":"<code>DomStorageItemUpdated</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.DomStorageItemsCleared","title":"<code>DomStorageItemsCleared</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.Item","title":"<code>Item</code>  <code>dataclass</code>","text":"<p>DOM Storage item.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.SerializedStorageKey","title":"<code>SerializedStorageKey</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.StorageId","title":"<code>StorageId</code>  <code>dataclass</code>","text":"<p>DOM Storage identifier.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.clear","title":"<code>clear()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.clear--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables storage tracking, prevents storage events from being sent to the client.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables storage tracking, storage events will now be delivered to the client.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.get_dom_storage_items","title":"<code>get_dom_storage_items()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.get_dom_storage_items--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.remove_dom_storage_item","title":"<code>remove_dom_storage_item()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.remove_dom_storage_item--noqa","title":"noqa","text":""},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.set_dom_storage_item","title":"<code>set_dom_storage_item()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/dom_storage/#cdp.dom_storage.set_dom_storage_item--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/","title":"Emulation","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.DisabledImageType","title":"<code>DisabledImageType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of image types that can be disabled.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.DisplayFeature","title":"<code>DisplayFeature</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.MediaFeature","title":"<code>MediaFeature</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.ScreenOrientation","title":"<code>ScreenOrientation</code>  <code>dataclass</code>","text":"<p>Screen orientation.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.UserAgentBrandVersion","title":"<code>UserAgentBrandVersion</code>  <code>dataclass</code>","text":"<p>Used to specify User Agent Cient Hints to emulate.</p> <p>See https://wicg.github.io/ua-client-hints</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.UserAgentMetadata","title":"<code>UserAgentMetadata</code>  <code>dataclass</code>","text":"<p>Used to specify User Agent Cient Hints to emulate.</p> <p>See https://wicg.github.io/ua-client-hints Missing optional values will be filled in by the target with what it would normally use.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.VirtualTimeBudgetExpired","title":"<code>VirtualTimeBudgetExpired</code>  <code>dataclass</code>","text":"<p>Notification sent after the virtual time budget for the current VirtualTimePolicy has run out.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.VirtualTimePolicy","title":"<code>VirtualTimePolicy</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>advance: If the scheduler runs out of immediate work, the virtual time base may fast forward to allow the next delayed task (if any) to run; pause: The virtual time base may not advance; pauseIfNetworkFetchesPending: The virtual time base may not advance if there are any pending resource fetches.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.can_emulate","title":"<code>can_emulate()</code>  <code>async</code>","text":"<p>Tells whether emulation is supported.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.can_emulate--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.clear_device_metrics_override","title":"<code>clear_device_metrics_override()</code>  <code>async</code>","text":"<p>Clears the overridden device metrics.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.clear_device_metrics_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.clear_geolocation_override","title":"<code>clear_geolocation_override()</code>  <code>async</code>","text":"<p>Clears the overridden Geolocation Position and Error.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.clear_geolocation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.clear_idle_override","title":"<code>clear_idle_override()</code>  <code>async</code>","text":"<p>Clears Idle state overrides.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.clear_idle_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.reset_page_scale_factor","title":"<code>reset_page_scale_factor()</code>  <code>async</code>","text":"<p>Requests that page scale factor is reset to initial values.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.reset_page_scale_factor--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_auto_dark_mode_override","title":"<code>set_auto_dark_mode_override()</code>  <code>async</code>","text":"<p>Automatically render all web contents using a dark theme.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_auto_dark_mode_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_automation_override","title":"<code>set_automation_override()</code>  <code>async</code>","text":"<p>Allows overriding the automation flag.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_automation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_cpu_throttling_rate","title":"<code>set_cpu_throttling_rate()</code>  <code>async</code>","text":"<p>Enables CPU throttling to emulate slow CPUs.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_cpu_throttling_rate--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_default_background_color_override","title":"<code>set_default_background_color_override()</code>  <code>async</code>","text":"<p>Sets or clears an override of the default background color of the frame.</p> <p>This override is used if the content does not specify one. # noqa</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_device_metrics_override","title":"<code>set_device_metrics_override()</code>  <code>async</code>","text":"<p>Overrides the values of device screen dimensions (window.screen.width, window.screen.height, window.innerWidth, window.innerHeight, and \"device-width\"/\"device-height\"-related CSS media query results).</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_device_metrics_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_disabled_image_types","title":"<code>set_disabled_image_types()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_disabled_image_types--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_document_cookie_disabled","title":"<code>set_document_cookie_disabled()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_document_cookie_disabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_emit_touch_events_for_mouse","title":"<code>set_emit_touch_events_for_mouse()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_emit_touch_events_for_mouse--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_emulated_media","title":"<code>set_emulated_media()</code>  <code>async</code>","text":"<p>Emulates the given media type or media feature for CSS media queries.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_emulated_media--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_emulated_vision_deficiency","title":"<code>set_emulated_vision_deficiency()</code>  <code>async</code>","text":"<p>Emulates the given vision deficiency.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_emulated_vision_deficiency--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_focus_emulation_enabled","title":"<code>set_focus_emulation_enabled()</code>  <code>async</code>","text":"<p>Enables or disables simulating a focused and active page.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_focus_emulation_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_geolocation_override","title":"<code>set_geolocation_override()</code>  <code>async</code>","text":"<p>Overrides the Geolocation Position or Error.</p> <p>Omitting any of the parameters emulates position unavailable. # noqa</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_hardware_concurrency_override","title":"<code>set_hardware_concurrency_override()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_hardware_concurrency_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_idle_override","title":"<code>set_idle_override()</code>  <code>async</code>","text":"<p>Overrides the Idle state.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_idle_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_locale_override","title":"<code>set_locale_override()</code>  <code>async</code>","text":"<p>Overrides default host system locale with the specified one.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_locale_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_navigator_overrides","title":"<code>set_navigator_overrides()</code>  <code>async</code>","text":"<p>Overrides value returned by the javascript navigator object.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_navigator_overrides--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_page_scale_factor","title":"<code>set_page_scale_factor()</code>  <code>async</code>","text":"<p>Sets a specified page scale factor.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_page_scale_factor--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_script_execution_disabled","title":"<code>set_script_execution_disabled()</code>  <code>async</code>","text":"<p>Switches script execution in the page.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_script_execution_disabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_scrollbars_hidden","title":"<code>set_scrollbars_hidden()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_scrollbars_hidden--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_timezone_override","title":"<code>set_timezone_override()</code>  <code>async</code>","text":"<p>Overrides default host system timezone with the specified one.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_timezone_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_touch_emulation_enabled","title":"<code>set_touch_emulation_enabled()</code>  <code>async</code>","text":"<p>Enables touch on platforms which do not support them.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_touch_emulation_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_user_agent_override","title":"<code>set_user_agent_override()</code>  <code>async</code>","text":"<p>Allows overriding user agent with the given string.</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_user_agent_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/emulation/#cdp.emulation.set_virtual_time_policy","title":"<code>set_virtual_time_policy()</code>  <code>async</code>","text":"<p>Turns on virtual time for all frames (replacing real-time with a synthetic time source) and sets the current virtual time policy.</p> <p>Note this supersedes any previous time budget. # noqa</p>"},{"location":"reference/cdp/emulation/#cdp.emulation.set_visible_size","title":"<code>set_visible_size()</code>  <code>async</code>","text":"<p>Resizes the frame/viewport of the page.</p> <p>Note that this does not affect the frame's container (e.g. browser window). Can be used to produce screenshots of the specified size. Not supported on Android. # noqa</p>"},{"location":"reference/cdp/event_breakpoints/","title":"Event breakpoints","text":""},{"location":"reference/cdp/event_breakpoints/#cdp.event_breakpoints.remove_instrumentation_breakpoint","title":"<code>remove_instrumentation_breakpoint()</code>  <code>async</code>","text":"<p>Removes breakpoint on particular native event.</p>"},{"location":"reference/cdp/event_breakpoints/#cdp.event_breakpoints.remove_instrumentation_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/event_breakpoints/#cdp.event_breakpoints.set_instrumentation_breakpoint","title":"<code>set_instrumentation_breakpoint()</code>  <code>async</code>","text":"<p>Sets breakpoint on particular native event.</p>"},{"location":"reference/cdp/event_breakpoints/#cdp.event_breakpoints.set_instrumentation_breakpoint--noqa","title":"noqa","text":""},{"location":"reference/cdp/fed_cm/","title":"Fed cm","text":""},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.Account","title":"<code>Account</code>  <code>dataclass</code>","text":"<p>Corresponds to IdentityRequestAccount.</p>"},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.DialogShown","title":"<code>DialogShown</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.LoginState","title":"<code>LoginState</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Whether this is a sign-up or sign-in action for this account, i.e. whether this account has ever been used to sign in to this RP before.</p>"},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.dismiss_dialog","title":"<code>dismiss_dialog()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.dismiss_dialog--noqa","title":"noqa","text":""},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.reset_cooldown","title":"<code>reset_cooldown()</code>  <code>async</code>","text":"<p>Resets the cooldown time, if any, to allow the next FedCM call to show a dialog even if one was recently dismissed by the user.</p>"},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.reset_cooldown--noqa","title":"noqa","text":""},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.select_account","title":"<code>select_account()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/fed_cm/#cdp.fed_cm.select_account--noqa","title":"noqa","text":""},{"location":"reference/cdp/fetch/","title":"Fetch","text":""},{"location":"reference/cdp/fetch/#cdp.fetch.AuthChallenge","title":"<code>AuthChallenge</code>  <code>dataclass</code>","text":"<p>Authorization challenge for HTTP status code 401 or 407.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.AuthChallengeResponse","title":"<code>AuthChallengeResponse</code>  <code>dataclass</code>","text":"<p>Response to an AuthChallenge.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.AuthRequired","title":"<code>AuthRequired</code>  <code>dataclass</code>","text":"<p>Issued when the domain is enabled with handleAuthRequests set to true.</p> <p>The request is paused until client responds with continueWithAuth.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.HeaderEntry","title":"<code>HeaderEntry</code>  <code>dataclass</code>","text":"<p>Response HTTP header entry.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.RequestId","title":"<code>RequestId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique request identifier.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.RequestPattern","title":"<code>RequestPattern</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.RequestPaused","title":"<code>RequestPaused</code>  <code>dataclass</code>","text":"<p>Issued when the domain is enabled and the request URL matches the specified filter.</p> <p>The request is paused until the client responds with one of continueRequest, failRequest or fulfillRequest. The stage of the request can be determined by presence of responseErrorReason and responseStatusCode -- the request is at the response stage if either of these fields is present and in the request stage otherwise.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.RequestStage","title":"<code>RequestStage</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Stages of the request to handle.</p> <p>Request will intercept before the request is sent. Response will intercept after the response is received (but before response body is received).</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.continue_request","title":"<code>continue_request()</code>  <code>async</code>","text":"<p>Continues the request, optionally modifying some of its parameters.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.continue_request--noqa","title":"noqa","text":""},{"location":"reference/cdp/fetch/#cdp.fetch.continue_response","title":"<code>continue_response()</code>  <code>async</code>","text":"<p>Continues loading of the paused response, optionally modifying the response headers.</p> <p>If either responseCode or headers are modified, all of them must be present. # noqa</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.continue_with_auth","title":"<code>continue_with_auth()</code>  <code>async</code>","text":"<p>Continues a request supplying authChallengeResponse following authRequired event.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.continue_with_auth--noqa","title":"noqa","text":""},{"location":"reference/cdp/fetch/#cdp.fetch.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables the fetch domain.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/fetch/#cdp.fetch.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables issuing of requestPaused events.</p> <p>A request will be paused until client calls one of failRequest, fulfillRequest or continueRequest/continueWithAuth.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/fetch/#cdp.fetch.fail_request","title":"<code>fail_request()</code>  <code>async</code>","text":"<p>Causes the request to fail with specified reason.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.fail_request--noqa","title":"noqa","text":""},{"location":"reference/cdp/fetch/#cdp.fetch.fulfill_request","title":"<code>fulfill_request()</code>  <code>async</code>","text":"<p>Provides response to the request.</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.fulfill_request--noqa","title":"noqa","text":""},{"location":"reference/cdp/fetch/#cdp.fetch.get_response_body","title":"<code>get_response_body()</code>  <code>async</code>","text":"<p>Causes the body of the response to be received from the server and returned as a single string.</p> <p>May only be issued for a request that is paused in the Response stage and is mutually exclusive with takeResponseBodyForInterceptionAsStream. Calling other methods that affect the request or disabling fetch domain before body is received results in an undefined behavior. # noqa</p>"},{"location":"reference/cdp/fetch/#cdp.fetch.take_response_body_as_stream","title":"<code>take_response_body_as_stream()</code>  <code>async</code>","text":"<p>Returns a handle to the stream representing the response body.</p> <p>The request must be paused in the HeadersReceived stage. Note that after this command the request can't be continued as is -- client either needs to cancel it or to provide the response body. The stream only supports sequential read, IO.read will fail if the position is specified. This method is mutually exclusive with getResponseBody. Calling other methods that affect the request or disabling fetch domain before body is received results in an undefined behavior. # noqa</p>"},{"location":"reference/cdp/headless_experimental/","title":"Headless experimental","text":""},{"location":"reference/cdp/headless_experimental/#cdp.headless_experimental.ScreenshotParams","title":"<code>ScreenshotParams</code>  <code>dataclass</code>","text":"<p>Encoding options for a screenshot.</p>"},{"location":"reference/cdp/headless_experimental/#cdp.headless_experimental.begin_frame","title":"<code>begin_frame()</code>  <code>async</code>","text":"<p>Sends a BeginFrame to the target and returns when the frame was completed.</p> <p>Optionally captures a screenshot from the resulting frame. Requires that the target was created with enabled BeginFrameControl. Designed for use with --run-all-compositor-stages-before-draw, see also https://goo.gle/chrome-headless-rendering for more background. # noqa</p>"},{"location":"reference/cdp/headless_experimental/#cdp.headless_experimental.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables headless events for the target.</p>"},{"location":"reference/cdp/headless_experimental/#cdp.headless_experimental.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/headless_experimental/#cdp.headless_experimental.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables headless events for the target.</p>"},{"location":"reference/cdp/headless_experimental/#cdp.headless_experimental.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/heap_profiler/","title":"Heap profiler","text":""},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.AddHeapSnapshotChunk","title":"<code>AddHeapSnapshotChunk</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.HeapSnapshotObjectId","title":"<code>HeapSnapshotObjectId</code>","text":"<p>         Bases: <code>str</code></p> <p>Heap snapshot object id.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.HeapStatsUpdate","title":"<code>HeapStatsUpdate</code>  <code>dataclass</code>","text":"<p>If heap objects tracking has been started then backend may send update for one or more fragments.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.LastSeenObjectId","title":"<code>LastSeenObjectId</code>  <code>dataclass</code>","text":"<p>If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp.</p> <p>If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.ReportHeapSnapshotProgress","title":"<code>ReportHeapSnapshotProgress</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.ResetProfiles","title":"<code>ResetProfiles</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.SamplingHeapProfile","title":"<code>SamplingHeapProfile</code>  <code>dataclass</code>","text":"<p>Sampling profile.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.SamplingHeapProfileNode","title":"<code>SamplingHeapProfileNode</code>  <code>dataclass</code>","text":"<p>Sampling Heap Profile node.</p> <p>Holds callsite information, allocation statistics and child nodes.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.SamplingHeapProfileSample","title":"<code>SamplingHeapProfileSample</code>  <code>dataclass</code>","text":"<p>A single sample from a sampling profile.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.add_inspected_heap_object","title":"<code>add_inspected_heap_object()</code>  <code>async</code>","text":"<p>Enables console to refer to the node with given id via $x (see Command Line API for more details.</p> <p>$x functions). # noqa</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.collect_garbage","title":"<code>collect_garbage()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.collect_garbage--noqa","title":"noqa","text":""},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.get_heap_object_id","title":"<code>get_heap_object_id()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.get_heap_object_id--noqa","title":"noqa","text":""},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.get_object_by_heap_object_id","title":"<code>get_object_by_heap_object_id()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.get_object_by_heap_object_id--noqa","title":"noqa","text":""},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.get_sampling_profile","title":"<code>get_sampling_profile()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.get_sampling_profile--noqa","title":"noqa","text":""},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.start_sampling","title":"<code>start_sampling()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.start_sampling--noqa","title":"noqa","text":""},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.start_tracking_heap_objects","title":"<code>start_tracking_heap_objects()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.start_tracking_heap_objects--noqa","title":"noqa","text":""},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.stop_sampling","title":"<code>stop_sampling()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.stop_sampling--noqa","title":"noqa","text":""},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.stop_tracking_heap_objects","title":"<code>stop_tracking_heap_objects()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.stop_tracking_heap_objects--noqa","title":"noqa","text":""},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.take_heap_snapshot","title":"<code>take_heap_snapshot()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/heap_profiler/#cdp.heap_profiler.take_heap_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/indexed_db/","title":"Indexed db","text":""},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.DataEntry","title":"<code>DataEntry</code>  <code>dataclass</code>","text":"<p>Data entry.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.DatabaseWithObjectStores","title":"<code>DatabaseWithObjectStores</code>  <code>dataclass</code>","text":"<p>Database with an array of object stores.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.Key","title":"<code>Key</code>  <code>dataclass</code>","text":"<p>Key.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.KeyPath","title":"<code>KeyPath</code>  <code>dataclass</code>","text":"<p>Key path.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.KeyRange","title":"<code>KeyRange</code>  <code>dataclass</code>","text":"<p>Key range.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.ObjectStore","title":"<code>ObjectStore</code>  <code>dataclass</code>","text":"<p>Object store.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.ObjectStoreIndex","title":"<code>ObjectStoreIndex</code>  <code>dataclass</code>","text":"<p>Object store index.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.clear_object_store","title":"<code>clear_object_store()</code>  <code>async</code>","text":"<p>Clears all entries from an object store.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.clear_object_store--noqa","title":"noqa","text":""},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.delete_database","title":"<code>delete_database()</code>  <code>async</code>","text":"<p>Deletes a database.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.delete_database--noqa","title":"noqa","text":""},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.delete_object_store_entries","title":"<code>delete_object_store_entries()</code>  <code>async</code>","text":"<p>Delete a range of entries from an object store # noqa.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables events from backend.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables events from backend.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.get_metadata","title":"<code>get_metadata()</code>  <code>async</code>","text":"<p>Gets metadata of an object store.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.get_metadata--noqa","title":"noqa","text":""},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.request_data","title":"<code>request_data()</code>  <code>async</code>","text":"<p>Requests data from object store or index.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.request_data--noqa","title":"noqa","text":""},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.request_database","title":"<code>request_database()</code>  <code>async</code>","text":"<p>Requests database with given name in given frame.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.request_database--noqa","title":"noqa","text":""},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.request_database_names","title":"<code>request_database_names()</code>  <code>async</code>","text":"<p>Requests database names for given security origin.</p>"},{"location":"reference/cdp/indexed_db/#cdp.indexed_db.request_database_names--noqa","title":"noqa","text":""},{"location":"reference/cdp/input/","title":"Input","text":""},{"location":"reference/cdp/input/#cdp.input.DragData","title":"<code>DragData</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/input/#cdp.input.DragDataItem","title":"<code>DragDataItem</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/input/#cdp.input.DragIntercepted","title":"<code>DragIntercepted</code>  <code>dataclass</code>","text":"<p>Emitted only when <code>Input.setInterceptDrags</code> is enabled.</p> <p>Use this data with <code>Input.dispatchDragEvent</code> to restore normal drag and drop behavior.</p>"},{"location":"reference/cdp/input/#cdp.input.GestureSourceType","title":"<code>GestureSourceType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/input/#cdp.input.MouseButton","title":"<code>MouseButton</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/input/#cdp.input.TimeSinceEpoch","title":"<code>TimeSinceEpoch</code>","text":"<p>         Bases: <code>float</code></p> <p>UTC time in seconds, counted from January 1, 1970.</p>"},{"location":"reference/cdp/input/#cdp.input.TouchPoint","title":"<code>TouchPoint</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/input/#cdp.input.dispatch_drag_event","title":"<code>dispatch_drag_event()</code>  <code>async</code>","text":"<p>Dispatches a drag event into the page.</p>"},{"location":"reference/cdp/input/#cdp.input.dispatch_drag_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/input/#cdp.input.dispatch_key_event","title":"<code>dispatch_key_event()</code>  <code>async</code>","text":"<p>Dispatches a key event to the page.</p>"},{"location":"reference/cdp/input/#cdp.input.dispatch_key_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/input/#cdp.input.dispatch_mouse_event","title":"<code>dispatch_mouse_event()</code>  <code>async</code>","text":"<p>Dispatches a mouse event to the page.</p>"},{"location":"reference/cdp/input/#cdp.input.dispatch_mouse_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/input/#cdp.input.dispatch_touch_event","title":"<code>dispatch_touch_event()</code>  <code>async</code>","text":"<p>Dispatches a touch event to the page.</p>"},{"location":"reference/cdp/input/#cdp.input.dispatch_touch_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/input/#cdp.input.emulate_touch_from_mouse_event","title":"<code>emulate_touch_from_mouse_event()</code>  <code>async</code>","text":"<p>Emulates touch event from the mouse event parameters.</p>"},{"location":"reference/cdp/input/#cdp.input.emulate_touch_from_mouse_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/input/#cdp.input.ime_set_composition","title":"<code>ime_set_composition()</code>  <code>async</code>","text":"<p>This method sets the current candidate text for ime.</p> <p>Use imeCommitComposition to commit the final text. Use imeSetComposition with empty string as text to cancel composition. # noqa</p>"},{"location":"reference/cdp/input/#cdp.input.insert_text","title":"<code>insert_text()</code>  <code>async</code>","text":"<p>This method emulates inserting text that doesn't come from a key press, for example an emoji keyboard or an IME.</p>"},{"location":"reference/cdp/input/#cdp.input.insert_text--noqa","title":"noqa","text":""},{"location":"reference/cdp/input/#cdp.input.set_ignore_input_events","title":"<code>set_ignore_input_events()</code>  <code>async</code>","text":"<p>Ignores input events (useful while auditing page).</p>"},{"location":"reference/cdp/input/#cdp.input.set_ignore_input_events--noqa","title":"noqa","text":""},{"location":"reference/cdp/input/#cdp.input.set_intercept_drags","title":"<code>set_intercept_drags()</code>  <code>async</code>","text":"<p>Prevents default drag and drop behavior and instead emits <code>Input.dragIntercepted</code> events.</p> <p>Drag and drop behavior can be directly controlled via <code>Input.dispatchDragEvent</code>. # noqa</p>"},{"location":"reference/cdp/input/#cdp.input.synthesize_pinch_gesture","title":"<code>synthesize_pinch_gesture()</code>  <code>async</code>","text":"<p>Synthesizes a pinch gesture over a time period by issuing appropriate touch events.</p>"},{"location":"reference/cdp/input/#cdp.input.synthesize_pinch_gesture--noqa","title":"noqa","text":""},{"location":"reference/cdp/input/#cdp.input.synthesize_scroll_gesture","title":"<code>synthesize_scroll_gesture()</code>  <code>async</code>","text":"<p>Synthesizes a scroll gesture over a time period by issuing appropriate touch events.</p>"},{"location":"reference/cdp/input/#cdp.input.synthesize_scroll_gesture--noqa","title":"noqa","text":""},{"location":"reference/cdp/input/#cdp.input.synthesize_tap_gesture","title":"<code>synthesize_tap_gesture()</code>  <code>async</code>","text":"<p>Synthesizes a tap gesture over a time period by issuing appropriate touch events.</p>"},{"location":"reference/cdp/input/#cdp.input.synthesize_tap_gesture--noqa","title":"noqa","text":""},{"location":"reference/cdp/inspector/","title":"Inspector","text":""},{"location":"reference/cdp/inspector/#cdp.inspector.Detached","title":"<code>Detached</code>  <code>dataclass</code>","text":"<p>Fired when remote debugging connection is about to be terminated.</p> <p>Contains detach reason.</p>"},{"location":"reference/cdp/inspector/#cdp.inspector.TargetCrashed","title":"<code>TargetCrashed</code>  <code>dataclass</code>","text":"<p>Fired when debugging target has crashed.</p>"},{"location":"reference/cdp/inspector/#cdp.inspector.TargetReloadedAfterCrash","title":"<code>TargetReloadedAfterCrash</code>  <code>dataclass</code>","text":"<p>Fired when debugging target has reloaded after crash.</p>"},{"location":"reference/cdp/inspector/#cdp.inspector.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables inspector domain notifications.</p>"},{"location":"reference/cdp/inspector/#cdp.inspector.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/inspector/#cdp.inspector.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables inspector domain notifications.</p>"},{"location":"reference/cdp/inspector/#cdp.inspector.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/io/","title":"Io","text":""},{"location":"reference/cdp/io/#cdp.io.StreamHandle","title":"<code>StreamHandle</code>","text":"<p>         Bases: <code>str</code></p> <p>This is either obtained from another method or specified as <code>blob:&amp;lt;uuid&amp;gt;</code> where <code>&amp;lt;uuid&amp;gt</code> is an UUID of a Blob.</p>"},{"location":"reference/cdp/io/#cdp.io.close","title":"<code>close()</code>  <code>async</code>","text":"<p>Close the stream, discard any temporary backing storage.</p>"},{"location":"reference/cdp/io/#cdp.io.close--noqa","title":"noqa","text":""},{"location":"reference/cdp/io/#cdp.io.read","title":"<code>read()</code>  <code>async</code>","text":"<p>Read a chunk of the stream # noqa.</p>"},{"location":"reference/cdp/io/#cdp.io.resolve_blob","title":"<code>resolve_blob()</code>  <code>async</code>","text":"<p>Return UUID of Blob object specified by a remote object id.</p>"},{"location":"reference/cdp/io/#cdp.io.resolve_blob--noqa","title":"noqa","text":""},{"location":"reference/cdp/layer_tree/","title":"Layer tree","text":""},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.Layer","title":"<code>Layer</code>  <code>dataclass</code>","text":"<p>Information about a compositing layer.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.LayerId","title":"<code>LayerId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique Layer identifier.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.LayerPainted","title":"<code>LayerPainted</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.LayerTreeDidChange","title":"<code>LayerTreeDidChange</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.PaintProfile","title":"<code>PaintProfile</code>  <code>dataclass</code>","text":"<p>Array of timings, one per paint step.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.PictureTile","title":"<code>PictureTile</code>  <code>dataclass</code>","text":"<p>Serialized fragment of layer picture along with its offset within the layer.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.ScrollRect","title":"<code>ScrollRect</code>  <code>dataclass</code>","text":"<p>Rectangle where scrolling happens on the main thread.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.SnapshotId","title":"<code>SnapshotId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique snapshot identifier.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.StickyPositionConstraint","title":"<code>StickyPositionConstraint</code>  <code>dataclass</code>","text":"<p>Sticky position constraints.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.compositing_reasons","title":"<code>compositing_reasons()</code>  <code>async</code>","text":"<p>Provides the reasons why the given layer was composited.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.compositing_reasons--noqa","title":"noqa","text":""},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables compositing tree inspection.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables compositing tree inspection.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.load_snapshot","title":"<code>load_snapshot()</code>  <code>async</code>","text":"<p>Returns the snapshot identifier.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.load_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.make_snapshot","title":"<code>make_snapshot()</code>  <code>async</code>","text":"<p>Returns the layer snapshot identifier.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.make_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.profile_snapshot","title":"<code>profile_snapshot()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.profile_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.release_snapshot","title":"<code>release_snapshot()</code>  <code>async</code>","text":"<p>Releases layer snapshot captured by the back-end.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.release_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.replay_snapshot","title":"<code>replay_snapshot()</code>  <code>async</code>","text":"<p>Replays the layer snapshot and returns the resulting bitmap.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.replay_snapshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.snapshot_command_log","title":"<code>snapshot_command_log()</code>  <code>async</code>","text":"<p>Replays the layer snapshot and returns canvas log.</p>"},{"location":"reference/cdp/layer_tree/#cdp.layer_tree.snapshot_command_log--noqa","title":"noqa","text":""},{"location":"reference/cdp/log/","title":"Log","text":""},{"location":"reference/cdp/log/#cdp.log.EntryAdded","title":"<code>EntryAdded</code>  <code>dataclass</code>","text":"<p>Issued when new message was logged.</p>"},{"location":"reference/cdp/log/#cdp.log.LogEntry","title":"<code>LogEntry</code>  <code>dataclass</code>","text":"<p>Log entry.</p>"},{"location":"reference/cdp/log/#cdp.log.ViolationSetting","title":"<code>ViolationSetting</code>  <code>dataclass</code>","text":"<p>Violation configuration setting.</p>"},{"location":"reference/cdp/log/#cdp.log.clear","title":"<code>clear()</code>  <code>async</code>","text":"<p>Clears the log.</p>"},{"location":"reference/cdp/log/#cdp.log.clear--noqa","title":"noqa","text":""},{"location":"reference/cdp/log/#cdp.log.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables log domain, prevents further log entries from being reported to the client.</p>"},{"location":"reference/cdp/log/#cdp.log.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/log/#cdp.log.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables log domain, sends the entries collected so far to the client by means of the <code>entryAdded</code> notification.</p>"},{"location":"reference/cdp/log/#cdp.log.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/log/#cdp.log.start_violations_report","title":"<code>start_violations_report()</code>  <code>async</code>","text":"<p>start violation reporting.</p>"},{"location":"reference/cdp/log/#cdp.log.start_violations_report--noqa","title":"noqa","text":""},{"location":"reference/cdp/log/#cdp.log.stop_violations_report","title":"<code>stop_violations_report()</code>  <code>async</code>","text":"<p>Stop violation reporting.</p>"},{"location":"reference/cdp/log/#cdp.log.stop_violations_report--noqa","title":"noqa","text":""},{"location":"reference/cdp/media/","title":"Media","text":""},{"location":"reference/cdp/media/#cdp.media.PlayerError","title":"<code>PlayerError</code>  <code>dataclass</code>","text":"<p>Corresponds to kMediaError.</p>"},{"location":"reference/cdp/media/#cdp.media.PlayerErrorSourceLocation","title":"<code>PlayerErrorSourceLocation</code>  <code>dataclass</code>","text":"<p>Represents logged source line numbers reported in an error.</p> <p>NOTE: file and line are from chromium c++ implementation code, not js.</p>"},{"location":"reference/cdp/media/#cdp.media.PlayerErrorsRaised","title":"<code>PlayerErrorsRaised</code>  <code>dataclass</code>","text":"<p>Send a list of any errors that need to be delivered.</p>"},{"location":"reference/cdp/media/#cdp.media.PlayerEvent","title":"<code>PlayerEvent</code>  <code>dataclass</code>","text":"<p>Corresponds to kMediaEventTriggered.</p>"},{"location":"reference/cdp/media/#cdp.media.PlayerEventsAdded","title":"<code>PlayerEventsAdded</code>  <code>dataclass</code>","text":"<p>Send events as a list, allowing them to be batched on the browser for less congestion.</p> <p>If batched, events must ALWAYS be in chronological order.</p>"},{"location":"reference/cdp/media/#cdp.media.PlayerId","title":"<code>PlayerId</code>","text":"<p>         Bases: <code>str</code></p> <p>Players will get an ID that is unique within the agent context.</p>"},{"location":"reference/cdp/media/#cdp.media.PlayerMessage","title":"<code>PlayerMessage</code>  <code>dataclass</code>","text":"<p>Have one type per entry in MediaLogRecord::Type Corresponds to kMessage.</p>"},{"location":"reference/cdp/media/#cdp.media.PlayerMessagesLogged","title":"<code>PlayerMessagesLogged</code>  <code>dataclass</code>","text":"<p>Send a list of any messages that need to be delivered.</p>"},{"location":"reference/cdp/media/#cdp.media.PlayerPropertiesChanged","title":"<code>PlayerPropertiesChanged</code>  <code>dataclass</code>","text":"<p>This can be called multiple times, and can be used to set / override / remove player properties.</p> <p>A null propValue indicates removal.</p>"},{"location":"reference/cdp/media/#cdp.media.PlayerProperty","title":"<code>PlayerProperty</code>  <code>dataclass</code>","text":"<p>Corresponds to kMediaPropertyChange.</p>"},{"location":"reference/cdp/media/#cdp.media.PlayersCreated","title":"<code>PlayersCreated</code>  <code>dataclass</code>","text":"<p>Called whenever a player is created, or when a new agent joins and receives a list of active players.</p> <p>If an agent is restored, it will receive the full list of player ids and all events again.</p>"},{"location":"reference/cdp/media/#cdp.media.Timestamp","title":"<code>Timestamp</code>","text":"<p>         Bases: <code>float</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/media/#cdp.media.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables the Media domain.</p>"},{"location":"reference/cdp/media/#cdp.media.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/media/#cdp.media.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables the Media domain # noqa.</p>"},{"location":"reference/cdp/memory/","title":"Memory","text":""},{"location":"reference/cdp/memory/#cdp.memory.Module","title":"<code>Module</code>  <code>dataclass</code>","text":"<p>Executable module information.</p>"},{"location":"reference/cdp/memory/#cdp.memory.PressureLevel","title":"<code>PressureLevel</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Memory pressure level.</p>"},{"location":"reference/cdp/memory/#cdp.memory.SamplingProfile","title":"<code>SamplingProfile</code>  <code>dataclass</code>","text":"<p>Array of heap profile samples.</p>"},{"location":"reference/cdp/memory/#cdp.memory.SamplingProfileNode","title":"<code>SamplingProfileNode</code>  <code>dataclass</code>","text":"<p>Heap profile sample.</p>"},{"location":"reference/cdp/memory/#cdp.memory.forcibly_purge_java_script_memory","title":"<code>forcibly_purge_java_script_memory()</code>  <code>async</code>","text":"<p>Simulate OomIntervention by purging V8 memory.</p>"},{"location":"reference/cdp/memory/#cdp.memory.forcibly_purge_java_script_memory--noqa","title":"noqa","text":""},{"location":"reference/cdp/memory/#cdp.memory.get_all_time_sampling_profile","title":"<code>get_all_time_sampling_profile()</code>  <code>async</code>","text":"<p>Retrieve native memory allocations profile collected since renderer process startup.</p>"},{"location":"reference/cdp/memory/#cdp.memory.get_all_time_sampling_profile--noqa","title":"noqa","text":""},{"location":"reference/cdp/memory/#cdp.memory.get_browser_sampling_profile","title":"<code>get_browser_sampling_profile()</code>  <code>async</code>","text":"<p>Retrieve native memory allocations profile collected since browser process startup.</p>"},{"location":"reference/cdp/memory/#cdp.memory.get_browser_sampling_profile--noqa","title":"noqa","text":""},{"location":"reference/cdp/memory/#cdp.memory.get_dom_counters","title":"<code>get_dom_counters()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/memory/#cdp.memory.get_dom_counters--noqa","title":"noqa","text":""},{"location":"reference/cdp/memory/#cdp.memory.get_sampling_profile","title":"<code>get_sampling_profile()</code>  <code>async</code>","text":"<p>Retrieve native memory allocations profile collected since last <code>startSampling</code> call.</p>"},{"location":"reference/cdp/memory/#cdp.memory.get_sampling_profile--noqa","title":"noqa","text":""},{"location":"reference/cdp/memory/#cdp.memory.prepare_for_leak_detection","title":"<code>prepare_for_leak_detection()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/memory/#cdp.memory.prepare_for_leak_detection--noqa","title":"noqa","text":""},{"location":"reference/cdp/memory/#cdp.memory.set_pressure_notifications_suppressed","title":"<code>set_pressure_notifications_suppressed()</code>  <code>async</code>","text":"<p>Enable/disable suppressing memory pressure notifications in all processes.</p>"},{"location":"reference/cdp/memory/#cdp.memory.set_pressure_notifications_suppressed--noqa","title":"noqa","text":""},{"location":"reference/cdp/memory/#cdp.memory.simulate_pressure_notification","title":"<code>simulate_pressure_notification()</code>  <code>async</code>","text":"<p>Simulate a memory pressure notification in all processes.</p>"},{"location":"reference/cdp/memory/#cdp.memory.simulate_pressure_notification--noqa","title":"noqa","text":""},{"location":"reference/cdp/memory/#cdp.memory.start_sampling","title":"<code>start_sampling()</code>  <code>async</code>","text":"<p>Start collecting native memory profile.</p>"},{"location":"reference/cdp/memory/#cdp.memory.start_sampling--noqa","title":"noqa","text":""},{"location":"reference/cdp/memory/#cdp.memory.stop_sampling","title":"<code>stop_sampling()</code>  <code>async</code>","text":"<p>Stop collecting native memory profile.</p>"},{"location":"reference/cdp/memory/#cdp.memory.stop_sampling--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/","title":"Network","text":""},{"location":"reference/cdp/network/#cdp.network.AlternateProtocolUsage","title":"<code>AlternateProtocolUsage</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The reason why Chrome uses a specific transport protocol for HTTP semantics.</p>"},{"location":"reference/cdp/network/#cdp.network.AuthChallenge","title":"<code>AuthChallenge</code>  <code>dataclass</code>","text":"<p>Authorization challenge for HTTP status code 401 or 407.</p>"},{"location":"reference/cdp/network/#cdp.network.AuthChallengeResponse","title":"<code>AuthChallengeResponse</code>  <code>dataclass</code>","text":"<p>Response to an AuthChallenge.</p>"},{"location":"reference/cdp/network/#cdp.network.BlockedCookieWithReason","title":"<code>BlockedCookieWithReason</code>  <code>dataclass</code>","text":"<p>A cookie with was not sent with a request with the corresponding reason.</p>"},{"location":"reference/cdp/network/#cdp.network.BlockedReason","title":"<code>BlockedReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The reason why request was blocked.</p>"},{"location":"reference/cdp/network/#cdp.network.BlockedSetCookieWithReason","title":"<code>BlockedSetCookieWithReason</code>  <code>dataclass</code>","text":"<p>A cookie which was not stored from a response with the corresponding reason.</p>"},{"location":"reference/cdp/network/#cdp.network.CachedResource","title":"<code>CachedResource</code>  <code>dataclass</code>","text":"<p>Information about the cached resource.</p>"},{"location":"reference/cdp/network/#cdp.network.CertificateTransparencyCompliance","title":"<code>CertificateTransparencyCompliance</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Whether the request complied with Certificate Transparency policy.</p>"},{"location":"reference/cdp/network/#cdp.network.ClientSecurityState","title":"<code>ClientSecurityState</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.ConnectTiming","title":"<code>ConnectTiming</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.ConnectionType","title":"<code>ConnectionType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The underlying connection technology that the browser is supposedly using.</p>"},{"location":"reference/cdp/network/#cdp.network.ContentEncoding","title":"<code>ContentEncoding</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>List of content encodings supported by the backend.</p>"},{"location":"reference/cdp/network/#cdp.network.Cookie","title":"<code>Cookie</code>  <code>dataclass</code>","text":"<p>Cookie object.</p>"},{"location":"reference/cdp/network/#cdp.network.CookieBlockedReason","title":"<code>CookieBlockedReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Types of reasons why a cookie may not be sent with a request.</p>"},{"location":"reference/cdp/network/#cdp.network.CookieParam","title":"<code>CookieParam</code>  <code>dataclass</code>","text":"<p>Cookie parameter object.</p>"},{"location":"reference/cdp/network/#cdp.network.CookiePriority","title":"<code>CookiePriority</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Represents the cookie's 'Priority' status:</p> <p>https://tools.ietf.org/html/draft-west-cookie-priority-00</p>"},{"location":"reference/cdp/network/#cdp.network.CookieSameSite","title":"<code>CookieSameSite</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Represents the cookie's 'SameSite' status:</p> <p>https://tools.ietf.org/html/draft-west-first-party-cookies</p>"},{"location":"reference/cdp/network/#cdp.network.CookieSourceScheme","title":"<code>CookieSourceScheme</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Represents the source scheme of the origin that originally set the cookie.</p> <p>A value of \"Unset\" allows protocol clients to emulate legacy cookie scope for the scheme. This is a temporary ability and it will be removed in the future.</p>"},{"location":"reference/cdp/network/#cdp.network.CorsError","title":"<code>CorsError</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The reason why request was blocked.</p>"},{"location":"reference/cdp/network/#cdp.network.CorsErrorStatus","title":"<code>CorsErrorStatus</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.CrossOriginEmbedderPolicyStatus","title":"<code>CrossOriginEmbedderPolicyStatus</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.CrossOriginEmbedderPolicyValue","title":"<code>CrossOriginEmbedderPolicyValue</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.CrossOriginOpenerPolicyStatus","title":"<code>CrossOriginOpenerPolicyStatus</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.CrossOriginOpenerPolicyValue","title":"<code>CrossOriginOpenerPolicyValue</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.DataReceived","title":"<code>DataReceived</code>  <code>dataclass</code>","text":"<p>Fired when data chunk was received over the network.</p>"},{"location":"reference/cdp/network/#cdp.network.ErrorReason","title":"<code>ErrorReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Network level fetch failure reason.</p>"},{"location":"reference/cdp/network/#cdp.network.EventSourceMessageReceived","title":"<code>EventSourceMessageReceived</code>  <code>dataclass</code>","text":"<p>Fired when EventSource message is received.</p>"},{"location":"reference/cdp/network/#cdp.network.Headers","title":"<code>Headers</code>  <code>dataclass</code>","text":"<p>Request / response headers as keys / values of JSON object.</p>"},{"location":"reference/cdp/network/#cdp.network.IPAddressSpace","title":"<code>IPAddressSpace</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.Initiator","title":"<code>Initiator</code>  <code>dataclass</code>","text":"<p>Information about the request initiator.</p>"},{"location":"reference/cdp/network/#cdp.network.InterceptionId","title":"<code>InterceptionId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique intercepted request identifier.</p>"},{"location":"reference/cdp/network/#cdp.network.InterceptionStage","title":"<code>InterceptionStage</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Stages of the interception to begin intercepting.</p> <p>Request will intercept before the request is sent. Response will intercept after the response is received.</p>"},{"location":"reference/cdp/network/#cdp.network.LoadNetworkResourceOptions","title":"<code>LoadNetworkResourceOptions</code>  <code>dataclass</code>","text":"<p>An options object that may be extended later to better support CORS, CORB and streaming.</p>"},{"location":"reference/cdp/network/#cdp.network.LoadNetworkResourcePageResult","title":"<code>LoadNetworkResourcePageResult</code>  <code>dataclass</code>","text":"<p>An object providing the result of a network resource load.</p>"},{"location":"reference/cdp/network/#cdp.network.LoaderId","title":"<code>LoaderId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique loader identifier.</p>"},{"location":"reference/cdp/network/#cdp.network.LoadingFailed","title":"<code>LoadingFailed</code>  <code>dataclass</code>","text":"<p>Fired when HTTP request has failed to load.</p>"},{"location":"reference/cdp/network/#cdp.network.LoadingFinished","title":"<code>LoadingFinished</code>  <code>dataclass</code>","text":"<p>Fired when HTTP request has finished loading.</p>"},{"location":"reference/cdp/network/#cdp.network.MonotonicTime","title":"<code>MonotonicTime</code>","text":"<p>         Bases: <code>float</code></p> <p>Monotonically increasing time in seconds since an arbitrary point in the past.</p>"},{"location":"reference/cdp/network/#cdp.network.PostDataEntry","title":"<code>PostDataEntry</code>  <code>dataclass</code>","text":"<p>Post data entry for HTTP request.</p>"},{"location":"reference/cdp/network/#cdp.network.PrivateNetworkRequestPolicy","title":"<code>PrivateNetworkRequestPolicy</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.ReportId","title":"<code>ReportId</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.ReportStatus","title":"<code>ReportStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The status of a Reporting API report.</p>"},{"location":"reference/cdp/network/#cdp.network.ReportingApiEndpoint","title":"<code>ReportingApiEndpoint</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.ReportingApiEndpointsChangedForOrigin","title":"<code>ReportingApiEndpointsChangedForOrigin</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.ReportingApiReport","title":"<code>ReportingApiReport</code>  <code>dataclass</code>","text":"<p>An object representing a report generated by the Reporting API.</p>"},{"location":"reference/cdp/network/#cdp.network.ReportingApiReportAdded","title":"<code>ReportingApiReportAdded</code>  <code>dataclass</code>","text":"<p>Is sent whenever a new report is added.</p> <p>And after 'enableReportingApi' for all existing reports.</p>"},{"location":"reference/cdp/network/#cdp.network.ReportingApiReportUpdated","title":"<code>ReportingApiReportUpdated</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.Request","title":"<code>Request</code>  <code>dataclass</code>","text":"<p>HTTP request data.</p>"},{"location":"reference/cdp/network/#cdp.network.RequestId","title":"<code>RequestId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique request identifier.</p>"},{"location":"reference/cdp/network/#cdp.network.RequestIntercepted","title":"<code>RequestIntercepted</code>  <code>dataclass</code>","text":"<p>Details of an intercepted HTTP request, which must be either allowed, blocked, modified or mocked.</p> <p>Deprecated, use Fetch.requestPaused instead.</p>"},{"location":"reference/cdp/network/#cdp.network.RequestPattern","title":"<code>RequestPattern</code>  <code>dataclass</code>","text":"<p>Request pattern for interception.</p>"},{"location":"reference/cdp/network/#cdp.network.RequestServedFromCache","title":"<code>RequestServedFromCache</code>  <code>dataclass</code>","text":"<p>Fired if request ended up loading from cache.</p>"},{"location":"reference/cdp/network/#cdp.network.RequestWillBeSent","title":"<code>RequestWillBeSent</code>  <code>dataclass</code>","text":"<p>Fired when page is about to send HTTP request.</p>"},{"location":"reference/cdp/network/#cdp.network.RequestWillBeSentExtraInfo","title":"<code>RequestWillBeSentExtraInfo</code>  <code>dataclass</code>","text":"<p>Fired when additional information about a requestWillBeSent event is available from the network stack.</p> <p>Not every requestWillBeSent event will have an additional requestWillBeSentExtraInfo fired for it, and there is no guarantee whether requestWillBeSent or requestWillBeSentExtraInfo will be fired first for the same request.</p>"},{"location":"reference/cdp/network/#cdp.network.ResourceChangedPriority","title":"<code>ResourceChangedPriority</code>  <code>dataclass</code>","text":"<p>Fired when resource loading priority is changed.</p>"},{"location":"reference/cdp/network/#cdp.network.ResourcePriority","title":"<code>ResourcePriority</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Loading priority of a resource request.</p>"},{"location":"reference/cdp/network/#cdp.network.ResourceTiming","title":"<code>ResourceTiming</code>  <code>dataclass</code>","text":"<p>Timing information for the request.</p>"},{"location":"reference/cdp/network/#cdp.network.ResourceType","title":"<code>ResourceType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Resource type as it was perceived by the rendering engine.</p>"},{"location":"reference/cdp/network/#cdp.network.Response","title":"<code>Response</code>  <code>dataclass</code>","text":"<p>HTTP response data.</p>"},{"location":"reference/cdp/network/#cdp.network.ResponseReceived","title":"<code>ResponseReceived</code>  <code>dataclass</code>","text":"<p>Fired when HTTP response is available.</p>"},{"location":"reference/cdp/network/#cdp.network.ResponseReceivedExtraInfo","title":"<code>ResponseReceivedExtraInfo</code>  <code>dataclass</code>","text":"<p>Fired when additional information about a responseReceived event is available from the network stack.</p> <p>Not every responseReceived event will have an additional responseReceivedExtraInfo for it, and responseReceivedExtraInfo may be fired before or after responseReceived.</p>"},{"location":"reference/cdp/network/#cdp.network.SecurityDetails","title":"<code>SecurityDetails</code>  <code>dataclass</code>","text":"<p>Security details about a request.</p>"},{"location":"reference/cdp/network/#cdp.network.SecurityIsolationStatus","title":"<code>SecurityIsolationStatus</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.ServiceWorkerResponseSource","title":"<code>ServiceWorkerResponseSource</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Source of serviceworker response.</p>"},{"location":"reference/cdp/network/#cdp.network.SetCookieBlockedReason","title":"<code>SetCookieBlockedReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Types of reasons why a cookie may not be stored from a response.</p>"},{"location":"reference/cdp/network/#cdp.network.SignedCertificateTimestamp","title":"<code>SignedCertificateTimestamp</code>  <code>dataclass</code>","text":"<p>Details of a signed certificate timestamp (SCT).</p>"},{"location":"reference/cdp/network/#cdp.network.SignedExchangeError","title":"<code>SignedExchangeError</code>  <code>dataclass</code>","text":"<p>Information about a signed exchange response.</p>"},{"location":"reference/cdp/network/#cdp.network.SignedExchangeErrorField","title":"<code>SignedExchangeErrorField</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Field type for a signed exchange related error.</p>"},{"location":"reference/cdp/network/#cdp.network.SignedExchangeHeader","title":"<code>SignedExchangeHeader</code>  <code>dataclass</code>","text":"<p>Information about a signed exchange header.</p> <p>https://wicg.github.io/webpackage/draft-yasskin-httpbis-origin-signed-exchanges-impl.html#cbor-representation</p>"},{"location":"reference/cdp/network/#cdp.network.SignedExchangeInfo","title":"<code>SignedExchangeInfo</code>  <code>dataclass</code>","text":"<p>Information about a signed exchange response.</p>"},{"location":"reference/cdp/network/#cdp.network.SignedExchangeReceived","title":"<code>SignedExchangeReceived</code>  <code>dataclass</code>","text":"<p>Fired when a signed exchange was received over the network.</p>"},{"location":"reference/cdp/network/#cdp.network.SignedExchangeSignature","title":"<code>SignedExchangeSignature</code>  <code>dataclass</code>","text":"<p>Information about a signed exchange signature.</p> <p>https://wicg.github.io/webpackage/draft-yasskin-httpbis-origin-signed-exchanges-impl.html#rfc.section.3.1</p>"},{"location":"reference/cdp/network/#cdp.network.SubresourceWebBundleInnerResponseError","title":"<code>SubresourceWebBundleInnerResponseError</code>  <code>dataclass</code>","text":"<p>Fired when request for resources within a .wbn file failed.</p>"},{"location":"reference/cdp/network/#cdp.network.SubresourceWebBundleInnerResponseParsed","title":"<code>SubresourceWebBundleInnerResponseParsed</code>  <code>dataclass</code>","text":"<p>Fired when handling requests for resources within a .wbn file.</p> <p>Note: this will only be fired for resources that are requested by the webpage.</p>"},{"location":"reference/cdp/network/#cdp.network.SubresourceWebBundleMetadataError","title":"<code>SubresourceWebBundleMetadataError</code>  <code>dataclass</code>","text":"<p>Fired once when parsing the .wbn file has failed.</p>"},{"location":"reference/cdp/network/#cdp.network.SubresourceWebBundleMetadataReceived","title":"<code>SubresourceWebBundleMetadataReceived</code>  <code>dataclass</code>","text":"<p>Fired once when parsing the .wbn file has succeeded.</p> <p>The event contains the information about the web bundle contents.</p>"},{"location":"reference/cdp/network/#cdp.network.TimeSinceEpoch","title":"<code>TimeSinceEpoch</code>","text":"<p>         Bases: <code>float</code></p> <p>UTC time in seconds, counted from January 1, 1970.</p>"},{"location":"reference/cdp/network/#cdp.network.TrustTokenOperationDone","title":"<code>TrustTokenOperationDone</code>  <code>dataclass</code>","text":"<p>Fired exactly once for each Trust Token operation.</p> <p>Depending on the type of the operation and whether the operation succeeded or failed, the event is fired before the corresponding request was sent or after the response was received.</p>"},{"location":"reference/cdp/network/#cdp.network.TrustTokenOperationType","title":"<code>TrustTokenOperationType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/network/#cdp.network.TrustTokenParams","title":"<code>TrustTokenParams</code>  <code>dataclass</code>","text":"<p>Determines what type of Trust Token operation is executed and depending on the type, some additional parameters.</p> <p>The values are specified in third_party/blink/renderer/core/fetch/trust_token.idl.</p>"},{"location":"reference/cdp/network/#cdp.network.WebSocketClosed","title":"<code>WebSocketClosed</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket is closed.</p>"},{"location":"reference/cdp/network/#cdp.network.WebSocketCreated","title":"<code>WebSocketCreated</code>  <code>dataclass</code>","text":"<p>Fired upon WebSocket creation.</p>"},{"location":"reference/cdp/network/#cdp.network.WebSocketFrame","title":"<code>WebSocketFrame</code>  <code>dataclass</code>","text":"<p>WebSocket message data.</p> <p>This represents an entire WebSocket message, not just a fragmented frame as the name suggests.</p>"},{"location":"reference/cdp/network/#cdp.network.WebSocketFrameError","title":"<code>WebSocketFrameError</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket message error occurs.</p>"},{"location":"reference/cdp/network/#cdp.network.WebSocketFrameReceived","title":"<code>WebSocketFrameReceived</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket message is received.</p>"},{"location":"reference/cdp/network/#cdp.network.WebSocketFrameSent","title":"<code>WebSocketFrameSent</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket message is sent.</p>"},{"location":"reference/cdp/network/#cdp.network.WebSocketHandshakeResponseReceived","title":"<code>WebSocketHandshakeResponseReceived</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket handshake response becomes available.</p>"},{"location":"reference/cdp/network/#cdp.network.WebSocketRequest","title":"<code>WebSocketRequest</code>  <code>dataclass</code>","text":"<p>WebSocket request data.</p>"},{"location":"reference/cdp/network/#cdp.network.WebSocketResponse","title":"<code>WebSocketResponse</code>  <code>dataclass</code>","text":"<p>WebSocket response data.</p>"},{"location":"reference/cdp/network/#cdp.network.WebSocketWillSendHandshakeRequest","title":"<code>WebSocketWillSendHandshakeRequest</code>  <code>dataclass</code>","text":"<p>Fired when WebSocket is about to initiate handshake.</p>"},{"location":"reference/cdp/network/#cdp.network.WebTransportClosed","title":"<code>WebTransportClosed</code>  <code>dataclass</code>","text":"<p>Fired when WebTransport is disposed.</p>"},{"location":"reference/cdp/network/#cdp.network.WebTransportConnectionEstablished","title":"<code>WebTransportConnectionEstablished</code>  <code>dataclass</code>","text":"<p>Fired when WebTransport handshake is finished.</p>"},{"location":"reference/cdp/network/#cdp.network.WebTransportCreated","title":"<code>WebTransportCreated</code>  <code>dataclass</code>","text":"<p>Fired upon WebTransport creation.</p>"},{"location":"reference/cdp/network/#cdp.network.can_clear_browser_cache","title":"<code>can_clear_browser_cache()</code>  <code>async</code>","text":"<p>Tells whether clearing browser cache is supported.</p>"},{"location":"reference/cdp/network/#cdp.network.can_clear_browser_cache--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.can_clear_browser_cookies","title":"<code>can_clear_browser_cookies()</code>  <code>async</code>","text":"<p>Tells whether clearing browser cookies is supported.</p>"},{"location":"reference/cdp/network/#cdp.network.can_clear_browser_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.can_emulate_network_conditions","title":"<code>can_emulate_network_conditions()</code>  <code>async</code>","text":"<p>Tells whether emulation of network conditions is supported.</p>"},{"location":"reference/cdp/network/#cdp.network.can_emulate_network_conditions--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.clear_accepted_encodings_override","title":"<code>clear_accepted_encodings_override()</code>  <code>async</code>","text":"<p>Clears accepted encodings set by setAcceptedEncodings # noqa.</p>"},{"location":"reference/cdp/network/#cdp.network.clear_browser_cache","title":"<code>clear_browser_cache()</code>  <code>async</code>","text":"<p>Clears browser cache.</p>"},{"location":"reference/cdp/network/#cdp.network.clear_browser_cache--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.clear_browser_cookies","title":"<code>clear_browser_cookies()</code>  <code>async</code>","text":"<p>Clears browser cookies.</p>"},{"location":"reference/cdp/network/#cdp.network.clear_browser_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.continue_intercepted_request","title":"<code>continue_intercepted_request()</code>  <code>async</code>","text":"<p>Response to Network.requestIntercepted which either modifies the request to continue with any modifications, or blocks it, or completes it with the provided response bytes.</p> <p>If a network fetch occurs as a result which encounters a redirect an additional Network.requestIntercepted event will be sent with the same InterceptionId. Deprecated, use Fetch.continueRequest, Fetch.fulfillRequest and Fetch.failRequest instead. # noqa</p>"},{"location":"reference/cdp/network/#cdp.network.delete_cookies","title":"<code>delete_cookies()</code>  <code>async</code>","text":"<p>Deletes browser cookies with matching name and url or domain/path pair.</p>"},{"location":"reference/cdp/network/#cdp.network.delete_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables network tracking, prevents network events from being sent to the client.</p>"},{"location":"reference/cdp/network/#cdp.network.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.emulate_network_conditions","title":"<code>emulate_network_conditions()</code>  <code>async</code>","text":"<p>Activates emulation of network conditions.</p>"},{"location":"reference/cdp/network/#cdp.network.emulate_network_conditions--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables network tracking, network events will now be delivered to the client.</p>"},{"location":"reference/cdp/network/#cdp.network.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.enable_reporting_api","title":"<code>enable_reporting_api()</code>  <code>async</code>","text":"<p>Enables tracking for the Reporting API, events generated by the Reporting API will now be delivered to the client.</p> <p>Enabling triggers 'reportingApiReportAdded' for all existing reports. # noqa</p>"},{"location":"reference/cdp/network/#cdp.network.get_all_cookies","title":"<code>get_all_cookies()</code>  <code>async</code>","text":"<p>Returns all browser cookies.</p> <p>Depending on the backend support, will return detailed cookie information in the <code>cookies</code> field. Deprecated. Use Storage.getCookies instead. # noqa</p>"},{"location":"reference/cdp/network/#cdp.network.get_certificate","title":"<code>get_certificate()</code>  <code>async</code>","text":"<p>Returns the DER-encoded certificate.</p>"},{"location":"reference/cdp/network/#cdp.network.get_certificate--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.get_cookies","title":"<code>get_cookies()</code>  <code>async</code>","text":"<p>Returns all browser cookies for the current URL.</p> <p>Depending on the backend support, will return detailed cookie information in the <code>cookies</code> field. # noqa</p>"},{"location":"reference/cdp/network/#cdp.network.get_request_post_data","title":"<code>get_request_post_data()</code>  <code>async</code>","text":"<p>Returns post data sent with the request.</p> <p>Returns an error when no data was sent with the request. # noqa</p>"},{"location":"reference/cdp/network/#cdp.network.get_response_body","title":"<code>get_response_body()</code>  <code>async</code>","text":"<p>Returns content served for the given request.</p>"},{"location":"reference/cdp/network/#cdp.network.get_response_body--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.get_response_body_for_interception","title":"<code>get_response_body_for_interception()</code>  <code>async</code>","text":"<p>Returns content served for the given currently intercepted request.</p>"},{"location":"reference/cdp/network/#cdp.network.get_response_body_for_interception--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.get_security_isolation_status","title":"<code>get_security_isolation_status()</code>  <code>async</code>","text":"<p>Returns information about the COEP/COOP isolation status.</p>"},{"location":"reference/cdp/network/#cdp.network.get_security_isolation_status--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.load_network_resource","title":"<code>load_network_resource()</code>  <code>async</code>","text":"<p>Fetches the resource and returns the content.</p>"},{"location":"reference/cdp/network/#cdp.network.load_network_resource--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.replay_xhr","title":"<code>replay_xhr()</code>  <code>async</code>","text":"<p>This method sends a new XMLHttpRequest which is identical to the original one.</p> <p>The following parameters should be identical: method, url, async, request body, extra headers, withCredentials attribute, user, password. # noqa</p>"},{"location":"reference/cdp/network/#cdp.network.search_in_response_body","title":"<code>search_in_response_body()</code>  <code>async</code>","text":"<p>Searches for given string in response content.</p>"},{"location":"reference/cdp/network/#cdp.network.search_in_response_body--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.set_accepted_encodings","title":"<code>set_accepted_encodings()</code>  <code>async</code>","text":"<p>Sets a list of content encodings that will be accepted.</p> <p>Empty list means no encoding is accepted. # noqa</p>"},{"location":"reference/cdp/network/#cdp.network.set_attach_debug_stack","title":"<code>set_attach_debug_stack()</code>  <code>async</code>","text":"<p>Specifies whether to attach a page script stack id in requests # noqa.</p>"},{"location":"reference/cdp/network/#cdp.network.set_blocked_ur_ls","title":"<code>set_blocked_ur_ls()</code>  <code>async</code>","text":"<p>Blocks URLs from loading.</p>"},{"location":"reference/cdp/network/#cdp.network.set_blocked_ur_ls--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.set_bypass_service_worker","title":"<code>set_bypass_service_worker()</code>  <code>async</code>","text":"<p>Toggles ignoring of service worker for each request.</p>"},{"location":"reference/cdp/network/#cdp.network.set_bypass_service_worker--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.set_cache_disabled","title":"<code>set_cache_disabled()</code>  <code>async</code>","text":"<p>Toggles ignoring cache for each request.</p> <p>If <code>true</code>, cache will not be used. # noqa</p>"},{"location":"reference/cdp/network/#cdp.network.set_cookie","title":"<code>set_cookie()</code>  <code>async</code>","text":"<p>Sets a cookie with the given cookie data; may overwrite equivalent cookies if they exist.</p>"},{"location":"reference/cdp/network/#cdp.network.set_cookie--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.set_cookies","title":"<code>set_cookies()</code>  <code>async</code>","text":"<p>Sets given cookies.</p>"},{"location":"reference/cdp/network/#cdp.network.set_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.set_extra_http_headers","title":"<code>set_extra_http_headers()</code>  <code>async</code>","text":"<p>Specifies whether to always send extra HTTP headers with the requests from this page.</p>"},{"location":"reference/cdp/network/#cdp.network.set_extra_http_headers--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.set_request_interception","title":"<code>set_request_interception()</code>  <code>async</code>","text":"<p>Sets the requests to intercept that match the provided patterns and optionally resource types.</p> <p>Deprecated, please use Fetch.enable instead. # noqa</p>"},{"location":"reference/cdp/network/#cdp.network.set_user_agent_override","title":"<code>set_user_agent_override()</code>  <code>async</code>","text":"<p>Allows overriding user agent with the given string.</p>"},{"location":"reference/cdp/network/#cdp.network.set_user_agent_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/network/#cdp.network.take_response_body_for_interception_as_stream","title":"<code>take_response_body_for_interception_as_stream()</code>  <code>async</code>","text":"<p>Returns a handle to the stream representing the response body.</p> <p>Note that after this command, the intercepted request can't be continued as is -- you either need to cancel it or to provide the response body. The stream only supports sequential read, IO.read will fail if the position is specified.</p>"},{"location":"reference/cdp/network/#cdp.network.take_response_body_for_interception_as_stream--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/","title":"Overlay","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.BoxStyle","title":"<code>BoxStyle</code>  <code>dataclass</code>","text":"<p>Style information for drawing a box.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.ColorFormat","title":"<code>ColorFormat</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.ContainerQueryContainerHighlightConfig","title":"<code>ContainerQueryContainerHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.ContainerQueryHighlightConfig","title":"<code>ContainerQueryHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.ContrastAlgorithm","title":"<code>ContrastAlgorithm</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.FlexContainerHighlightConfig","title":"<code>FlexContainerHighlightConfig</code>  <code>dataclass</code>","text":"<p>Configuration data for the highlighting of Flex container elements.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.FlexItemHighlightConfig","title":"<code>FlexItemHighlightConfig</code>  <code>dataclass</code>","text":"<p>Configuration data for the highlighting of Flex item elements.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.FlexNodeHighlightConfig","title":"<code>FlexNodeHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.GridHighlightConfig","title":"<code>GridHighlightConfig</code>  <code>dataclass</code>","text":"<p>Configuration data for the highlighting of Grid elements.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.GridNodeHighlightConfig","title":"<code>GridNodeHighlightConfig</code>  <code>dataclass</code>","text":"<p>Configurations for Persistent Grid Highlight.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.HighlightConfig","title":"<code>HighlightConfig</code>  <code>dataclass</code>","text":"<p>Configuration data for the highlighting of page elements.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.HingeConfig","title":"<code>HingeConfig</code>  <code>dataclass</code>","text":"<p>Configuration for dual screen hinge.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.InspectMode","title":"<code>InspectMode</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.InspectModeCanceled","title":"<code>InspectModeCanceled</code>  <code>dataclass</code>","text":"<p>Fired when user cancels the inspect mode.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.InspectNodeRequested","title":"<code>InspectNodeRequested</code>  <code>dataclass</code>","text":"<p>Fired when the node should be inspected.</p> <p>This happens after call to <code>setInspectMode</code> or when user manually inspects an element.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.IsolatedElementHighlightConfig","title":"<code>IsolatedElementHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.IsolationModeHighlightConfig","title":"<code>IsolationModeHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.LineStyle","title":"<code>LineStyle</code>  <code>dataclass</code>","text":"<p>Style information for drawing a line.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.NodeHighlightRequested","title":"<code>NodeHighlightRequested</code>  <code>dataclass</code>","text":"<p>Fired when the node should be highlighted.</p> <p>This happens after call to <code>setInspectMode</code>.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.ScreenshotRequested","title":"<code>ScreenshotRequested</code>  <code>dataclass</code>","text":"<p>Fired when user asks to capture screenshot of some area on the page.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.ScrollSnapContainerHighlightConfig","title":"<code>ScrollSnapContainerHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.ScrollSnapHighlightConfig","title":"<code>ScrollSnapHighlightConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.SourceOrderConfig","title":"<code>SourceOrderConfig</code>  <code>dataclass</code>","text":"<p>Configuration data for drawing the source order of an elements children.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables domain notifications.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables domain notifications.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.get_grid_highlight_objects_for_test","title":"<code>get_grid_highlight_objects_for_test()</code>  <code>async</code>","text":"<p>For Persistent Grid testing.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.get_grid_highlight_objects_for_test--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.get_highlight_object_for_test","title":"<code>get_highlight_object_for_test()</code>  <code>async</code>","text":"<p>For testing.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.get_highlight_object_for_test--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.get_source_order_highlight_object_for_test","title":"<code>get_source_order_highlight_object_for_test()</code>  <code>async</code>","text":"<p>For Source Order Viewer testing.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.get_source_order_highlight_object_for_test--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.hide_highlight","title":"<code>hide_highlight()</code>  <code>async</code>","text":"<p>Hides any highlight.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.hide_highlight--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.highlight_frame","title":"<code>highlight_frame()</code>  <code>async</code>","text":"<p>Highlights owner element of the frame with given id.</p> <p>Deprecated: Doesn't work reliablity and cannot be fixed due to process separatation (the owner node might be in a different process). Determine the owner node in the client and use highlightNode. # noqa</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.highlight_node","title":"<code>highlight_node()</code>  <code>async</code>","text":"<p>Highlights DOM node with given id or with the given JavaScript object wrapper.</p> <p>Either nodeId or objectId must be specified. # noqa</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.highlight_quad","title":"<code>highlight_quad()</code>  <code>async</code>","text":"<p>Highlights given quad.</p> <p>Coordinates are absolute with respect to the main frame viewport. # noqa</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.highlight_rect","title":"<code>highlight_rect()</code>  <code>async</code>","text":"<p>Highlights given rectangle.</p> <p>Coordinates are absolute with respect to the main frame viewport. # noqa</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.highlight_source_order","title":"<code>highlight_source_order()</code>  <code>async</code>","text":"<p>Highlights the source order of the children of the DOM node with given id or with the given JavaScript object wrapper.</p> <p>Either nodeId or objectId must be specified. # noqa</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_inspect_mode","title":"<code>set_inspect_mode()</code>  <code>async</code>","text":"<p>Enters the 'inspect' mode.</p> <p>In this mode, elements that user is hovering over are highlighted. Backend then generates 'inspectNodeRequested' event upon element selection. # noqa</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_paused_in_debugger_message","title":"<code>set_paused_in_debugger_message()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_paused_in_debugger_message--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_ad_highlights","title":"<code>set_show_ad_highlights()</code>  <code>async</code>","text":"<p>Highlights owner element of all frames detected to be ads.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_ad_highlights--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_container_query_overlays","title":"<code>set_show_container_query_overlays()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_container_query_overlays--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_debug_borders","title":"<code>set_show_debug_borders()</code>  <code>async</code>","text":"<p>Requests that backend shows debug borders on layers # noqa.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_flex_overlays","title":"<code>set_show_flex_overlays()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_flex_overlays--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_fps_counter","title":"<code>set_show_fps_counter()</code>  <code>async</code>","text":"<p>Requests that backend shows the FPS counter # noqa.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_grid_overlays","title":"<code>set_show_grid_overlays()</code>  <code>async</code>","text":"<p>Highlight multiple elements with the CSS Grid overlay.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_grid_overlays--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_hinge","title":"<code>set_show_hinge()</code>  <code>async</code>","text":"<p>Add a dual screen device hinge # noqa.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_hit_test_borders","title":"<code>set_show_hit_test_borders()</code>  <code>async</code>","text":"<p>Deprecated, no longer has any effect.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_hit_test_borders--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_isolated_elements","title":"<code>set_show_isolated_elements()</code>  <code>async</code>","text":"<p>Show elements in isolation mode with overlays.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_isolated_elements--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_layout_shift_regions","title":"<code>set_show_layout_shift_regions()</code>  <code>async</code>","text":"<p>Requests that backend shows layout shift regions # noqa.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_paint_rects","title":"<code>set_show_paint_rects()</code>  <code>async</code>","text":"<p>Requests that backend shows paint rectangles # noqa.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_scroll_bottleneck_rects","title":"<code>set_show_scroll_bottleneck_rects()</code>  <code>async</code>","text":"<p>Requests that backend shows scroll bottleneck rects # noqa.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_scroll_snap_overlays","title":"<code>set_show_scroll_snap_overlays()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_scroll_snap_overlays--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_viewport_size_on_resize","title":"<code>set_show_viewport_size_on_resize()</code>  <code>async</code>","text":"<p>Paints viewport size upon main frame resize.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_viewport_size_on_resize--noqa","title":"noqa","text":""},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_web_vitals","title":"<code>set_show_web_vitals()</code>  <code>async</code>","text":"<p>Request that backend shows an overlay with web vital metrics.</p>"},{"location":"reference/cdp/overlay/#cdp.overlay.set_show_web_vitals--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/","title":"Page","text":""},{"location":"reference/cdp/page/#cdp.page.AdFrameExplanation","title":"<code>AdFrameExplanation</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.AdFrameStatus","title":"<code>AdFrameStatus</code>  <code>dataclass</code>","text":"<p>Indicates whether a frame has been identified as an ad and why.</p>"},{"location":"reference/cdp/page/#cdp.page.AdFrameType","title":"<code>AdFrameType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Indicates whether a frame has been identified as an ad.</p>"},{"location":"reference/cdp/page/#cdp.page.AdScriptId","title":"<code>AdScriptId</code>  <code>dataclass</code>","text":"<p>Identifies the bottom-most script which caused the frame to be labelled as an ad.</p>"},{"location":"reference/cdp/page/#cdp.page.AppManifestError","title":"<code>AppManifestError</code>  <code>dataclass</code>","text":"<p>Error while paring app manifest.</p>"},{"location":"reference/cdp/page/#cdp.page.AppManifestParsedProperties","title":"<code>AppManifestParsedProperties</code>  <code>dataclass</code>","text":"<p>Parsed app manifest properties.</p>"},{"location":"reference/cdp/page/#cdp.page.AutoResponseMode","title":"<code>AutoResponseMode</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible auto-reponse for permisison / prompt dialogs.</p>"},{"location":"reference/cdp/page/#cdp.page.BackForwardCacheNotRestoredExplanation","title":"<code>BackForwardCacheNotRestoredExplanation</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.BackForwardCacheNotRestoredExplanationTree","title":"<code>BackForwardCacheNotRestoredExplanationTree</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.BackForwardCacheNotRestoredReason","title":"<code>BackForwardCacheNotRestoredReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>List of not restored reasons for back-forward cache.</p>"},{"location":"reference/cdp/page/#cdp.page.BackForwardCacheNotRestoredReasonType","title":"<code>BackForwardCacheNotRestoredReasonType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Types of not restored reasons for back-forward cache.</p>"},{"location":"reference/cdp/page/#cdp.page.BackForwardCacheNotUsed","title":"<code>BackForwardCacheNotUsed</code>  <code>dataclass</code>","text":"<p>Fired for failed bfcache history navigations if BackForwardCache feature is enabled.</p> <p>Do not assume any ordering with the Page.frameNavigated event. This event is fired only for main-frame history navigation where the document changes (non-same-document navigations), when bfcache navigation fails.</p>"},{"location":"reference/cdp/page/#cdp.page.ClientNavigationDisposition","title":"<code>ClientNavigationDisposition</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.ClientNavigationReason","title":"<code>ClientNavigationReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.CompilationCacheParams","title":"<code>CompilationCacheParams</code>  <code>dataclass</code>","text":"<p>Per-script compilation cache parameters for <code>Page.produceCompilationCache</code></p>"},{"location":"reference/cdp/page/#cdp.page.CompilationCacheProduced","title":"<code>CompilationCacheProduced</code>  <code>dataclass</code>","text":"<p>Issued for every compilation cache generated.</p> <p>Is only available if Page.setGenerateCompilationCache is enabled.</p>"},{"location":"reference/cdp/page/#cdp.page.CrossOriginIsolatedContextType","title":"<code>CrossOriginIsolatedContextType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Indicates whether the frame is cross-origin isolated and why it is the case.</p>"},{"location":"reference/cdp/page/#cdp.page.DialogType","title":"<code>DialogType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Javascript dialog type.</p>"},{"location":"reference/cdp/page/#cdp.page.DocumentOpened","title":"<code>DocumentOpened</code>  <code>dataclass</code>","text":"<p>Fired when opening document to write to.</p>"},{"location":"reference/cdp/page/#cdp.page.DomContentEventFired","title":"<code>DomContentEventFired</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.DownloadProgress","title":"<code>DownloadProgress</code>  <code>dataclass</code>","text":"<p>Fired when download makes progress.</p> <p>Last call has |done| == true. Deprecated. Use Browser.downloadProgress instead.</p>"},{"location":"reference/cdp/page/#cdp.page.DownloadWillBegin","title":"<code>DownloadWillBegin</code>  <code>dataclass</code>","text":"<p>Fired when page is about to start a download.</p> <p>Deprecated. Use Browser.downloadWillBegin instead.</p>"},{"location":"reference/cdp/page/#cdp.page.FileChooserOpened","title":"<code>FileChooserOpened</code>  <code>dataclass</code>","text":"<p>Emitted only when <code>page.interceptFileChooser</code> is enabled.</p>"},{"location":"reference/cdp/page/#cdp.page.FontFamilies","title":"<code>FontFamilies</code>  <code>dataclass</code>","text":"<p>Generic font families collection.</p>"},{"location":"reference/cdp/page/#cdp.page.FontSizes","title":"<code>FontSizes</code>  <code>dataclass</code>","text":"<p>Default font sizes.</p>"},{"location":"reference/cdp/page/#cdp.page.Frame","title":"<code>Frame</code>  <code>dataclass</code>","text":"<p>Information about the Frame on the page.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameAttached","title":"<code>FrameAttached</code>  <code>dataclass</code>","text":"<p>Fired when frame has been attached to its parent.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameClearedScheduledNavigation","title":"<code>FrameClearedScheduledNavigation</code>  <code>dataclass</code>","text":"<p>Fired when frame no longer has a scheduled navigation.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameDetached","title":"<code>FrameDetached</code>  <code>dataclass</code>","text":"<p>Fired when frame has been detached from its parent.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameId","title":"<code>FrameId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique frame identifier.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameNavigated","title":"<code>FrameNavigated</code>  <code>dataclass</code>","text":"<p>Fired once navigation of the frame has completed.</p> <p>Frame is now associated with the new loader.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameRequestedNavigation","title":"<code>FrameRequestedNavigation</code>  <code>dataclass</code>","text":"<p>Fired when a renderer-initiated navigation is requested.</p> <p>Navigation may still be cancelled after the event is issued.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameResized","title":"<code>FrameResized</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameResource","title":"<code>FrameResource</code>  <code>dataclass</code>","text":"<p>Information about the Resource on the page.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameResourceTree","title":"<code>FrameResourceTree</code>  <code>dataclass</code>","text":"<p>Information about the Frame hierarchy along with their cached resources.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameScheduledNavigation","title":"<code>FrameScheduledNavigation</code>  <code>dataclass</code>","text":"<p>Fired when frame schedules a potential navigation.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameStartedLoading","title":"<code>FrameStartedLoading</code>  <code>dataclass</code>","text":"<p>Fired when frame has started loading.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameStoppedLoading","title":"<code>FrameStoppedLoading</code>  <code>dataclass</code>","text":"<p>Fired when frame has stopped loading.</p>"},{"location":"reference/cdp/page/#cdp.page.FrameTree","title":"<code>FrameTree</code>  <code>dataclass</code>","text":"<p>Information about the Frame hierarchy.</p>"},{"location":"reference/cdp/page/#cdp.page.GatedAPIFeatures","title":"<code>GatedAPIFeatures</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.InstallabilityError","title":"<code>InstallabilityError</code>  <code>dataclass</code>","text":"<p>The installability error.</p>"},{"location":"reference/cdp/page/#cdp.page.InstallabilityErrorArgument","title":"<code>InstallabilityErrorArgument</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.InterstitialHidden","title":"<code>InterstitialHidden</code>  <code>dataclass</code>","text":"<p>Fired when interstitial page was hidden.</p>"},{"location":"reference/cdp/page/#cdp.page.InterstitialShown","title":"<code>InterstitialShown</code>  <code>dataclass</code>","text":"<p>Fired when interstitial page was shown.</p>"},{"location":"reference/cdp/page/#cdp.page.JavascriptDialogClosed","title":"<code>JavascriptDialogClosed</code>  <code>dataclass</code>","text":"<p>Fired when a JavaScript initiated dialog (alert, confirm, prompt, or onbeforeunload) has been closed.</p>"},{"location":"reference/cdp/page/#cdp.page.JavascriptDialogOpening","title":"<code>JavascriptDialogOpening</code>  <code>dataclass</code>","text":"<p>Fired when a JavaScript initiated dialog (alert, confirm, prompt, or onbeforeunload) is about to open.</p>"},{"location":"reference/cdp/page/#cdp.page.LayoutViewport","title":"<code>LayoutViewport</code>  <code>dataclass</code>","text":"<p>Layout viewport position and dimensions.</p>"},{"location":"reference/cdp/page/#cdp.page.LifecycleEvent","title":"<code>LifecycleEvent</code>  <code>dataclass</code>","text":"<p>Fired for top level page lifecycle events such as navigation, load, paint, etc.</p>"},{"location":"reference/cdp/page/#cdp.page.LoadEventFired","title":"<code>LoadEventFired</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.NavigatedWithinDocument","title":"<code>NavigatedWithinDocument</code>  <code>dataclass</code>","text":"<p>Fired when same-document navigation happens, e.g. due to history API usage or anchor navigation.</p>"},{"location":"reference/cdp/page/#cdp.page.NavigationEntry","title":"<code>NavigationEntry</code>  <code>dataclass</code>","text":"<p>Navigation history entry.</p>"},{"location":"reference/cdp/page/#cdp.page.NavigationType","title":"<code>NavigationType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The type of a frameNavigated event.</p>"},{"location":"reference/cdp/page/#cdp.page.OriginTrial","title":"<code>OriginTrial</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.OriginTrialStatus","title":"<code>OriginTrialStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Status for an Origin Trial.</p>"},{"location":"reference/cdp/page/#cdp.page.OriginTrialToken","title":"<code>OriginTrialToken</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.OriginTrialTokenStatus","title":"<code>OriginTrialTokenStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Origin Trial(https://www.chromium.org/blink/origin-trials) support.</p> <p>Status for an Origin Trial token.</p>"},{"location":"reference/cdp/page/#cdp.page.OriginTrialTokenWithStatus","title":"<code>OriginTrialTokenWithStatus</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.OriginTrialUsageRestriction","title":"<code>OriginTrialUsageRestriction</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.PermissionsPolicyBlockLocator","title":"<code>PermissionsPolicyBlockLocator</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.PermissionsPolicyBlockReason","title":"<code>PermissionsPolicyBlockReason</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Reason for a permissions policy feature to be disabled.</p>"},{"location":"reference/cdp/page/#cdp.page.PermissionsPolicyFeature","title":"<code>PermissionsPolicyFeature</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>All Permissions Policy features.</p> <p>This enum should match the one defined in third_party/blink/renderer/core/permissions_policy/permissions_policy_features.json5.</p>"},{"location":"reference/cdp/page/#cdp.page.PermissionsPolicyFeatureState","title":"<code>PermissionsPolicyFeatureState</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.ReferrerPolicy","title":"<code>ReferrerPolicy</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The referring-policy used for the navigation.</p>"},{"location":"reference/cdp/page/#cdp.page.ScreencastFrame","title":"<code>ScreencastFrame</code>  <code>dataclass</code>","text":"<p>Compressed image data requested by the <code>startScreencast</code>.</p>"},{"location":"reference/cdp/page/#cdp.page.ScreencastFrameMetadata","title":"<code>ScreencastFrameMetadata</code>  <code>dataclass</code>","text":"<p>Screencast frame metadata.</p>"},{"location":"reference/cdp/page/#cdp.page.ScreencastVisibilityChanged","title":"<code>ScreencastVisibilityChanged</code>  <code>dataclass</code>","text":"<p>Fired when the page with currently enabled screencast was shown or hidden `.</p>"},{"location":"reference/cdp/page/#cdp.page.ScriptFontFamilies","title":"<code>ScriptFontFamilies</code>  <code>dataclass</code>","text":"<p>Font families collection for a script.</p>"},{"location":"reference/cdp/page/#cdp.page.ScriptIdentifier","title":"<code>ScriptIdentifier</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique script identifier.</p>"},{"location":"reference/cdp/page/#cdp.page.SecureContextType","title":"<code>SecureContextType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Indicates whether the frame is a secure context and why it is the case.</p>"},{"location":"reference/cdp/page/#cdp.page.TransitionType","title":"<code>TransitionType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Transition type.</p>"},{"location":"reference/cdp/page/#cdp.page.Viewport","title":"<code>Viewport</code>  <code>dataclass</code>","text":"<p>Viewport for capturing screenshot.</p>"},{"location":"reference/cdp/page/#cdp.page.VisualViewport","title":"<code>VisualViewport</code>  <code>dataclass</code>","text":"<p>Visual viewport position, dimensions, and scale.</p>"},{"location":"reference/cdp/page/#cdp.page.WindowOpen","title":"<code>WindowOpen</code>  <code>dataclass</code>","text":"<p>Fired when a new window is going to be opened, via window.open(), link click, form submission, etc.</p>"},{"location":"reference/cdp/page/#cdp.page.add_compilation_cache","title":"<code>add_compilation_cache()</code>  <code>async</code>","text":"<p>Seeds compilation cache for given url.</p> <p>Compilation cache does not survive cross-process navigation. # noqa</p>"},{"location":"reference/cdp/page/#cdp.page.add_script_to_evaluate_on_load","title":"<code>add_script_to_evaluate_on_load()</code>  <code>async</code>","text":"<p>Deprecated, please use addScriptToEvaluateOnNewDocument instead.</p>"},{"location":"reference/cdp/page/#cdp.page.add_script_to_evaluate_on_load--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.add_script_to_evaluate_on_new_document","title":"<code>add_script_to_evaluate_on_new_document()</code>  <code>async</code>","text":"<p>Evaluates given script in every frame upon creation (before loading frame's scripts).</p>"},{"location":"reference/cdp/page/#cdp.page.add_script_to_evaluate_on_new_document--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.bring_to_front","title":"<code>bring_to_front()</code>  <code>async</code>","text":"<p>Brings page to front (activates tab).</p>"},{"location":"reference/cdp/page/#cdp.page.bring_to_front--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.capture_screenshot","title":"<code>capture_screenshot()</code>  <code>async</code>","text":"<p>Capture page screenshot.</p>"},{"location":"reference/cdp/page/#cdp.page.capture_screenshot--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.capture_snapshot","title":"<code>capture_snapshot()</code>  <code>async</code>","text":"<p>Returns a snapshot of the page as a string.</p> <p>For MHTML format, the serialization includes iframes, shadow DOM, external resources, and element-inline styles. # noqa</p>"},{"location":"reference/cdp/page/#cdp.page.clear_compilation_cache","title":"<code>clear_compilation_cache()</code>  <code>async</code>","text":"<p>Clears seeded compilation cache.</p>"},{"location":"reference/cdp/page/#cdp.page.clear_compilation_cache--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.clear_device_metrics_override","title":"<code>clear_device_metrics_override()</code>  <code>async</code>","text":"<p>Clears the overridden device metrics.</p>"},{"location":"reference/cdp/page/#cdp.page.clear_device_metrics_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.clear_device_orientation_override","title":"<code>clear_device_orientation_override()</code>  <code>async</code>","text":"<p>Clears the overridden Device Orientation.</p>"},{"location":"reference/cdp/page/#cdp.page.clear_device_orientation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.clear_geolocation_override","title":"<code>clear_geolocation_override()</code>  <code>async</code>","text":"<p>Clears the overridden Geolocation Position and Error.</p>"},{"location":"reference/cdp/page/#cdp.page.clear_geolocation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.close","title":"<code>close()</code>  <code>async</code>","text":"<p>Tries to close page, running its beforeunload hooks, if any.</p>"},{"location":"reference/cdp/page/#cdp.page.close--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.crash","title":"<code>crash()</code>  <code>async</code>","text":"<p>Crashes renderer on the IO thread, generates minidumps.</p>"},{"location":"reference/cdp/page/#cdp.page.crash--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.create_isolated_world","title":"<code>create_isolated_world()</code>  <code>async</code>","text":"<p>Creates an isolated world for the given frame.</p>"},{"location":"reference/cdp/page/#cdp.page.create_isolated_world--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.delete_cookie","title":"<code>delete_cookie()</code>  <code>async</code>","text":"<p>Deletes browser cookie with given name, domain and path.</p>"},{"location":"reference/cdp/page/#cdp.page.delete_cookie--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables page domain notifications.</p>"},{"location":"reference/cdp/page/#cdp.page.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables page domain notifications.</p>"},{"location":"reference/cdp/page/#cdp.page.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.generate_test_report","title":"<code>generate_test_report()</code>  <code>async</code>","text":"<p>Generates a report for testing.</p>"},{"location":"reference/cdp/page/#cdp.page.generate_test_report--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.get_ad_script_id","title":"<code>get_ad_script_id()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.get_ad_script_id--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.get_app_id","title":"<code>get_app_id()</code>  <code>async</code>","text":"<p>Returns the unique (PWA) app id.</p> <p>Only returns values if the feature flag 'WebAppEnableManifestId' is enabled # noqa</p>"},{"location":"reference/cdp/page/#cdp.page.get_app_manifest","title":"<code>get_app_manifest()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.get_app_manifest--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.get_cookies","title":"<code>get_cookies()</code>  <code>async</code>","text":"<p>Returns all browser cookies for the page and all of its subframes.</p> <p>Depending on the backend support, will return detailed cookie information in the <code>cookies</code> field. # noqa</p>"},{"location":"reference/cdp/page/#cdp.page.get_frame_tree","title":"<code>get_frame_tree()</code>  <code>async</code>","text":"<p>Returns present frame tree structure.</p>"},{"location":"reference/cdp/page/#cdp.page.get_frame_tree--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.get_installability_errors","title":"<code>get_installability_errors()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/page/#cdp.page.get_installability_errors--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.get_layout_metrics","title":"<code>get_layout_metrics()</code>  <code>async</code>","text":"<p>Returns metrics relating to the layouting of the page, such as viewport bounds/scale.</p>"},{"location":"reference/cdp/page/#cdp.page.get_layout_metrics--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.get_manifest_icons","title":"<code>get_manifest_icons()</code>  <code>async</code>","text":"<p>Deprecated because it's not guaranteed that the returned icon is in fact the one used for PWA installation.</p>"},{"location":"reference/cdp/page/#cdp.page.get_manifest_icons--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.get_navigation_history","title":"<code>get_navigation_history()</code>  <code>async</code>","text":"<p>Returns navigation history for the current page.</p>"},{"location":"reference/cdp/page/#cdp.page.get_navigation_history--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.get_origin_trials","title":"<code>get_origin_trials()</code>  <code>async</code>","text":"<p>Get Origin Trials on given frame.</p>"},{"location":"reference/cdp/page/#cdp.page.get_origin_trials--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.get_permissions_policy_state","title":"<code>get_permissions_policy_state()</code>  <code>async</code>","text":"<p>Get Permissions Policy state on given frame.</p>"},{"location":"reference/cdp/page/#cdp.page.get_permissions_policy_state--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.get_resource_content","title":"<code>get_resource_content()</code>  <code>async</code>","text":"<p>Returns content of the given resource.</p>"},{"location":"reference/cdp/page/#cdp.page.get_resource_content--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.get_resource_tree","title":"<code>get_resource_tree()</code>  <code>async</code>","text":"<p>Returns present frame / resource tree structure.</p>"},{"location":"reference/cdp/page/#cdp.page.get_resource_tree--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.handle_java_script_dialog","title":"<code>handle_java_script_dialog()</code>  <code>async</code>","text":"<p>Accepts or dismisses a JavaScript initiated dialog (alert, confirm, prompt, or onbeforeunload).</p>"},{"location":"reference/cdp/page/#cdp.page.handle_java_script_dialog--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.navigate","title":"<code>navigate()</code>  <code>async</code>","text":"<p>Navigates current page to the given URL.</p>"},{"location":"reference/cdp/page/#cdp.page.navigate--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.navigate_to_history_entry","title":"<code>navigate_to_history_entry()</code>  <code>async</code>","text":"<p>Navigates current page to the given history entry.</p>"},{"location":"reference/cdp/page/#cdp.page.navigate_to_history_entry--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.print_to_pdf","title":"<code>print_to_pdf()</code>  <code>async</code>","text":"<p>Print page as PDF.</p>"},{"location":"reference/cdp/page/#cdp.page.print_to_pdf--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.produce_compilation_cache","title":"<code>produce_compilation_cache()</code>  <code>async</code>","text":"<p>Requests backend to produce compilation cache for the specified scripts.</p> <p><code>scripts</code> are appeneded to the list of scripts for which the cache would be produced. The list may be reset during page navigation. When script with a matching URL is encountered, the cache is optionally produced upon backend discretion, based on internal heuristics. See also: <code>Page.compilationCacheProduced</code>. # noqa</p>"},{"location":"reference/cdp/page/#cdp.page.reload","title":"<code>reload()</code>  <code>async</code>","text":"<p>Reloads given page optionally ignoring the cache.</p>"},{"location":"reference/cdp/page/#cdp.page.reload--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.remove_script_to_evaluate_on_load","title":"<code>remove_script_to_evaluate_on_load()</code>  <code>async</code>","text":"<p>Deprecated, please use removeScriptToEvaluateOnNewDocument instead.</p>"},{"location":"reference/cdp/page/#cdp.page.remove_script_to_evaluate_on_load--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.remove_script_to_evaluate_on_new_document","title":"<code>remove_script_to_evaluate_on_new_document()</code>  <code>async</code>","text":"<p>Removes given script from the list.</p>"},{"location":"reference/cdp/page/#cdp.page.remove_script_to_evaluate_on_new_document--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.reset_navigation_history","title":"<code>reset_navigation_history()</code>  <code>async</code>","text":"<p>Resets navigation history for the current page.</p>"},{"location":"reference/cdp/page/#cdp.page.reset_navigation_history--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.screencast_frame_ack","title":"<code>screencast_frame_ack()</code>  <code>async</code>","text":"<p>Acknowledges that a screencast frame has been received by the frontend.</p>"},{"location":"reference/cdp/page/#cdp.page.screencast_frame_ack--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.search_in_resource","title":"<code>search_in_resource()</code>  <code>async</code>","text":"<p>Searches for given string in resource content.</p>"},{"location":"reference/cdp/page/#cdp.page.search_in_resource--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.set_ad_blocking_enabled","title":"<code>set_ad_blocking_enabled()</code>  <code>async</code>","text":"<p>Enable Chrome's experimental ad filter on all sites.</p>"},{"location":"reference/cdp/page/#cdp.page.set_ad_blocking_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.set_bypass_csp","title":"<code>set_bypass_csp()</code>  <code>async</code>","text":"<p>Enable page Content Security Policy by-passing.</p>"},{"location":"reference/cdp/page/#cdp.page.set_bypass_csp--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.set_device_metrics_override","title":"<code>set_device_metrics_override()</code>  <code>async</code>","text":"<p>Overrides the values of device screen dimensions (window.screen.width, window.screen.height, window.innerWidth, window.innerHeight, and \"device-width\"/\"device-height\"-related CSS media query results).</p>"},{"location":"reference/cdp/page/#cdp.page.set_device_metrics_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.set_device_orientation_override","title":"<code>set_device_orientation_override()</code>  <code>async</code>","text":"<p>Overrides the Device Orientation.</p>"},{"location":"reference/cdp/page/#cdp.page.set_device_orientation_override--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.set_document_content","title":"<code>set_document_content()</code>  <code>async</code>","text":"<p>Sets given markup as the document's HTML.</p>"},{"location":"reference/cdp/page/#cdp.page.set_document_content--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.set_download_behavior","title":"<code>set_download_behavior()</code>  <code>async</code>","text":"<p>Set the behavior when downloading a file.</p>"},{"location":"reference/cdp/page/#cdp.page.set_download_behavior--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.set_font_families","title":"<code>set_font_families()</code>  <code>async</code>","text":"<p>Set generic font families.</p>"},{"location":"reference/cdp/page/#cdp.page.set_font_families--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.set_font_sizes","title":"<code>set_font_sizes()</code>  <code>async</code>","text":"<p>Set default font sizes.</p>"},{"location":"reference/cdp/page/#cdp.page.set_font_sizes--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.set_geolocation_override","title":"<code>set_geolocation_override()</code>  <code>async</code>","text":"<p>Overrides the Geolocation Position or Error.</p> <p>Omitting any of the parameters emulates position unavailable. # noqa</p>"},{"location":"reference/cdp/page/#cdp.page.set_intercept_file_chooser_dialog","title":"<code>set_intercept_file_chooser_dialog()</code>  <code>async</code>","text":"<p>Intercept file chooser requests and transfer control to protocol clients.</p> <p>When file chooser interception is enabled, native file chooser dialog is not shown. Instead, a protocol event <code>Page.fileChooserOpened</code> is emitted. # noqa</p>"},{"location":"reference/cdp/page/#cdp.page.set_lifecycle_events_enabled","title":"<code>set_lifecycle_events_enabled()</code>  <code>async</code>","text":"<p>Controls whether page will emit lifecycle events.</p>"},{"location":"reference/cdp/page/#cdp.page.set_lifecycle_events_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.set_rph_registration_mode","title":"<code>set_rph_registration_mode()</code>  <code>async</code>","text":"<p>Extensions for Custom Handlers API:</p> <p>https://html.spec.whatwg.org/multipage/system-state.html#rph-automation # noqa</p>"},{"location":"reference/cdp/page/#cdp.page.set_spc_transaction_mode","title":"<code>set_spc_transaction_mode()</code>  <code>async</code>","text":"<p>Sets the Secure Payment Confirmation transaction mode.</p> <p>https://w3c.github.io/secure-payment-confirmation/#sctn-automation-set-spc-transaction-mode # noqa</p>"},{"location":"reference/cdp/page/#cdp.page.set_touch_emulation_enabled","title":"<code>set_touch_emulation_enabled()</code>  <code>async</code>","text":"<p>Toggles mouse event-based touch event emulation.</p>"},{"location":"reference/cdp/page/#cdp.page.set_touch_emulation_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.set_web_lifecycle_state","title":"<code>set_web_lifecycle_state()</code>  <code>async</code>","text":"<p>Tries to update the web lifecycle state of the page.</p> <p>It will transition the page to the given state according to: https://github.com/WICG/web-lifecycle/ # noqa</p>"},{"location":"reference/cdp/page/#cdp.page.start_screencast","title":"<code>start_screencast()</code>  <code>async</code>","text":"<p>Starts sending each frame using the <code>screencastFrame</code> event.</p>"},{"location":"reference/cdp/page/#cdp.page.start_screencast--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.stop_loading","title":"<code>stop_loading()</code>  <code>async</code>","text":"<p>Force the page stop all navigations and pending resource fetches.</p>"},{"location":"reference/cdp/page/#cdp.page.stop_loading--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.stop_screencast","title":"<code>stop_screencast()</code>  <code>async</code>","text":"<p>Stops sending each frame in the <code>screencastFrame</code>.</p>"},{"location":"reference/cdp/page/#cdp.page.stop_screencast--noqa","title":"noqa","text":""},{"location":"reference/cdp/page/#cdp.page.wait_for_debugger","title":"<code>wait_for_debugger()</code>  <code>async</code>","text":"<p>Pauses page execution.</p> <p>Can be resumed using generic Runtime.runIfWaitingForDebugger. # noqa</p>"},{"location":"reference/cdp/performance/","title":"Performance","text":""},{"location":"reference/cdp/performance/#cdp.performance.Metric","title":"<code>Metric</code>  <code>dataclass</code>","text":"<p>Run-time execution metric.</p>"},{"location":"reference/cdp/performance/#cdp.performance.Metrics","title":"<code>Metrics</code>  <code>dataclass</code>","text":"<p>Current values of the metrics.</p>"},{"location":"reference/cdp/performance/#cdp.performance.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disable collecting and reporting metrics.</p>"},{"location":"reference/cdp/performance/#cdp.performance.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/performance/#cdp.performance.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enable collecting and reporting metrics.</p>"},{"location":"reference/cdp/performance/#cdp.performance.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/performance/#cdp.performance.get_metrics","title":"<code>get_metrics()</code>  <code>async</code>","text":"<p>Retrieve current values of run-time metrics.</p>"},{"location":"reference/cdp/performance/#cdp.performance.get_metrics--noqa","title":"noqa","text":""},{"location":"reference/cdp/performance/#cdp.performance.set_time_domain","title":"<code>set_time_domain()</code>  <code>async</code>","text":"<p>Sets time domain to use for collecting and reporting duration metrics.</p> <p>Note that this must be called before enabling metrics collection. Calling this method while metrics collection is enabled returns an error. # noqa</p>"},{"location":"reference/cdp/performance_timeline/","title":"Performance timeline","text":""},{"location":"reference/cdp/performance_timeline/#cdp.performance_timeline.LargestContentfulPaint","title":"<code>LargestContentfulPaint</code>  <code>dataclass</code>","text":"<p>See https://github.com/WICG/LargestContentfulPaint and largest_contentful_paint.idl.</p>"},{"location":"reference/cdp/performance_timeline/#cdp.performance_timeline.LayoutShift","title":"<code>LayoutShift</code>  <code>dataclass</code>","text":"<p>See https://wicg.github.io/layout-instability/#sec-layout-shift and layout_shift.idl.</p>"},{"location":"reference/cdp/performance_timeline/#cdp.performance_timeline.LayoutShiftAttribution","title":"<code>LayoutShiftAttribution</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/performance_timeline/#cdp.performance_timeline.TimelineEvent","title":"<code>TimelineEvent</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/performance_timeline/#cdp.performance_timeline.TimelineEventAdded","title":"<code>TimelineEventAdded</code>  <code>dataclass</code>","text":"<p>Sent when a performance timeline event is added.</p> <p>See reportPerformanceTimeline method.</p>"},{"location":"reference/cdp/performance_timeline/#cdp.performance_timeline.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Previously buffered events would be reported before method returns.</p> <p>See also: timelineEventAdded # noqa</p>"},{"location":"reference/cdp/preload/","title":"Preload","text":""},{"location":"reference/cdp/preload/#cdp.preload.PrefetchStatusUpdated","title":"<code>PrefetchStatusUpdated</code>  <code>dataclass</code>","text":"<p>Fired when a prefetch attempt is updated.</p>"},{"location":"reference/cdp/preload/#cdp.preload.PreloadingAttemptKey","title":"<code>PreloadingAttemptKey</code>  <code>dataclass</code>","text":"<p>A key that identifies a preloading attempt.</p> <p>The url used is the url specified by the trigger (i.e. the initial URL), and not the final url that is navigated to. For example, prerendering allows same-origin main frame navigations during the attempt, but the attempt is still keyed with the initial URL.</p>"},{"location":"reference/cdp/preload/#cdp.preload.PreloadingAttemptSource","title":"<code>PreloadingAttemptSource</code>  <code>dataclass</code>","text":"<p>Lists sources for a preloading attempt, specifically the ids of rule sets that had a speculation rule that triggered the attempt, and the BackendNodeIds of  or  elements that triggered the attempt (in the case of attempts triggered by a document rule). <p>It is possible for mulitple rule sets and links to trigger a single attempt.</p>"},{"location":"reference/cdp/preload/#cdp.preload.PreloadingAttemptSourcesUpdated","title":"<code>PreloadingAttemptSourcesUpdated</code>  <code>dataclass</code>","text":"<p>Send a list of sources for all preloading attempts in a document.</p>"},{"location":"reference/cdp/preload/#cdp.preload.PreloadingStatus","title":"<code>PreloadingStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Preloading status values, see also PreloadingTriggeringOutcome.</p> <p>This status is shared by prefetchStatusUpdated and prerenderStatusUpdated.</p>"},{"location":"reference/cdp/preload/#cdp.preload.PrerenderAttemptCompleted","title":"<code>PrerenderAttemptCompleted</code>  <code>dataclass</code>","text":"<p>Fired when a prerender attempt is completed.</p>"},{"location":"reference/cdp/preload/#cdp.preload.PrerenderFinalStatus","title":"<code>PrerenderFinalStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>List of FinalStatus reasons for Prerender2.</p>"},{"location":"reference/cdp/preload/#cdp.preload.PrerenderStatusUpdated","title":"<code>PrerenderStatusUpdated</code>  <code>dataclass</code>","text":"<p>Fired when a prerender attempt is updated.</p>"},{"location":"reference/cdp/preload/#cdp.preload.RuleSet","title":"<code>RuleSet</code>  <code>dataclass</code>","text":"<p>Corresponds to SpeculationRuleSet.</p>"},{"location":"reference/cdp/preload/#cdp.preload.RuleSetErrorType","title":"<code>RuleSetErrorType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/preload/#cdp.preload.RuleSetId","title":"<code>RuleSetId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique id.</p>"},{"location":"reference/cdp/preload/#cdp.preload.RuleSetRemoved","title":"<code>RuleSetRemoved</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/preload/#cdp.preload.RuleSetUpdated","title":"<code>RuleSetUpdated</code>  <code>dataclass</code>","text":"<p>Upsert.</p> <p>Currently, it is only emitted when a rule set added.</p>"},{"location":"reference/cdp/preload/#cdp.preload.SpeculationAction","title":"<code>SpeculationAction</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The type of preloading attempted.</p> <p>It corresponds to mojom::SpeculationAction (although PrefetchWithSubresources is omitted as it isn't being used by clients).</p>"},{"location":"reference/cdp/preload/#cdp.preload.SpeculationTargetHint","title":"<code>SpeculationTargetHint</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Corresponds to mojom::SpeculationTargetHint.</p> <p>See https://github.com/WICG/nav-speculation/blob/main/triggers.md#window-name-targeting-hints</p>"},{"location":"reference/cdp/preload/#cdp.preload.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/preload/#cdp.preload.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/preload/#cdp.preload.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/preload/#cdp.preload.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/profiler/","title":"Profiler","text":""},{"location":"reference/cdp/profiler/#cdp.profiler.ConsoleProfileFinished","title":"<code>ConsoleProfileFinished</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.ConsoleProfileStarted","title":"<code>ConsoleProfileStarted</code>  <code>dataclass</code>","text":"<p>Sent when new profile recording is started using console.profile() call.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.CoverageRange","title":"<code>CoverageRange</code>  <code>dataclass</code>","text":"<p>Coverage data for a source range.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.FunctionCoverage","title":"<code>FunctionCoverage</code>  <code>dataclass</code>","text":"<p>Coverage data for a JavaScript function.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.PositionTickInfo","title":"<code>PositionTickInfo</code>  <code>dataclass</code>","text":"<p>Specifies a number of samples attributed to a certain source position.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.PreciseCoverageDeltaUpdate","title":"<code>PreciseCoverageDeltaUpdate</code>  <code>dataclass</code>","text":"<p>Reports coverage delta since the last poll (either from an event like this, or from <code>takePreciseCoverage</code> for the current isolate.</p> <p>May only be sent if precise code coverage has been started. This event can be trigged by the embedder to, for example, trigger collection of coverage data immediately at a certain point in time.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.Profile","title":"<code>Profile</code>  <code>dataclass</code>","text":"<p>Profile.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.ProfileNode","title":"<code>ProfileNode</code>  <code>dataclass</code>","text":"<p>Profile node.</p> <p>Holds callsite information, execution statistics and child nodes.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.ScriptCoverage","title":"<code>ScriptCoverage</code>  <code>dataclass</code>","text":"<p>Coverage data for a JavaScript script.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/profiler/#cdp.profiler.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/profiler/#cdp.profiler.get_best_effort_coverage","title":"<code>get_best_effort_coverage()</code>  <code>async</code>","text":"<p>Collect coverage data for the current isolate.</p> <p>The coverage data may be incomplete due to garbage collection. # noqa</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.set_sampling_interval","title":"<code>set_sampling_interval()</code>  <code>async</code>","text":"<p>Changes CPU profiler sampling interval.</p> <p>Must be called before CPU profiles recording started. # noqa</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.start","title":"<code>start()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.start--noqa","title":"noqa","text":""},{"location":"reference/cdp/profiler/#cdp.profiler.start_precise_coverage","title":"<code>start_precise_coverage()</code>  <code>async</code>","text":"<p>Enable precise code coverage.</p> <p>Coverage data for JavaScript executed before enabling precise code coverage may be incomplete. Enabling prevents running optimized code and resets execution counters. # noqa</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.stop","title":"<code>stop()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.stop--noqa","title":"noqa","text":""},{"location":"reference/cdp/profiler/#cdp.profiler.stop_precise_coverage","title":"<code>stop_precise_coverage()</code>  <code>async</code>","text":"<p>Disable precise code coverage.</p> <p>Disabling releases unnecessary execution count records and allows executing optimized code. # noqa</p>"},{"location":"reference/cdp/profiler/#cdp.profiler.take_precise_coverage","title":"<code>take_precise_coverage()</code>  <code>async</code>","text":"<p>Collect coverage data for the current isolate, and resets execution counters.</p> <p>Precise code coverage needs to have started. # noqa</p>"},{"location":"reference/cdp/runtime/","title":"Runtime","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.BindingCalled","title":"<code>BindingCalled</code>  <code>dataclass</code>","text":"<p>Notification is issued every time when binding is called.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.CallArgument","title":"<code>CallArgument</code>  <code>dataclass</code>","text":"<p>Represents function call argument.</p> <p>Either remote object id <code>objectId</code>, primitive <code>value</code>, unserializable primitive value or neither of (for undefined) them should be specified.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.CallFrame","title":"<code>CallFrame</code>  <code>dataclass</code>","text":"<p>Stack entry for runtime errors and assertions.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.ConsoleAPICalled","title":"<code>ConsoleAPICalled</code>  <code>dataclass</code>","text":"<p>Issued when console API was called.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.CustomPreview","title":"<code>CustomPreview</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.EntryPreview","title":"<code>EntryPreview</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.ExceptionDetails","title":"<code>ExceptionDetails</code>  <code>dataclass</code>","text":"<p>Detailed information about exception (or error) that was thrown during script compilation or execution.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.ExceptionRevoked","title":"<code>ExceptionRevoked</code>  <code>dataclass</code>","text":"<p>Issued when unhandled exception was revoked.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.ExceptionThrown","title":"<code>ExceptionThrown</code>  <code>dataclass</code>","text":"<p>Issued when exception was thrown and unhandled.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.ExecutionContextCreated","title":"<code>ExecutionContextCreated</code>  <code>dataclass</code>","text":"<p>Issued when new execution context is created.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.ExecutionContextDescription","title":"<code>ExecutionContextDescription</code>  <code>dataclass</code>","text":"<p>Description of an isolated world.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.ExecutionContextDestroyed","title":"<code>ExecutionContextDestroyed</code>  <code>dataclass</code>","text":"<p>Issued when execution context is destroyed.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.ExecutionContextId","title":"<code>ExecutionContextId</code>","text":"<p>         Bases: <code>int</code></p> <p>Id of an execution context.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.ExecutionContextsCleared","title":"<code>ExecutionContextsCleared</code>  <code>dataclass</code>","text":"<p>Issued when all executionContexts were cleared in browser.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.InspectRequested","title":"<code>InspectRequested</code>  <code>dataclass</code>","text":"<p>Issued when object should be inspected (for example, as a result of inspect() command line API call).</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.InternalPropertyDescriptor","title":"<code>InternalPropertyDescriptor</code>  <code>dataclass</code>","text":"<p>Object internal property descriptor.</p> <p>This property isn't normally visible in JavaScript code.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.ObjectPreview","title":"<code>ObjectPreview</code>  <code>dataclass</code>","text":"<p>Object containing abbreviated remote object value.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.PrivatePropertyDescriptor","title":"<code>PrivatePropertyDescriptor</code>  <code>dataclass</code>","text":"<p>Object private field descriptor.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.PropertyDescriptor","title":"<code>PropertyDescriptor</code>  <code>dataclass</code>","text":"<p>Object property descriptor.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.PropertyPreview","title":"<code>PropertyPreview</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.RemoteObject","title":"<code>RemoteObject</code>  <code>dataclass</code>","text":"<p>Mirror object referencing original JavaScript object.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.RemoteObjectId","title":"<code>RemoteObjectId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique object identifier.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.ScriptId","title":"<code>ScriptId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique script identifier.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.StackTrace","title":"<code>StackTrace</code>  <code>dataclass</code>","text":"<p>Call frames for assertions or error messages.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.StackTraceId","title":"<code>StackTraceId</code>  <code>dataclass</code>","text":"<p>If <code>debuggerId</code> is set stack trace comes from another debugger and can be resolved there.</p> <p>This allows to track cross-debugger calls. See <code>Runtime.StackTrace</code> and <code>Debugger.paused</code> for usages.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.TimeDelta","title":"<code>TimeDelta</code>","text":"<p>         Bases: <code>float</code></p> <p>Number of milliseconds.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.Timestamp","title":"<code>Timestamp</code>","text":"<p>         Bases: <code>float</code></p> <p>Number of milliseconds since epoch.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.UniqueDebuggerId","title":"<code>UniqueDebuggerId</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique identifier of current debugger.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.UnserializableValue","title":"<code>UnserializableValue</code>","text":"<p>         Bases: <code>str</code></p> <p>Primitive value which cannot be JSON-stringified.</p> <p>Includes values <code>-0</code>, <code>NaN</code>, <code>Infinity</code>, <code>-Infinity</code>, and bigint literals.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.WebDriverValue","title":"<code>WebDriverValue</code>  <code>dataclass</code>","text":"<p>Represents the value serialiazed by the WebDriver BiDi specification https://w3c.github.io/webdriver-bidi.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.add_binding","title":"<code>add_binding()</code>  <code>async</code>","text":"<p>If executionContextId is empty, adds binding with the given name on the global objects of all inspected contexts, including those created later, bindings survive reloads.</p> <p>Binding function takes exactly one argument, this argument should be string, in case of any other input, function throws an exception. Each binding function call produces Runtime.bindingCalled notification. # noqa</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.await_promise","title":"<code>await_promise()</code>  <code>async</code>","text":"<p>Add handler to promise with given promise object id.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.await_promise--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.call_function_on","title":"<code>call_function_on()</code>  <code>async</code>","text":"<p>Calls function with given declaration on the given object.</p> <p>Object group of the result is inherited from the target object. # noqa</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.compile_script","title":"<code>compile_script()</code>  <code>async</code>","text":"<p>Compiles expression.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.compile_script--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables reporting of execution contexts creation.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.discard_console_entries","title":"<code>discard_console_entries()</code>  <code>async</code>","text":"<p>Discards collected exceptions and console API calls.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.discard_console_entries--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables reporting of execution contexts creation by means of <code>executionContextCreated</code> event.</p> <p>When the reporting gets enabled the event will be sent immediately for each existing execution context. # noqa</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.evaluate","title":"<code>evaluate()</code>  <code>async</code>","text":"<p>Evaluates expression on global object.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.evaluate--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.get_exception_details","title":"<code>get_exception_details()</code>  <code>async</code>","text":"<p>This method tries to lookup and populate exception details for a JavaScript Error object.</p> <p>Note that the stackTrace portion of the resulting exceptionDetails will only be populated if the Runtime domain was enabled at the time when the Error was thrown. # noqa</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.get_heap_usage","title":"<code>get_heap_usage()</code>  <code>async</code>","text":"<p>Returns the JavaScript heap usage.</p> <p>It is the total usage of the corresponding isolate not scoped to a particular Runtime. # noqa</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.get_isolate_id","title":"<code>get_isolate_id()</code>  <code>async</code>","text":"<p>Returns the isolate id.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.get_isolate_id--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.get_properties","title":"<code>get_properties()</code>  <code>async</code>","text":"<p>Returns properties of a given object.</p> <p>Object group of the result is inherited from the target object. # noqa</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.global_lexical_scope_names","title":"<code>global_lexical_scope_names()</code>  <code>async</code>","text":"<p>Returns all let, const and class variables from global scope.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.global_lexical_scope_names--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.query_objects","title":"<code>query_objects()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.query_objects--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.release_object","title":"<code>release_object()</code>  <code>async</code>","text":"<p>Releases remote object with given id.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.release_object--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.release_object_group","title":"<code>release_object_group()</code>  <code>async</code>","text":"<p>Releases all remote objects that belong to a given group.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.release_object_group--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.remove_binding","title":"<code>remove_binding()</code>  <code>async</code>","text":"<p>This method does not remove binding function from global object but unsubscribes current runtime agent from Runtime.bindingCalled notifications.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.remove_binding--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.run_if_waiting_for_debugger","title":"<code>run_if_waiting_for_debugger()</code>  <code>async</code>","text":"<p>Tells inspected instance to run if it was waiting for debugger to attach.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.run_if_waiting_for_debugger--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.run_script","title":"<code>run_script()</code>  <code>async</code>","text":"<p>Runs script with given id in a given context.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.run_script--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.set_async_call_stack_depth","title":"<code>set_async_call_stack_depth()</code>  <code>async</code>","text":"<p>Enables or disables async call stacks tracking.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.set_async_call_stack_depth--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.set_custom_object_formatter_enabled","title":"<code>set_custom_object_formatter_enabled()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.set_custom_object_formatter_enabled--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.set_max_call_stack_size_to_capture","title":"<code>set_max_call_stack_size_to_capture()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/runtime/#cdp.runtime.set_max_call_stack_size_to_capture--noqa","title":"noqa","text":""},{"location":"reference/cdp/runtime/#cdp.runtime.terminate_execution","title":"<code>terminate_execution()</code>  <code>async</code>","text":"<p>Terminate current or next JavaScript execution.</p> <p>Will cancel the termination when the outer-most script execution ends. # noqa</p>"},{"location":"reference/cdp/schema/","title":"Schema","text":""},{"location":"reference/cdp/schema/#cdp.schema.Domain","title":"<code>Domain</code>  <code>dataclass</code>","text":"<p>Description of the protocol domain.</p>"},{"location":"reference/cdp/schema/#cdp.schema.get_domains","title":"<code>get_domains()</code>  <code>async</code>","text":"<p>Returns supported domains.</p>"},{"location":"reference/cdp/schema/#cdp.schema.get_domains--noqa","title":"noqa","text":""},{"location":"reference/cdp/security/","title":"Security","text":""},{"location":"reference/cdp/security/#cdp.security.CertificateError","title":"<code>CertificateError</code>  <code>dataclass</code>","text":"<p>There is a certificate error.</p> <p>If overriding certificate errors is enabled, then it should be handled with the <code>handleCertificateError</code> command. Note: this event does not fire if the certificate error has been allowed internally. Only one client per target should override certificate errors at the same time.</p>"},{"location":"reference/cdp/security/#cdp.security.CertificateErrorAction","title":"<code>CertificateErrorAction</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The action to take when a certificate error occurs.</p> <p>continue will continue processing the request and cancel will cancel the request.</p>"},{"location":"reference/cdp/security/#cdp.security.CertificateId","title":"<code>CertificateId</code>","text":"<p>         Bases: <code>int</code></p> <p>An internal certificate ID value.</p>"},{"location":"reference/cdp/security/#cdp.security.CertificateSecurityState","title":"<code>CertificateSecurityState</code>  <code>dataclass</code>","text":"<p>Details about the security state of the page certificate.</p>"},{"location":"reference/cdp/security/#cdp.security.InsecureContentStatus","title":"<code>InsecureContentStatus</code>  <code>dataclass</code>","text":"<p>Information about insecure content on the page.</p>"},{"location":"reference/cdp/security/#cdp.security.MixedContentType","title":"<code>MixedContentType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>A description of mixed content (HTTP resources on HTTPS pages), as defined by https://www.w3.org/TR/mixed- content/#categories.</p>"},{"location":"reference/cdp/security/#cdp.security.SafetyTipInfo","title":"<code>SafetyTipInfo</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/security/#cdp.security.SafetyTipStatus","title":"<code>SafetyTipStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/security/#cdp.security.SecurityState","title":"<code>SecurityState</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>The security level of a page or resource.</p>"},{"location":"reference/cdp/security/#cdp.security.SecurityStateChanged","title":"<code>SecurityStateChanged</code>  <code>dataclass</code>","text":"<p>The security state of the page changed.</p> <p>No longer being sent.</p>"},{"location":"reference/cdp/security/#cdp.security.SecurityStateExplanation","title":"<code>SecurityStateExplanation</code>  <code>dataclass</code>","text":"<p>An explanation of an factor contributing to the security state.</p>"},{"location":"reference/cdp/security/#cdp.security.VisibleSecurityState","title":"<code>VisibleSecurityState</code>  <code>dataclass</code>","text":"<p>Security state information about the page.</p>"},{"location":"reference/cdp/security/#cdp.security.VisibleSecurityStateChanged","title":"<code>VisibleSecurityStateChanged</code>  <code>dataclass</code>","text":"<p>The security state of the page changed.</p>"},{"location":"reference/cdp/security/#cdp.security.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables tracking security state changes.</p>"},{"location":"reference/cdp/security/#cdp.security.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/security/#cdp.security.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables tracking security state changes.</p>"},{"location":"reference/cdp/security/#cdp.security.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/security/#cdp.security.handle_certificate_error","title":"<code>handle_certificate_error()</code>  <code>async</code>","text":"<p>Handles a certificate error that fired a certificateError event.</p>"},{"location":"reference/cdp/security/#cdp.security.handle_certificate_error--noqa","title":"noqa","text":""},{"location":"reference/cdp/security/#cdp.security.set_ignore_certificate_errors","title":"<code>set_ignore_certificate_errors()</code>  <code>async</code>","text":"<p>Enable/disable whether all certificate errors should be ignored.</p>"},{"location":"reference/cdp/security/#cdp.security.set_ignore_certificate_errors--noqa","title":"noqa","text":""},{"location":"reference/cdp/security/#cdp.security.set_override_certificate_errors","title":"<code>set_override_certificate_errors()</code>  <code>async</code>","text":"<p>Enable/disable overriding certificate errors.</p> <p>If enabled, all certificate error events need to be handled by the DevTools client and should be answered with <code>handleCertificateError</code> commands. # noqa</p>"},{"location":"reference/cdp/service_worker/","title":"Service worker","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.RegistrationID","title":"<code>RegistrationID</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.ServiceWorkerErrorMessage","title":"<code>ServiceWorkerErrorMessage</code>  <code>dataclass</code>","text":"<p>ServiceWorker error message.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.ServiceWorkerRegistration","title":"<code>ServiceWorkerRegistration</code>  <code>dataclass</code>","text":"<p>ServiceWorker registration.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.ServiceWorkerVersion","title":"<code>ServiceWorkerVersion</code>  <code>dataclass</code>","text":"<p>ServiceWorker version.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.ServiceWorkerVersionRunningStatus","title":"<code>ServiceWorkerVersionRunningStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.ServiceWorkerVersionStatus","title":"<code>ServiceWorkerVersionStatus</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.WorkerErrorReported","title":"<code>WorkerErrorReported</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.WorkerRegistrationUpdated","title":"<code>WorkerRegistrationUpdated</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.WorkerVersionUpdated","title":"<code>WorkerVersionUpdated</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.deliver_push_message","title":"<code>deliver_push_message()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.deliver_push_message--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.dispatch_periodic_sync_event","title":"<code>dispatch_periodic_sync_event()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.dispatch_periodic_sync_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.dispatch_sync_event","title":"<code>dispatch_sync_event()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.dispatch_sync_event--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.inspect_worker","title":"<code>inspect_worker()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.inspect_worker--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.set_force_update_on_page_load","title":"<code>set_force_update_on_page_load()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.set_force_update_on_page_load--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.skip_waiting","title":"<code>skip_waiting()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.skip_waiting--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.start_worker","title":"<code>start_worker()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.start_worker--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.stop_all_workers","title":"<code>stop_all_workers()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.stop_all_workers--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.stop_worker","title":"<code>stop_worker()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.stop_worker--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.unregister","title":"<code>unregister()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.unregister--noqa","title":"noqa","text":""},{"location":"reference/cdp/service_worker/#cdp.service_worker.update_registration","title":"<code>update_registration()</code>  <code>async</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/service_worker/#cdp.service_worker.update_registration--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/","title":"Storage","text":""},{"location":"reference/cdp/storage/#cdp.storage.CacheStorageContentUpdated","title":"<code>CacheStorageContentUpdated</code>  <code>dataclass</code>","text":"<p>A cache's contents have been modified.</p>"},{"location":"reference/cdp/storage/#cdp.storage.CacheStorageListUpdated","title":"<code>CacheStorageListUpdated</code>  <code>dataclass</code>","text":"<p>A cache has been added/deleted.</p>"},{"location":"reference/cdp/storage/#cdp.storage.IndexedDBContentUpdated","title":"<code>IndexedDBContentUpdated</code>  <code>dataclass</code>","text":"<p>The origin's IndexedDB object store has been modified.</p>"},{"location":"reference/cdp/storage/#cdp.storage.IndexedDBListUpdated","title":"<code>IndexedDBListUpdated</code>  <code>dataclass</code>","text":"<p>The origin's IndexedDB database list has been modified.</p>"},{"location":"reference/cdp/storage/#cdp.storage.InterestGroupAccessType","title":"<code>InterestGroupAccessType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of interest group access types.</p>"},{"location":"reference/cdp/storage/#cdp.storage.InterestGroupAccessed","title":"<code>InterestGroupAccessed</code>  <code>dataclass</code>","text":"<p>One of the interest groups was accessed by the associated page.</p>"},{"location":"reference/cdp/storage/#cdp.storage.InterestGroupAd","title":"<code>InterestGroupAd</code>  <code>dataclass</code>","text":"<p>Ad advertising element inside an interest group.</p>"},{"location":"reference/cdp/storage/#cdp.storage.InterestGroupDetails","title":"<code>InterestGroupDetails</code>  <code>dataclass</code>","text":"<p>The full details of an interest group.</p>"},{"location":"reference/cdp/storage/#cdp.storage.SerializedStorageKey","title":"<code>SerializedStorageKey</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/storage/#cdp.storage.SharedStorageAccessParams","title":"<code>SharedStorageAccessParams</code>  <code>dataclass</code>","text":"<p>Bundles the parameters for shared storage access events whose presence/absence can vary according to SharedStorageAccessType.</p>"},{"location":"reference/cdp/storage/#cdp.storage.SharedStorageAccessType","title":"<code>SharedStorageAccessType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of shared storage access types.</p>"},{"location":"reference/cdp/storage/#cdp.storage.SharedStorageAccessed","title":"<code>SharedStorageAccessed</code>  <code>dataclass</code>","text":"<p>Shared storage was accessed by the associated page.</p> <p>The following parameters are included in all events.</p>"},{"location":"reference/cdp/storage/#cdp.storage.SharedStorageEntry","title":"<code>SharedStorageEntry</code>  <code>dataclass</code>","text":"<p>Struct for a single key-value pair in an origin's shared storage.</p>"},{"location":"reference/cdp/storage/#cdp.storage.SharedStorageMetadata","title":"<code>SharedStorageMetadata</code>  <code>dataclass</code>","text":"<p>Details for an origin's shared storage.</p>"},{"location":"reference/cdp/storage/#cdp.storage.SharedStorageReportingMetadata","title":"<code>SharedStorageReportingMetadata</code>  <code>dataclass</code>","text":"<p>Pair of reporting metadata details for a candidate URL for <code>selectURL()</code>.</p>"},{"location":"reference/cdp/storage/#cdp.storage.SharedStorageUrlWithMetadata","title":"<code>SharedStorageUrlWithMetadata</code>  <code>dataclass</code>","text":"<p>Bundles a candidate URL with its reporting metadata.</p>"},{"location":"reference/cdp/storage/#cdp.storage.StorageBucketCreatedOrUpdated","title":"<code>StorageBucketCreatedOrUpdated</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/storage/#cdp.storage.StorageBucketDeleted","title":"<code>StorageBucketDeleted</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/storage/#cdp.storage.StorageBucketInfo","title":"<code>StorageBucketInfo</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/storage/#cdp.storage.StorageBucketsDurability","title":"<code>StorageBucketsDurability</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/storage/#cdp.storage.StorageType","title":"<code>StorageType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of possible storage types.</p>"},{"location":"reference/cdp/storage/#cdp.storage.TrustTokens","title":"<code>TrustTokens</code>  <code>dataclass</code>","text":"<p>Pair of issuer origin and number of available (signed, but not used) Trust Tokens from that issuer.</p>"},{"location":"reference/cdp/storage/#cdp.storage.UsageForType","title":"<code>UsageForType</code>  <code>dataclass</code>","text":"<p>Usage for a storage type.</p>"},{"location":"reference/cdp/storage/#cdp.storage.clear_cookies","title":"<code>clear_cookies()</code>  <code>async</code>","text":"<p>Clears cookies.</p>"},{"location":"reference/cdp/storage/#cdp.storage.clear_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.clear_data_for_origin","title":"<code>clear_data_for_origin()</code>  <code>async</code>","text":"<p>Clears storage for origin.</p>"},{"location":"reference/cdp/storage/#cdp.storage.clear_data_for_origin--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.clear_data_for_storage_key","title":"<code>clear_data_for_storage_key()</code>  <code>async</code>","text":"<p>Clears storage for storage key.</p>"},{"location":"reference/cdp/storage/#cdp.storage.clear_data_for_storage_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.clear_shared_storage_entries","title":"<code>clear_shared_storage_entries()</code>  <code>async</code>","text":"<p>Clears all entries for a given origin's shared storage.</p>"},{"location":"reference/cdp/storage/#cdp.storage.clear_shared_storage_entries--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.clear_trust_tokens","title":"<code>clear_trust_tokens()</code>  <code>async</code>","text":"<p>Removes all Trust Tokens issued by the provided issuerOrigin.</p> <p>Leaves other stored data, including the issuer's Redemption Records, intact. # noqa</p>"},{"location":"reference/cdp/storage/#cdp.storage.delete_shared_storage_entry","title":"<code>delete_shared_storage_entry()</code>  <code>async</code>","text":"<p>Deletes entry for <code>key</code> (if it exists) for a given origin's shared storage.</p>"},{"location":"reference/cdp/storage/#cdp.storage.delete_shared_storage_entry--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.delete_storage_bucket","title":"<code>delete_storage_bucket()</code>  <code>async</code>","text":"<p>Deletes the Storage Bucket with the given storage key and bucket name.</p>"},{"location":"reference/cdp/storage/#cdp.storage.delete_storage_bucket--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.get_cookies","title":"<code>get_cookies()</code>  <code>async</code>","text":"<p>Returns all browser cookies.</p>"},{"location":"reference/cdp/storage/#cdp.storage.get_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.get_interest_group_details","title":"<code>get_interest_group_details()</code>  <code>async</code>","text":"<p>Gets details for a named interest group.</p>"},{"location":"reference/cdp/storage/#cdp.storage.get_interest_group_details--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.get_shared_storage_entries","title":"<code>get_shared_storage_entries()</code>  <code>async</code>","text":"<p>Gets the entries in an given origin's shared storage.</p>"},{"location":"reference/cdp/storage/#cdp.storage.get_shared_storage_entries--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.get_shared_storage_metadata","title":"<code>get_shared_storage_metadata()</code>  <code>async</code>","text":"<p>Gets metadata for an origin's shared storage.</p>"},{"location":"reference/cdp/storage/#cdp.storage.get_shared_storage_metadata--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.get_storage_key_for_frame","title":"<code>get_storage_key_for_frame()</code>  <code>async</code>","text":"<p>Returns a storage key given a frame id.</p>"},{"location":"reference/cdp/storage/#cdp.storage.get_storage_key_for_frame--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.get_trust_tokens","title":"<code>get_trust_tokens()</code>  <code>async</code>","text":"<p>Returns the number of stored Trust Tokens per issuer for the current browsing context.</p>"},{"location":"reference/cdp/storage/#cdp.storage.get_trust_tokens--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.get_usage_and_quota","title":"<code>get_usage_and_quota()</code>  <code>async</code>","text":"<p>Returns usage and quota in bytes.</p>"},{"location":"reference/cdp/storage/#cdp.storage.get_usage_and_quota--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.override_quota_for_origin","title":"<code>override_quota_for_origin()</code>  <code>async</code>","text":"<p>Override quota for the specified origin # noqa.</p>"},{"location":"reference/cdp/storage/#cdp.storage.reset_shared_storage_budget","title":"<code>reset_shared_storage_budget()</code>  <code>async</code>","text":"<p>Resets the budget for <code>ownerOrigin</code> by clearing all budget withdrawals.</p>"},{"location":"reference/cdp/storage/#cdp.storage.reset_shared_storage_budget--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.set_cookies","title":"<code>set_cookies()</code>  <code>async</code>","text":"<p>Sets given cookies.</p>"},{"location":"reference/cdp/storage/#cdp.storage.set_cookies--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.set_interest_group_tracking","title":"<code>set_interest_group_tracking()</code>  <code>async</code>","text":"<p>Enables/Disables issuing of interestGroupAccessed events.</p>"},{"location":"reference/cdp/storage/#cdp.storage.set_interest_group_tracking--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.set_shared_storage_entry","title":"<code>set_shared_storage_entry()</code>  <code>async</code>","text":"<p>Sets entry with <code>key</code> and <code>value</code> for a given origin's shared storage.</p>"},{"location":"reference/cdp/storage/#cdp.storage.set_shared_storage_entry--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.set_shared_storage_tracking","title":"<code>set_shared_storage_tracking()</code>  <code>async</code>","text":"<p>Enables/disables issuing of sharedStorageAccessed events.</p>"},{"location":"reference/cdp/storage/#cdp.storage.set_shared_storage_tracking--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.set_storage_bucket_tracking","title":"<code>set_storage_bucket_tracking()</code>  <code>async</code>","text":"<p>Set tracking for a storage key's buckets.</p>"},{"location":"reference/cdp/storage/#cdp.storage.set_storage_bucket_tracking--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.track_cache_storage_for_origin","title":"<code>track_cache_storage_for_origin()</code>  <code>async</code>","text":"<p>Registers origin to be notified when an update occurs to its cache storage list.</p>"},{"location":"reference/cdp/storage/#cdp.storage.track_cache_storage_for_origin--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.track_cache_storage_for_storage_key","title":"<code>track_cache_storage_for_storage_key()</code>  <code>async</code>","text":"<p>Registers storage key to be notified when an update occurs to its cache storage list.</p>"},{"location":"reference/cdp/storage/#cdp.storage.track_cache_storage_for_storage_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.track_indexed_db_for_origin","title":"<code>track_indexed_db_for_origin()</code>  <code>async</code>","text":"<p>Registers origin to be notified when an update occurs to its IndexedDB.</p>"},{"location":"reference/cdp/storage/#cdp.storage.track_indexed_db_for_origin--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.track_indexed_db_for_storage_key","title":"<code>track_indexed_db_for_storage_key()</code>  <code>async</code>","text":"<p>Registers storage key to be notified when an update occurs to its IndexedDB.</p>"},{"location":"reference/cdp/storage/#cdp.storage.track_indexed_db_for_storage_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.untrack_cache_storage_for_origin","title":"<code>untrack_cache_storage_for_origin()</code>  <code>async</code>","text":"<p>Unregisters origin from receiving notifications for cache storage.</p>"},{"location":"reference/cdp/storage/#cdp.storage.untrack_cache_storage_for_origin--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.untrack_cache_storage_for_storage_key","title":"<code>untrack_cache_storage_for_storage_key()</code>  <code>async</code>","text":"<p>Unregisters storage key from receiving notifications for cache storage.</p>"},{"location":"reference/cdp/storage/#cdp.storage.untrack_cache_storage_for_storage_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.untrack_indexed_db_for_origin","title":"<code>untrack_indexed_db_for_origin()</code>  <code>async</code>","text":"<p>Unregisters origin from receiving notifications for IndexedDB.</p>"},{"location":"reference/cdp/storage/#cdp.storage.untrack_indexed_db_for_origin--noqa","title":"noqa","text":""},{"location":"reference/cdp/storage/#cdp.storage.untrack_indexed_db_for_storage_key","title":"<code>untrack_indexed_db_for_storage_key()</code>  <code>async</code>","text":"<p>Unregisters storage key from receiving notifications for IndexedDB.</p>"},{"location":"reference/cdp/storage/#cdp.storage.untrack_indexed_db_for_storage_key--noqa","title":"noqa","text":""},{"location":"reference/cdp/system_info/","title":"System info","text":""},{"location":"reference/cdp/system_info/#cdp.system_info.GPUDevice","title":"<code>GPUDevice</code>  <code>dataclass</code>","text":"<p>Describes a single graphics processor (GPU).</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.GPUInfo","title":"<code>GPUInfo</code>  <code>dataclass</code>","text":"<p>Provides information about the GPU(s) on the system.</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.ImageDecodeAcceleratorCapability","title":"<code>ImageDecodeAcceleratorCapability</code>  <code>dataclass</code>","text":"<p>Describes a supported image decoding profile with its associated minimum and maximum resolutions and subsampling.</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.ImageType","title":"<code>ImageType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Image format of a given image.</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.ProcessInfo","title":"<code>ProcessInfo</code>  <code>dataclass</code>","text":"<p>Represents process info.</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.Size","title":"<code>Size</code>  <code>dataclass</code>","text":"<p>Describes the width and height dimensions of an entity.</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.SubsamplingFormat","title":"<code>SubsamplingFormat</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>YUV subsampling type of the pixels of a given image.</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.VideoDecodeAcceleratorCapability","title":"<code>VideoDecodeAcceleratorCapability</code>  <code>dataclass</code>","text":"<p>Describes a supported video decoding profile with its associated minimum and maximum resolutions.</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.VideoEncodeAcceleratorCapability","title":"<code>VideoEncodeAcceleratorCapability</code>  <code>dataclass</code>","text":"<p>Describes a supported video encoding profile with its associated maximum resolution and maximum framerate.</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.get_feature_state","title":"<code>get_feature_state()</code>  <code>async</code>","text":"<p>Returns information about the feature state.</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.get_feature_state--noqa","title":"noqa","text":""},{"location":"reference/cdp/system_info/#cdp.system_info.get_info","title":"<code>get_info()</code>  <code>async</code>","text":"<p>Returns information about the system.</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.get_info--noqa","title":"noqa","text":""},{"location":"reference/cdp/system_info/#cdp.system_info.get_process_info","title":"<code>get_process_info()</code>  <code>async</code>","text":"<p>Returns information about all running processes.</p>"},{"location":"reference/cdp/system_info/#cdp.system_info.get_process_info--noqa","title":"noqa","text":""},{"location":"reference/cdp/target/","title":"Target","text":""},{"location":"reference/cdp/target/#cdp.target.AttachedToTarget","title":"<code>AttachedToTarget</code>  <code>dataclass</code>","text":"<p>Issued when attached to target because of auto-attach or <code>attachToTarget</code> command.</p>"},{"location":"reference/cdp/target/#cdp.target.DetachedFromTarget","title":"<code>DetachedFromTarget</code>  <code>dataclass</code>","text":"<p>Issued when detached from target for any reason (including <code>detachFromTarget</code> command).</p> <p>Can be issued multiple times per target if multiple sessions have been attached to it.</p>"},{"location":"reference/cdp/target/#cdp.target.FilterEntry","title":"<code>FilterEntry</code>  <code>dataclass</code>","text":"<p>A filter used by target query/discovery/auto-attach operations.</p>"},{"location":"reference/cdp/target/#cdp.target.ReceivedMessageFromTarget","title":"<code>ReceivedMessageFromTarget</code>  <code>dataclass</code>","text":"<p>Notifies about a new protocol message received from the session (as reported in <code>attachedToTarget</code> event).</p>"},{"location":"reference/cdp/target/#cdp.target.RemoteLocation","title":"<code>RemoteLocation</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/target/#cdp.target.SessionID","title":"<code>SessionID</code>","text":"<p>         Bases: <code>str</code></p> <p>Unique identifier of attached debugging session.</p>"},{"location":"reference/cdp/target/#cdp.target.TargetCrashed","title":"<code>TargetCrashed</code>  <code>dataclass</code>","text":"<p>Issued when a target has crashed.</p>"},{"location":"reference/cdp/target/#cdp.target.TargetCreated","title":"<code>TargetCreated</code>  <code>dataclass</code>","text":"<p>Issued when a possible inspection target is created.</p>"},{"location":"reference/cdp/target/#cdp.target.TargetDestroyed","title":"<code>TargetDestroyed</code>  <code>dataclass</code>","text":"<p>Issued when a target is destroyed.</p>"},{"location":"reference/cdp/target/#cdp.target.TargetFilter","title":"<code>TargetFilter</code>  <code>dataclass</code>","text":"<p>The entries in TargetFilter are matched sequentially against targets and the first entry that matches determines if the target is included or not, depending on the value of <code>exclude</code> field in the entry. If filter is not specified, the one assumed is.</p> <p>[{type: \"browser\", exclude: true}, {type: \"tab\", exclude: true}, {}] (i.e. include everything but <code>browser</code> and <code>tab</code>).</p>"},{"location":"reference/cdp/target/#cdp.target.TargetID","title":"<code>TargetID</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/target/#cdp.target.TargetInfo","title":"<code>TargetInfo</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/target/#cdp.target.TargetInfoChanged","title":"<code>TargetInfoChanged</code>  <code>dataclass</code>","text":"<p>Issued when some information about a target has changed.</p> <p>This only happens between <code>targetCreated</code> and <code>targetDestroyed</code>.</p>"},{"location":"reference/cdp/target/#cdp.target.activate_target","title":"<code>activate_target()</code>  <code>async</code>","text":"<p>Activates (focuses) the target.</p>"},{"location":"reference/cdp/target/#cdp.target.activate_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/target/#cdp.target.attach_to_browser_target","title":"<code>attach_to_browser_target()</code>  <code>async</code>","text":"<p>Attaches to the browser target, only uses flat sessionId mode.</p>"},{"location":"reference/cdp/target/#cdp.target.attach_to_browser_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/target/#cdp.target.attach_to_target","title":"<code>attach_to_target()</code>  <code>async</code>","text":"<p>Attaches to the target with given id.</p>"},{"location":"reference/cdp/target/#cdp.target.attach_to_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/target/#cdp.target.auto_attach_related","title":"<code>auto_attach_related()</code>  <code>async</code>","text":"<p>Adds the specified target to the list of targets that will be monitored for any related target creation (such as child frames, child workers and new versions of service worker) and reported through <code>attachedToTarget</code>.</p> <p>The specified target is also auto-attached. This cancels the effect of any previous <code>setAutoAttach</code> and is also cancelled by subsequent <code>setAutoAttach</code>. Only available at the Browser target. # noqa</p>"},{"location":"reference/cdp/target/#cdp.target.close_target","title":"<code>close_target()</code>  <code>async</code>","text":"<p>Closes the target.</p> <p>If the target is a page that gets closed too. # noqa</p>"},{"location":"reference/cdp/target/#cdp.target.create_browser_context","title":"<code>create_browser_context()</code>  <code>async</code>","text":"<p>Creates a new empty BrowserContext.</p> <p>Similar to an incognito profile but you can have more than one. # noqa</p>"},{"location":"reference/cdp/target/#cdp.target.create_target","title":"<code>create_target()</code>  <code>async</code>","text":"<p>Creates a new page.</p>"},{"location":"reference/cdp/target/#cdp.target.create_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/target/#cdp.target.detach_from_target","title":"<code>detach_from_target()</code>  <code>async</code>","text":"<p>Detaches session with given id.</p>"},{"location":"reference/cdp/target/#cdp.target.detach_from_target--noqa","title":"noqa","text":""},{"location":"reference/cdp/target/#cdp.target.dispose_browser_context","title":"<code>dispose_browser_context()</code>  <code>async</code>","text":"<p>Deletes a BrowserContext.</p> <p>All the belonging pages will be closed without calling their beforeunload hooks. # noqa</p>"},{"location":"reference/cdp/target/#cdp.target.expose_dev_tools_protocol","title":"<code>expose_dev_tools_protocol()</code>  <code>async</code>","text":"<p>Inject object to the target's main frame that provides a communication channel with browser target.</p> <p>Injected object will be available as <code>window[bindingName]</code>.</p> <p>The object has the follwing API: - <code>binding.send(json)</code> - a method to send messages over the remote debugging protocol - <code>binding.onmessage = json =&gt; handleMessage(json)</code> - a callback that will be called for the protocol notifications and command responses. # noqa</p>"},{"location":"reference/cdp/target/#cdp.target.get_browser_contexts","title":"<code>get_browser_contexts()</code>  <code>async</code>","text":"<p>Returns all browser contexts created with <code>Target.createBrowserContext</code> method.</p>"},{"location":"reference/cdp/target/#cdp.target.get_browser_contexts--noqa","title":"noqa","text":""},{"location":"reference/cdp/target/#cdp.target.get_target_info","title":"<code>get_target_info()</code>  <code>async</code>","text":"<p>Returns information about a target.</p>"},{"location":"reference/cdp/target/#cdp.target.get_target_info--noqa","title":"noqa","text":""},{"location":"reference/cdp/target/#cdp.target.get_targets","title":"<code>get_targets()</code>  <code>async</code>","text":"<p>Retrieves a list of available targets.</p>"},{"location":"reference/cdp/target/#cdp.target.get_targets--noqa","title":"noqa","text":""},{"location":"reference/cdp/target/#cdp.target.send_message_to_target","title":"<code>send_message_to_target()</code>  <code>async</code>","text":"<p>Sends protocol message over session with given id.</p> <p>Consider using flat mode instead; see commands attachToTarget, setAutoAttach, and crbug.com/991325. # noqa</p>"},{"location":"reference/cdp/target/#cdp.target.set_auto_attach","title":"<code>set_auto_attach()</code>  <code>async</code>","text":"<p>Controls whether to automatically attach to new targets which are considered to be related to this one.</p> <p>When turned on, attaches to all existing related targets as well. When turned off, automatically detaches from all currently attached targets. This also clears all targets added by <code>autoAttachRelated</code> from the list of targets to watch for creation of related targets. # noqa</p>"},{"location":"reference/cdp/target/#cdp.target.set_discover_targets","title":"<code>set_discover_targets()</code>  <code>async</code>","text":"<p>Controls whether to discover available targets and notify via <code>targetCreated/targetInfoChanged/targetDestroyed</code> events.</p>"},{"location":"reference/cdp/target/#cdp.target.set_discover_targets--noqa","title":"noqa","text":""},{"location":"reference/cdp/target/#cdp.target.set_remote_locations","title":"<code>set_remote_locations()</code>  <code>async</code>","text":"<p>Enables target discovery for the specified locations, when <code>setDiscoverTargets</code> was set to <code>true</code>.</p>"},{"location":"reference/cdp/target/#cdp.target.set_remote_locations--noqa","title":"noqa","text":""},{"location":"reference/cdp/tethering/","title":"Tethering","text":""},{"location":"reference/cdp/tethering/#cdp.tethering.Accepted","title":"<code>Accepted</code>  <code>dataclass</code>","text":"<p>Informs that port was successfully bound and got a specified connection id.</p>"},{"location":"reference/cdp/tethering/#cdp.tethering.bind","title":"<code>bind()</code>  <code>async</code>","text":"<p>Request browser port binding.</p>"},{"location":"reference/cdp/tethering/#cdp.tethering.bind--noqa","title":"noqa","text":""},{"location":"reference/cdp/tethering/#cdp.tethering.unbind","title":"<code>unbind()</code>  <code>async</code>","text":"<p>Request browser port unbinding.</p>"},{"location":"reference/cdp/tethering/#cdp.tethering.unbind--noqa","title":"noqa","text":""},{"location":"reference/cdp/tracing/","title":"Tracing","text":""},{"location":"reference/cdp/tracing/#cdp.tracing.BufferUsage","title":"<code>BufferUsage</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.DataCollected","title":"<code>DataCollected</code>  <code>dataclass</code>","text":"<p>Contains a bucket of collected trace events.</p> <p>When tracing is stopped collected events will be sent as a sequence of dataCollected events followed by tracingComplete event.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.MemoryDumpConfig","title":"<code>MemoryDumpConfig</code>  <code>dataclass</code>","text":"<p>Configuration for memory dump.</p> <p>Used only when \"memory-infra\" category is enabled.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.MemoryDumpLevelOfDetail","title":"<code>MemoryDumpLevelOfDetail</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Details exposed when memory request explicitly declared.</p> <p>Keep consistent with memory_dump_request_args.h and memory_instrumentation.mojom</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.StreamCompression","title":"<code>StreamCompression</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Compression type to use for traces returned via streams.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.StreamFormat","title":"<code>StreamFormat</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Data format of a trace.</p> <p>Can be either the legacy JSON format or the protocol buffer format. Note that the JSON format will be deprecated soon.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.TraceConfig","title":"<code>TraceConfig</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.TracingBackend","title":"<code>TracingBackend</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Backend type to use for tracing.</p> <p><code>chrome</code> uses the Chrome-integrated tracing service and is supported on all platforms. <code>system</code> is only supported on Chrome OS and uses the Perfetto system tracing service. <code>auto</code> chooses <code>system</code> when the perfettoConfig provided to Tracing.start specifies at least one non-Chrome data source; otherwise uses <code>chrome</code>.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.TracingComplete","title":"<code>TracingComplete</code>  <code>dataclass</code>","text":"<p>Signals that tracing is stopped and there is no trace buffers pending flush, all data were delivered via dataCollected events.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.end","title":"<code>end()</code>  <code>async</code>","text":"<p>Stop trace events collection.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.end--noqa","title":"noqa","text":""},{"location":"reference/cdp/tracing/#cdp.tracing.get_categories","title":"<code>get_categories()</code>  <code>async</code>","text":"<p>Gets supported tracing categories.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.get_categories--noqa","title":"noqa","text":""},{"location":"reference/cdp/tracing/#cdp.tracing.record_clock_sync_marker","title":"<code>record_clock_sync_marker()</code>  <code>async</code>","text":"<p>Record a clock sync marker in the trace.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.record_clock_sync_marker--noqa","title":"noqa","text":""},{"location":"reference/cdp/tracing/#cdp.tracing.request_memory_dump","title":"<code>request_memory_dump()</code>  <code>async</code>","text":"<p>Request a global memory dump.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.request_memory_dump--noqa","title":"noqa","text":""},{"location":"reference/cdp/tracing/#cdp.tracing.start","title":"<code>start()</code>  <code>async</code>","text":"<p>Start trace events collection.</p>"},{"location":"reference/cdp/tracing/#cdp.tracing.start--noqa","title":"noqa","text":""},{"location":"reference/cdp/utils/","title":"Utils","text":""},{"location":"reference/cdp/web_audio/","title":"Web audio","text":""},{"location":"reference/cdp/web_audio/#cdp.web_audio.AudioListener","title":"<code>AudioListener</code>  <code>dataclass</code>","text":"<p>Protocol object for AudioListener.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.AudioListenerCreated","title":"<code>AudioListenerCreated</code>  <code>dataclass</code>","text":"<p>Notifies that the construction of an AudioListener has finished.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.AudioListenerWillBeDestroyed","title":"<code>AudioListenerWillBeDestroyed</code>  <code>dataclass</code>","text":"<p>Notifies that a new AudioListener has been created.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.AudioNode","title":"<code>AudioNode</code>  <code>dataclass</code>","text":"<p>Protocol object for AudioNode.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.AudioNodeCreated","title":"<code>AudioNodeCreated</code>  <code>dataclass</code>","text":"<p>Notifies that a new AudioNode has been created.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.AudioNodeWillBeDestroyed","title":"<code>AudioNodeWillBeDestroyed</code>  <code>dataclass</code>","text":"<p>Notifies that an existing AudioNode has been destroyed.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.AudioParam","title":"<code>AudioParam</code>  <code>dataclass</code>","text":"<p>Protocol object for AudioParam.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.AudioParamCreated","title":"<code>AudioParamCreated</code>  <code>dataclass</code>","text":"<p>Notifies that a new AudioParam has been created.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.AudioParamWillBeDestroyed","title":"<code>AudioParamWillBeDestroyed</code>  <code>dataclass</code>","text":"<p>Notifies that an existing AudioParam has been destroyed.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.AutomationRate","title":"<code>AutomationRate</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of AudioParam::AutomationRate from the spec.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.BaseAudioContext","title":"<code>BaseAudioContext</code>  <code>dataclass</code>","text":"<p>Protocol object for BaseAudioContext.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.ChannelCountMode","title":"<code>ChannelCountMode</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of AudioNode::ChannelCountMode from the spec.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.ChannelInterpretation","title":"<code>ChannelInterpretation</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of AudioNode::ChannelInterpretation from the spec.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.ContextChanged","title":"<code>ContextChanged</code>  <code>dataclass</code>","text":"<p>Notifies that existing BaseAudioContext has changed some properties (id stays the same)..</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.ContextCreated","title":"<code>ContextCreated</code>  <code>dataclass</code>","text":"<p>Notifies that a new BaseAudioContext has been created.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.ContextRealtimeData","title":"<code>ContextRealtimeData</code>  <code>dataclass</code>","text":"<p>Fields in AudioContext that change in real-time.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.ContextState","title":"<code>ContextState</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of AudioContextState from the spec.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.ContextType","title":"<code>ContextType</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Enum of BaseAudioContext types.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.ContextWillBeDestroyed","title":"<code>ContextWillBeDestroyed</code>  <code>dataclass</code>","text":"<p>Notifies that an existing BaseAudioContext will be destroyed.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.GraphObjectId","title":"<code>GraphObjectId</code>","text":"<p>         Bases: <code>str</code></p> <p>An unique ID for a graph object (AudioContext, AudioNode, AudioParam) in Web Audio API.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.NodeParamConnected","title":"<code>NodeParamConnected</code>  <code>dataclass</code>","text":"<p>Notifies that an AudioNode is connected to an AudioParam.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.NodeParamDisconnected","title":"<code>NodeParamDisconnected</code>  <code>dataclass</code>","text":"<p>Notifies that an AudioNode is disconnected to an AudioParam.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.NodeType","title":"<code>NodeType</code>","text":"<p>         Bases: <code>str</code></p> <p>Enum of AudioNode types.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.NodesConnected","title":"<code>NodesConnected</code>  <code>dataclass</code>","text":"<p>Notifies that two AudioNodes are connected.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.NodesDisconnected","title":"<code>NodesDisconnected</code>  <code>dataclass</code>","text":"<p>Notifies that AudioNodes are disconnected.</p> <p>The destination can be null, and it means all the outgoing connections from the source are disconnected.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.ParamType","title":"<code>ParamType</code>","text":"<p>         Bases: <code>str</code></p> <p>Enum of AudioParam types.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disables the WebAudio domain.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_audio/#cdp.web_audio.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enables the WebAudio domain and starts sending context lifetime events.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_audio/#cdp.web_audio.get_realtime_data","title":"<code>get_realtime_data()</code>  <code>async</code>","text":"<p>Fetch the realtime data from the registered contexts.</p>"},{"location":"reference/cdp/web_audio/#cdp.web_audio.get_realtime_data--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_authn/","title":"Web authn","text":""},{"location":"reference/cdp/web_authn/#cdp.web_authn.AuthenticatorId","title":"<code>AuthenticatorId</code>","text":"<p>         Bases: <code>str</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.AuthenticatorProtocol","title":"<code>AuthenticatorProtocol</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.AuthenticatorTransport","title":"<code>AuthenticatorTransport</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.Credential","title":"<code>Credential</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.CredentialAdded","title":"<code>CredentialAdded</code>  <code>dataclass</code>","text":"<p>Triggered when a credential is added to an authenticator.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.CredentialAsserted","title":"<code>CredentialAsserted</code>  <code>dataclass</code>","text":"<p>Triggered when a credential is used in a webauthn assertion.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.Ctap2Version","title":"<code>Ctap2Version</code>","text":"<p>         Bases: <code>str</code>, <code>enum.Enum</code></p> <p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.VirtualAuthenticatorOptions","title":"<code>VirtualAuthenticatorOptions</code>  <code>dataclass</code>","text":"<p>Description is missing from the devtools protocol document.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.add_credential","title":"<code>add_credential()</code>  <code>async</code>","text":"<p>Adds the credential to the specified authenticator.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.add_credential--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_authn/#cdp.web_authn.add_virtual_authenticator","title":"<code>add_virtual_authenticator()</code>  <code>async</code>","text":"<p>Creates and adds a virtual authenticator.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.add_virtual_authenticator--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_authn/#cdp.web_authn.clear_credentials","title":"<code>clear_credentials()</code>  <code>async</code>","text":"<p>Clears all the credentials from the specified device.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.clear_credentials--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_authn/#cdp.web_authn.disable","title":"<code>disable()</code>  <code>async</code>","text":"<p>Disable the WebAuthn domain.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.disable--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_authn/#cdp.web_authn.enable","title":"<code>enable()</code>  <code>async</code>","text":"<p>Enable the WebAuthn domain and start intercepting credential storage and retrieval with a virtual authenticator.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.enable--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_authn/#cdp.web_authn.get_credential","title":"<code>get_credential()</code>  <code>async</code>","text":"<p>Returns a single credential stored in the given virtual authenticator that matches the credential ID.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.get_credential--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_authn/#cdp.web_authn.get_credentials","title":"<code>get_credentials()</code>  <code>async</code>","text":"<p>Returns all the credentials stored in the given virtual authenticator.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.get_credentials--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_authn/#cdp.web_authn.remove_credential","title":"<code>remove_credential()</code>  <code>async</code>","text":"<p>Removes a credential from the authenticator.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.remove_credential--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_authn/#cdp.web_authn.remove_virtual_authenticator","title":"<code>remove_virtual_authenticator()</code>  <code>async</code>","text":"<p>Removes the given authenticator.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.remove_virtual_authenticator--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_authn/#cdp.web_authn.set_automatic_presence_simulation","title":"<code>set_automatic_presence_simulation()</code>  <code>async</code>","text":"<p>Sets whether tests of user presence will succeed immediately (if true) or fail to resolve (if false) for an authenticator.</p> <p>The default is true. # noqa</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.set_response_override_bits","title":"<code>set_response_override_bits()</code>  <code>async</code>","text":"<p>Resets parameters isBogusSignature, isBadUV, isBadUP to false if they are not present.</p>"},{"location":"reference/cdp/web_authn/#cdp.web_authn.set_response_override_bits--noqa","title":"noqa","text":""},{"location":"reference/cdp/web_authn/#cdp.web_authn.set_user_verified","title":"<code>set_user_verified()</code>  <code>async</code>","text":"<p>Sets whether User Verification succeeds or fails for an authenticator.</p> <p>The default is true. # noqa</p>"},{"location":"reference/client/","title":"Index","text":""},{"location":"reference/client/#client.client","title":"<code>client</code>","text":"<p>This module is just a place holder for now to experiment with websockets etc.</p>"},{"location":"reference/client/#client.client.CdpClient","title":"<code>CdpClient</code>","text":"<p>An asynchronous client that can dispatch commands to a remote debuggable instance of any CDP enabled browser.</p>"},{"location":"reference/client/client/","title":"Client","text":"<p>This module is just a place holder for now to experiment with websockets etc.</p>"},{"location":"reference/client/client/#client.client.CdpClient","title":"<code>CdpClient</code>","text":"<p>An asynchronous client that can dispatch commands to a remote debuggable instance of any CDP enabled browser.</p>"}]}